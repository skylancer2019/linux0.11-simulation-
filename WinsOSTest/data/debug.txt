Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1 = 0
***task
$2 = {0x22220 <init_task>, 0x0 <startup_32> <repeats 63 times>}
***current
$3 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$4 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2	2
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 10, sys_fork () at system_call.s:217
217		call copy_process
---in sys_fork
___pid
$7 = 0
***cur register gs
gs             0x17	23
***push gs
***cur register esi
esi            0xe0000	917504
***push esi
***cur register edi
edi            0xffc	4092
***push edi
***cur register ebp
ebp            0x28f08	0x28f08 <user_stack+4072>
***push ebp
***cur register eax
eax            0x1	1
;;;eax to nr


    cs=15, eflags=518, esp=167664, ss=23) at fork.c:79
79		p = (struct task_struct *) get_free_page();
---in copy_process
***father pid
$8 = 0
***new pid
$9 = 1
***task number
$10 = 1
***before free page
***cur register ecx
ecx            0x1	1
***cur register edi
edi            0xffc	4092


    cs=15, eflags=518, esp=167664, ss=23) at fork.c:80
80		if (!p)
---in copy_process
___pid
$11 = 0
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0xffc	4092
***eax:physical address
eax            0xfff000	16773120


    cs=15, eflags=518, esp=167664, ss=23) at fork.c:86
86		*p = *current;	/* NOTE! this doesn't copy the supervisor stack */
---in copy_process
___pid
$12 = 0
***copy task struct


    cs=15, eflags=518, esp=167664, ss=23) at fork.c:116
116		p->tss.ldt = _LDT(nr);
---in copy_process
___pid
$13 = 0
***new process state
$14 = 2
***new process tss.esp0
$15 = 16777216


    cs=15, eflags=518, esp=167664, ss=23) at fork.c:117
117		p->tss.trace_bitmap = 0x80000000;
---in copy_process
___pid
$16 = 0
***new LDT index in GDT
$17 = 56
***new cs in LDT
$18 = {a = 159, b = 12647168}
***new ds in LDT
$19 = {a = 159, b = 12645120}


Breakpoint 16, copy_mem (nr=1, p=0xfff000) at fork.c:54
54		p->start_code = new_code_base;
---in copy_mem
___pid
$20 = 0
***new_data_base
$21 = 67108864
***old_data_base
$22 = 0


Breakpoint 88, copy_page_tables (from=0, to=67108864, size=1) at memory.c:163
163		for( ; size-->0 ; from_dir++,to_dir++) {
---in copy_page_tables
___pid
$23 = 0
***from_dir
$24 = (unsigned long *) 0x0 <startup_32>
***to_dir
$25 = (unsigned long *) 0x40 <startup_32+64>
size
$26 = 1


Breakpoint 89, copy_page_tables (from=0, to=67108864, size=0) at memory.c:169
169			if (!(to_page_table = (unsigned long *) get_free_page()))
---in copy_page_tables
___pid
$27 = 0
***before free page
***cur register ecx
ecx            0xfff2e2	16773858
***cur register edi
edi            0xfff2e7	16773863


Breakpoint 90, copy_page_tables (from=0, to=67108864, size=0) at memory.c:171
171			*to_dir = ((unsigned long) to_page_table) | 7;
---in copy_page_tables
___pid
$28 = 0
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0xfff2e7	16773863
***from_page_table
$29 = (unsigned long *) 0x1000 <pg0>
***to_page_table
$30 = (unsigned long *) 0xffe000


    cs=15, eflags=518, esp=167664, ss=23) at fork.c:134
134		set_tss_desc(gdt+(nr<<1)+FIRST_TSS_ENTRY,&(p->tss));
---in copy_process
___pid
$31 = 0
tss in GDT
$32 = 6
***tss address
$33 = (struct tss_struct *) 0xfff2e8
ldt in GDT
$34 = 7
***ldt address
$35 = (struct desc_struct (*)[3]) 0xfff2d0


    cs=15, eflags=518, esp=167664, ss=23) at fork.c:137
137		return last_pid;
---in copy_process
___pid
$36 = 0
***new process state
$37 = 0


Breakpoint 19, sys_fork () at system_call.s:219
219	1:	ret
---in sys_fork
***cur register esp
esp            0x231f0	0x231f0 <init_task+4048>


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$38 = 0
***cur state
$39 = 0
***cur counter
$40 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$41 = 0
***task
$42 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$43 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$44 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$45 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$46 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$47 = 0
***loop pid
$48 = 1
***loop counter
$49 = 15


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$50 = 1


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$51 = 1
***fault address
***cur register edx
edx            0x4028efc	67276540
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=67276540) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$52 = 1


Breakpoint 98, un_wp_page (table_entry=0xffe0a0) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$53 = 1
***table entry
$54 = (unsigned long *) 0xffe0a0


Breakpoint 99, un_wp_page (table_entry=0xffe0a0) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$55 = 1
***physical page address
$56 = 163840


Breakpoint 100, un_wp_page (table_entry=0xffe0a0) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$57 = 1
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xffe0a0) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$58 = 1
***new page
$59 = 16764928


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$60 = 1
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$61 = 1
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffffec	0xffffec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x0	0
***cur register ebx
ebx            0x27f00	163584
***cur register ecx
ecx            0x27f00	163584
***cur register edx
edx            0x22000	139264


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$62 = 1
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$63 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x29fec) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x29fec) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=768, block=0) at buffer.c:278
#5  0x000154c7 in sys_setup (BIOS=0x27f20 <user_stack>) at hd.c:137
#6  0x0000793f in system_call () at system_call.s:94
#7  0x00027f20 in drive_info ()
#8  0x00027f00 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$64 = 1
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$65 = 1
***drive
$66 = 0
***head
$67 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$68 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$69 = 1


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$70 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a010) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a010) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=1) at buffer.c:278
#5  0x0000e53b in read_super (dev=769) at super.c:124
#6  0x0000ebc7 in mount_root () at super.c:261
#7  0x00015615 in sys_setup (BIOS=0x27f20 <user_stack>) at hd.c:157
#8  0x0000793f in system_call () at system_call.s:94
#9  0x00027f20 in drive_info ()
#10 0x00027f00 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$71 = 1
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$72 = 1
***drive
$73 = 0
***head
$74 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$75 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$76 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a034) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a034) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=2) at buffer.c:278
#5  0x0000e643 in read_super (dev=769) at super.c:143
#6  0x0000ebc7 in mount_root () at super.c:261
#7  0x00015615 in sys_setup (BIOS=0x27f20 <user_stack>) at hd.c:157
#8  0x0000793f in system_call () at system_call.s:94
#9  0x00027f20 in drive_info ()
#10 0x00027f00 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$77 = 1
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$78 = 1
***drive
$79 = 0
***head
$80 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$81 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$82 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a058) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a058) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=3) at buffer.c:278
#5  0x0000e643 in read_super (dev=769) at super.c:143
#6  0x0000ebc7 in mount_root () at super.c:261
#7  0x00015615 in sys_setup (BIOS=0x27f20 <user_stack>) at hd.c:157
#8  0x0000793f in system_call () at system_call.s:94
#9  0x00027f20 in drive_info ()
#10 0x00027f00 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$83 = 1
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$84 = 1
***drive
$85 = 0
***head
$86 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$87 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$88 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a07c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a07c) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=4) at buffer.c:278
#5  0x0000e643 in read_super (dev=769) at super.c:143
#6  0x0000ebc7 in mount_root () at super.c:261
#7  0x00015615 in sys_setup (BIOS=0x27f20 <user_stack>) at hd.c:157
#8  0x0000793f in system_call () at system_call.s:94
#9  0x00027f20 in drive_info ()
#10 0x00027f00 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$89 = 1
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$90 = 1
***drive
$91 = 0
***head
$92 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$93 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$94 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a0a0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a0a0) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=5) at buffer.c:278
#5  0x0000e6a2 in read_super (dev=769) at super.c:148
#6  0x0000ebc7 in mount_root () at super.c:261
#7  0x00015615 in sys_setup (BIOS=0x27f20 <user_stack>) at hd.c:157
#8  0x0000793f in system_call () at system_call.s:94
#9  0x00027f20 in drive_info ()
#10 0x00027f00 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$95 = 1
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$96 = 1
***drive
$97 = 0
***head
$98 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$99 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$100 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a0c4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a0c4) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=6) at buffer.c:278
#5  0x0000e6a2 in read_super (dev=769) at super.c:148
#6  0x0000ebc7 in mount_root () at super.c:261
#7  0x00015615 in sys_setup (BIOS=0x27f20 <user_stack>) at hd.c:157
#8  0x0000793f in system_call () at system_call.s:94
#9  0x00027f20 in drive_info ()
#10 0x00027f00 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$101 = 1
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$102 = 1
***drive
$103 = 0
***head
$104 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$105 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$106 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a0e8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a0e8) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=7) at buffer.c:278
#5  0x0000e6a2 in read_super (dev=769) at super.c:148
#6  0x0000ebc7 in mount_root () at super.c:261
#7  0x00015615 in sys_setup (BIOS=0x27f20 <user_stack>) at hd.c:157
#8  0x0000793f in system_call () at system_call.s:94
#9  0x00027f20 in drive_info ()
#10 0x00027f00 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$107 = 1
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$108 = 1
***drive
$109 = 0
***head
$110 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$111 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$112 = 1
***task
$113 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$114 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$115 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$116 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$117 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a10c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a10c) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=8) at buffer.c:278
#5  0x0000e6a2 in read_super (dev=769) at super.c:148
#6  0x0000ebc7 in mount_root () at super.c:261
#7  0x00015615 in sys_setup (BIOS=0x27f20 <user_stack>) at hd.c:157
#8  0x0000793f in system_call () at system_call.s:94
#9  0x00027f20 in drive_info ()
#10 0x00027f00 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$118 = 1
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$119 = 1
***drive
$120 = 0
***head
$121 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$122 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$123 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a130) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a130) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=9) at buffer.c:278
#5  0x0000e6a2 in read_super (dev=769) at super.c:148
#6  0x0000ebc7 in mount_root () at super.c:261
#7  0x00015615 in sys_setup (BIOS=0x27f20 <user_stack>) at hd.c:157
#8  0x0000793f in system_call () at system_call.s:94
#9  0x00027f20 in drive_info ()
#10 0x00027f00 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$124 = 1
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$125 = 1
***drive
$126 = 0
***head
$127 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$128 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$129 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a154) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a154) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=10) at buffer.c:278
#5  0x0000e6a2 in read_super (dev=769) at super.c:148
#6  0x0000ebc7 in mount_root () at super.c:261
#7  0x00015615 in sys_setup (BIOS=0x27f20 <user_stack>) at hd.c:157
#8  0x0000793f in system_call () at system_call.s:94
#9  0x00027f20 in drive_info ()
#10 0x00027f00 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$130 = 1
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$131 = 1
***drive
$132 = 0
***head
$133 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$134 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$135 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a178) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a178) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=11) at buffer.c:278
#5  0x0000e6a2 in read_super (dev=769) at super.c:148
#6  0x0000ebc7 in mount_root () at super.c:261
#7  0x00015615 in sys_setup (BIOS=0x27f20 <user_stack>) at hd.c:157
#8  0x0000793f in system_call () at system_call.s:94
#9  0x00027f20 in drive_info ()
#10 0x00027f00 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$136 = 1
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$137 = 1
***drive
$138 = 0
***head
$139 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$140 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$141 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a19c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a19c) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=12) at buffer.c:278
#5  0x0000e6a2 in read_super (dev=769) at super.c:148
#6  0x0000ebc7 in mount_root () at super.c:261
#7  0x00015615 in sys_setup (BIOS=0x27f20 <user_stack>) at hd.c:157
#8  0x0000793f in system_call () at system_call.s:94
#9  0x00027f20 in drive_info ()
#10 0x00027f00 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$142 = 1
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$143 = 1
***drive
$144 = 0
***head
$145 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$146 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$147 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a1c0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a1c0) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=13) at buffer.c:278
#5  0x0000d38c in read_inode (inode=0x27618 <inode_table+56>) at inode.c:305
#6  0x0000d2e2 in iget (dev=769, nr=1) at inode.c:290
#7  0x0000ebf8 in mount_root () at super.c:263
#8  0x00015615 in sys_setup (BIOS=0x27f20 <user_stack>) at hd.c:157
#9  0x0000793f in system_call () at system_call.s:94
#10 0x00027f20 in drive_info ()
#11 0x00027f00 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$148 = 1
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$149 = 1
***drive
$150 = 0
***head
$151 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$152 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$153 = 1
***task
$154 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$155 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$156 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$157 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$158 = 1
***task
$159 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$160 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$161 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$162 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$163 = 1
***task
$164 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$165 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$166 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$167 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$168 = 1
***task
$169 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$170 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$171 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$172 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$173 = 1
***task
$174 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$175 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$176 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$177 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$178 = 1
***task
$179 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$180 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$181 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$182 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$183 = 1
***task
$184 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$185 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$186 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$187 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$188 = 1
***task
$189 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$190 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$191 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$192 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$193 = 1
***task
$194 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$195 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$196 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$197 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$198 = 1
***task
$199 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$200 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$201 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$202 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$203 = 1
***task
$204 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$205 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$206 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$207 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$208 = 1
***task
$209 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$210 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$211 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$212 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$213 = 1
***task
$214 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$215 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$216 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$217 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$218 = 1
***task
$219 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$220 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$221 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$222 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$223 = 1
***task
$224 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$225 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$226 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$227 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$228 = 1
***task
$229 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$230 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$231 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$232 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$233 = 1
***task
$234 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$235 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$236 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$237 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$238 = 1
***task
$239 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$240 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$241 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$242 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$243 = 1
***task
$244 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$245 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$246 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$247 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$248 = 1
***task
$249 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$250 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$251 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$252 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$253 = 1
***task
$254 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$255 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$256 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$257 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$258 = 1
***task
$259 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$260 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$261 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$262 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$263 = 1
***task
$264 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$265 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$266 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$267 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$268 = 1
***task
$269 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$270 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$271 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$272 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$273 = 1
***task
$274 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$275 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$276 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$277 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$278 = 1
***task
$279 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$280 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$281 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$282 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$283 = 1
***task
$284 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$285 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$286 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$287 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$288 = 1
***task
$289 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$290 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$291 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$292 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$293 = 1
***task
$294 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$295 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$296 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$297 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$298 = 1
***task
$299 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$300 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$301 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$302 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$303 = 1
***task
$304 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$305 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$306 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$307 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$308 = 1
***task
$309 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$310 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$311 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$312 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$313 = 1


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$314 = 1
***task
$315 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$316 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$317 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$318 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$319 = 1
***task
$320 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$321 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$322 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$323 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$324 = 1
***task
$325 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$326 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$327 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$328 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$329 = 1
***task
$330 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$331 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$332 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$333 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$334 = 1
***task
$335 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$336 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$337 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$338 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$339 = 1
***task
$340 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$341 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$342 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$343 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$344 = 1
***task
$345 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$346 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$347 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$348 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$349 = 1
***task
$350 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$351 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$352 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$353 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$354 = 1
***task
$355 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$356 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$357 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$358 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$359 = 1
***task
$360 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$361 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$362 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$363 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$364 = 1
***task
$365 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$366 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$367 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$368 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$369 = 1


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$370 = 1
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$371 = 1
***cur state
$372 = 0
***cur counter
$373 = 0


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$374 = 1


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$375 = 0
***loop pid
$376 = 1
***loop counter
$377 = 0


Breakpoint 41, schedule () at sched.c:138
138					(*p)->counter = ((*p)->counter >> 1) +
---in schedule
***in loop3
***loop pid
$378 = 1
***loop counter
$379 = 0
***loop priority
$380 = 15
***compute new counter


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$381 = 0
***loop pid
$382 = 1
***loop counter
$383 = 15


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$384 = 1


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$385 = 1
***task
$386 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$387 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$388 = 1
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$389 = 1
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$390 = 1
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$391 = 1
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$392 = 1
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffffec	0xffffec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x19dc7	105927
***cur register ecx
ecx            0x2	2
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$393 = 1
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$394 = 1
***open filename
$395 = 47 '/'
***fd
$396 = 0


    at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$397 = 1
***current->filp[fd]=f


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$398 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a1e4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a1e4) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=659) at buffer.c:278
#5  0x00011303 in find_entry (dir=0xffff08, name=0x19dc8 "dev/tty0", 
    namelen=3, res_dir=0xffff04) at namei.c:129
#6  0x00011800 in get_dir (pathname=0x19dcc "tty0") at namei.c:259
#7  0x000118a6 in dir_namei (pathname=0x19dc7 "/dev/tty0", namelen=0xffff7c, 
    name=0xffff80) at namei.c:285
#8  0x00011aaf in open_namei (pathname=0x19dc7 "/dev/tty0", flag=2, 
    mode=32768, res_inode=0xffffb4) at namei.c:350
#9  0x0000bf7b in sys_open (filename=0x19dc7 "/dev/tty0", flag=2, mode=0)
    at open.c:157
#10 0x0000793f in system_call () at system_call.s:94
#11 0x00019dc7 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$399 = 1
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$400 = 1
***drive
$401 = 0
***head
$402 = 2


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$403 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$404 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a208) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a208) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=14) at buffer.c:278
#5  0x0000d38c in read_inode (inode=0x27650 <inode_table+112>) at inode.c:305
#6  0x0000d2e2 in iget (dev=769, nr=55) at inode.c:290
#7  0x00011870 in get_dir (pathname=0x19dcc "tty0") at namei.c:267
#8  0x000118a6 in dir_namei (pathname=0x19dc7 "/dev/tty0", namelen=0xffff7c, 
    name=0xffff80) at namei.c:285
#9  0x00011aaf in open_namei (pathname=0x19dc7 "/dev/tty0", flag=2, 
    mode=32768, res_inode=0xffffb4) at namei.c:350
#10 0x0000bf7b in sys_open (filename=0x19dc7 "/dev/tty0", flag=2, mode=0)
    at open.c:157
#11 0x0000793f in system_call () at system_call.s:94
#12 0x00019dc7 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$405 = 1
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$406 = 1
***drive
$407 = 0
***head
$408 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$409 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$410 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a22c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a22c) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=3440) at buffer.c:278
#5  0x00011303 in find_entry (dir=0xffff78, name=0x19dcc "tty0", namelen=4, 
    res_dir=0xffff74) at namei.c:129
#6  0x00011b22 in open_namei (pathname=0x19dc7 "/dev/tty0", flag=2, 
    mode=32768, res_inode=0xffffb4) at namei.c:360
#7  0x0000bf7b in sys_open (filename=0x19dc7 "/dev/tty0", flag=2, mode=0)
    at open.c:157
#8  0x0000793f in system_call () at system_call.s:94
#9  0x00019dc7 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$411 = 1
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$412 = 1
***drive
$413 = 0
***head
$414 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$415 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$416 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a250) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a250) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=15) at buffer.c:278
#5  0x0000d38c in read_inode (inode=0x27688 <inode_table+168>) at inode.c:305
#6  0x0000d2e2 in iget (dev=769, nr=66) at inode.c:290
#7  0x00011cfc in open_namei (pathname=0x19dc7 "/dev/tty0", flag=2, 
    mode=32768, res_inode=0xffffb4) at namei.c:398
#8  0x0000bf7b in sys_open (filename=0x19dc7 "/dev/tty0", flag=2, mode=0)
    at open.c:157
#9  0x0000793f in system_call () at system_call.s:94
#10 0x00019dc7 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$417 = 1
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$418 = 1
***drive
$419 = 0
***head
$420 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$421 = 1
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$422 = 1
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$423 = 1
***cur state
$424 = 0
***cur counter
$425 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$426 = 1
***task
$427 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$428 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$429 = 1
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$430 = 1
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$431 = 1
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$432 = 1
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$433 = 1
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffffec	0xffffec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x29	41
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x22000	139264


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$434 = 1
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$435 = 1
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$436 = 1
***cur state
$437 = 0
***cur counter
$438 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$439 = 1
***task
$440 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$441 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$442 = 1
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$443 = 1
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$444 = 1
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$445 = 1
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$446 = 1
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffffec	0xffffec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x29	41
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x22000	139264


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$447 = 1
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$448 = 1
***eax as return
eax            0x2	2
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$449 = 1
***cur state
$450 = 0
***cur counter
$451 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$452 = 1
***task
$453 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$454 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$455 = 1
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$456 = 1
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$457 = 1
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$458 = 1
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


    fmt=0x7a21 <timer_interrupt+47> "\203\304\004\351'\377\377\377\220\215D$\034P\350C\205") at main.c:160
160		write(1,printbuf,i=vsprintf(printbuf, fmt, args));
---in printf
___pid
$459 = 1
***call write


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$460 = 1
***fault address
***cur register edx
edx            0x4025b40	67263296
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=67263296) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$461 = 1


Breakpoint 98, un_wp_page (table_entry=0xffe094) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$462 = 1
***table entry
$463 = (unsigned long *) 0xffe094


Breakpoint 99, un_wp_page (table_entry=0xffe094) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$464 = 1
***physical page address
$465 = 151552


Breakpoint 100, un_wp_page (table_entry=0xffe094) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$466 = 1
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xffe094) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$467 = 1
***new page
$468 = 16760832


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$469 = 1
***task
$470 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$471 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$472 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$473 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$474 = 1
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$475 = 1
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffffec	0xffffec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x25b40	154432
***cur register edx
edx            0x2b	43


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$476 = 1
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$477 = 1


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$478 = 1
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$479 = 1


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$480 = 1
***eax as return
eax            0x2b	43
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$481 = 1
***cur state
$482 = 0
***cur counter
$483 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$484 = 1
***task
$485 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$486 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$487 = 1
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$488 = 1
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$489 = 1
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$490 = 1
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


    fmt=0x7a21 <timer_interrupt+47> "\203\304\004\351'\377\377\377\220\215D$\034P\350C\205") at main.c:160
160		write(1,printbuf,i=vsprintf(printbuf, fmt, args));
---in printf
___pid
$491 = 1
***call write


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$492 = 1
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffffec	0xffffec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x25b40	154432
***cur register edx
edx            0x1a	26


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$493 = 1
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$494 = 1


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$495 = 1
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$496 = 1


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$497 = 1
***eax as return
eax            0x1a	26
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$498 = 1
***cur state
$499 = 0
***cur counter
$500 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$501 = 1
***task
$502 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32> <repeats 62 times>}
***current
$503 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$504 = 1
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$505 = 1
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$506 = 1
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$507 = 1
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$508 = 1
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffffec	0xffffec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2	2
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x25b40	154432
***cur register edx
edx            0x1a	26


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$509 = 1
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 10, sys_fork () at system_call.s:217
217		call copy_process
---in sys_fork
___pid
$510 = 1
***cur register gs
gs             0x17	23
***push gs
***cur register esi
esi            0xe0000	917504
***push esi
***cur register edi
edi            0xffc	4092
***push edi
***cur register ebp
ebp            0x28f08	0x28f08 <user_stack+4072>
***push ebp
***cur register eax
eax            0x2	2
;;;eax to nr


    eip=27167, cs=15, eflags=514, esp=167632, ss=23) at fork.c:79
79		p = (struct task_struct *) get_free_page();
---in copy_process
***father pid
$511 = 1
***new pid
$512 = 2
***task number
$513 = 2
***before free page
***cur register ecx
ecx            0x2	2
***cur register edi
edi            0xffc	4092


    eip=27167, cs=15, eflags=514, esp=167632, ss=23) at fork.c:80
80		if (!p)
---in copy_process
___pid
$514 = 1
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0xffc	4092
***eax:physical address
eax            0xffb000	16756736


    eip=27167, cs=15, eflags=514, esp=167632, ss=23) at fork.c:86
86		*p = *current;	/* NOTE! this doesn't copy the supervisor stack */
---in copy_process
___pid
$515 = 1
***copy task struct


    eip=27167, cs=15, eflags=514, esp=167632, ss=23) at fork.c:116
116		p->tss.ldt = _LDT(nr);
---in copy_process
___pid
$516 = 1
***new process state
$517 = 2
***new process tss.esp0
$518 = 16760832


    eip=27167, cs=15, eflags=514, esp=167632, ss=23) at fork.c:117
117		p->tss.trace_bitmap = 0x80000000;
---in copy_process
___pid
$519 = 1
***new LDT index in GDT
$520 = 72
***new cs in LDT
$521 = {a = 159, b = 79756032}
***new ds in LDT
$522 = {a = 159, b = 79753984}


Breakpoint 16, copy_mem (nr=2, p=0xffb000) at fork.c:54
54		p->start_code = new_code_base;
---in copy_mem
___pid
$523 = 1
***new_data_base
$524 = 134217728
***old_data_base
$525 = 67108864


    at memory.c:163
163		for( ; size-->0 ; from_dir++,to_dir++) {
---in copy_page_tables
___pid
$526 = 1
***from_dir
$527 = (unsigned long *) 0x40 <startup_32+64>
***to_dir
$528 = (unsigned long *) 0x80 <setup_idt+15>
size
$529 = 1


    at memory.c:169
169			if (!(to_page_table = (unsigned long *) get_free_page()))
---in copy_page_tables
___pid
$530 = 1
***before free page
***cur register ecx
ecx            0xffb2e2	16757474
***cur register edi
edi            0xffb2e7	16757479


    at memory.c:171
171			*to_dir = ((unsigned long) to_page_table) | 7;
---in copy_page_tables
___pid
$531 = 1
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0xffb2e7	16757479
***from_page_table
$532 = (unsigned long *) 0xffe000
***to_page_table
$533 = (unsigned long *) 0xffa000


    eip=27167, cs=15, eflags=514, esp=167632, ss=23) at fork.c:134
134		set_tss_desc(gdt+(nr<<1)+FIRST_TSS_ENTRY,&(p->tss));
---in copy_process
___pid
$534 = 1
tss in GDT
$535 = 8
***tss address
$536 = (struct tss_struct *) 0xffb2e8
ldt in GDT
$537 = 9
***ldt address
$538 = (struct desc_struct (*)[3]) 0xffb2d0


    eip=27167, cs=15, eflags=514, esp=167632, ss=23) at fork.c:137
137		return last_pid;
---in copy_process
___pid
$539 = 1
***new process state
$540 = 0


Breakpoint 19, sys_fork () at system_call.s:219
219	1:	ret
---in sys_fork
***cur register esp
esp            0xffffd0	0xffffd0


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$541 = 1
***cur state
$542 = 0
***cur counter
$543 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$544 = 1
***task
$545 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$546 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$547 = 1
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$548 = 1
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$549 = 1
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$550 = 1
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$551 = 1
***fault address
***cur register edx
edx            0x4028ed8	67276504
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=67276504) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$552 = 1


Breakpoint 98, un_wp_page (table_entry=0xffe0a0) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$553 = 1
***table entry
$554 = (unsigned long *) 0xffe0a0


Breakpoint 99, un_wp_page (table_entry=0xffe0a0) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$555 = 1
***physical page address
$556 = 16764928


Breakpoint 100, un_wp_page (table_entry=0xffe0a0) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$557 = 1
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xffe0a0) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$558 = 1
***new page
$559 = 16748544


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$560 = 1
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$561 = 1
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffffec	0xffffec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x7	7
***cur register ebx
ebx            0xffffffff	-1
***cur register ecx
ecx            0x28ed0	167632
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$562 = 1
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    options=0) at exit.c:146
146		verify_area(stat_addr,4);
---in sys_waitpid
___pid
$563 = 1


Breakpoint 91, write_verify (address=67272704) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$564 = 1
***call stack
#0  write_verify (address=67272704) at memory.c:267
#1  0x000085cd in verify_area (addr=0x28ed0 <user_stack+4016>, size=-300)
    at fork.c:35
#2  0x0000a4ea in sys_waitpid (pid=-1, stat_addr=0x28ed0 <user_stack+4016>, 
    options=0) at exit.c:146
#3  0x0000793f in system_call () at system_call.s:94
#4  0xffffffff in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)
***address
$565 = 67272704


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x0000a6f8 in sys_waitpid (pid=-1, stat_addr=0x28ed0 <user_stack+4016>, 
    options=0) at exit.c:187
#2  0x0000793f in system_call () at system_call.s:94
#3  0xffffffff in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$566 = 0
***loop pid
$567 = 2
***loop counter
$568 = 15


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$569 = 1
***loop pid
$570 = 1
***loop counter
$571 = 14


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$572 = 2


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$573 = 2
***fault address
***cur register edx
edx            0x8028ed8	134385368
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134385368) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$574 = 2


Breakpoint 98, un_wp_page (table_entry=0xffa0a0) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$575 = 2
***table entry
$576 = (unsigned long *) 0xffa0a0


Breakpoint 99, un_wp_page (table_entry=0xffa0a0) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$577 = 2
***physical page address
$578 = 16764928


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$579 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$580 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x22000	139264


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$581 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=0) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$582 = 2
***fd
$583 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$584 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$585 = 2
***cur state
$586 = 0
***cur counter
$587 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$588 = 2
***task
$589 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$590 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$591 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$592 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$593 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$594 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$595 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x19e0e	105998
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$596 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$597 = 2
***open filename
$598 = 47 '/'
***fd
$599 = 0


    at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$600 = 2
***current->filp[fd]=f


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$601 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a274) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a274) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=3441) at buffer.c:278
#5  0x00011303 in find_entry (dir=0xffbf78, name=0x19e13 "rc", namelen=2, 
    res_dir=0xffbf74) at namei.c:129
#6  0x00011b22 in open_namei (pathname=0x19e0e "/etc/rc", flag=0, mode=32768, 
    res_inode=0xffbfb4) at namei.c:360
#7  0x0000bf7b in sys_open (filename=0x19e0e "/etc/rc", flag=0, mode=0)
    at open.c:157
#8  0x0000793f in system_call () at system_call.s:94
#9  0x00019e0e in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$602 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$603 = 2
***drive
$604 = 0
***head
$605 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$606 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$607 = 2
***task
$608 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$609 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$610 = 2
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$611 = 2
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$612 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$613 = 2
***cur state
$614 = 0
***cur counter
$615 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$616 = 2
***task
$617 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$618 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$619 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$620 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$621 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$622 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$623 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0xb	11
***cur register ebx
ebx            0x19da0	105888
***cur register ecx
ecx            0x22020	139296
***cur register edx
edx            0x22028	139304


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$624 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 44, sys_execve () at system_call.s:202
202		pushl %eax
---in sys_execve
___pid
$625 = 2
***cur register eax
eax            0xffbfec	16760812
***push eax


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$626 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a298) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a298) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=784) at buffer.c:278
#5  0x00011303 in find_entry (dir=0xffba84, name=0x19da5 "sh", namelen=2, 
    res_dir=0xffba80) at namei.c:129
#6  0x00011986 in namei (pathname=0x19da0 "/bin/sh") at namei.c:315
#7  0x00010009 in do_execve (eip=0xffbfec, tmp=31039, 
    filename=0x19da0 "/bin/sh", argv=0x22020 <argv_rc>, envp=0x22028 <envp_rc>)
    at exec.c:199
#8  0x00007a34 in sys_execve () at system_call.s:203
#9  0x00ffbfec in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$627 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$628 = 2
***drive
$629 = 0
***head
$630 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$631 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


    argv=0x22020 <argv_rc>, envp=0x22028 <envp_rc>) at exec.c:210
210		e_uid = (i & S_ISUID) ? inode->i_uid : current->euid;
---in do_execve
___pid
$632 = 2
***cur euid
$633 = 0
***cur egid
$634 = 0
***imode
$635 = 33225
***inode euid
$636 = 0
***inode egid
$637 = 0 '\000'


    argv=0x22020 <argv_rc>, envp=0x22028 <envp_rc>) at exec.c:212
212		if (current->euid == inode->i_uid)
---in do_execve
___pid
$638 = 2
***changed euid
$639 = 0
***changed egid
$640 = 0
***compare priority


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$641 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a2bc) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a2bc) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=822) at buffer.c:278
#5  0x000101c7 in do_execve (eip=0xffbfec, tmp=31039, 
    filename=0x19da0 "/bin/sh", argv=0x22020 <argv_rc>, envp=0x22028 <envp_rc>)
    at exec.c:221
#6  0x00007a34 in sys_execve () at system_call.s:203
#7  0x00ffbfec in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$642 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$643 = 2
***drive
$644 = 0
***head
$645 = 11


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$646 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


    p=131068, from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$647 = 2
***tmp:cur parameter address pointer
$648 = 0x19daf "-/bin/sh"
***len
$649 = 7
***cur pointer
$650 = 131068


    p=131067, from_kmem=0) at exec.c:142
142					if (from_kmem==2)
---in copy_strings
___pid
$651 = 2
***cur physical pointer
$652 = 0xff8000 ""


    p=131061, from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$653 = 2
***tmp:cur parameter address pointer
$654 = 0x19da8 "HOME=/"
***len
$655 = 8
***cur pointer
$656 = 131061


    p=131060, from_kmem=0) at exec.c:142
142					if (from_kmem==2)
---in copy_strings
___pid
$657 = 2
***cur physical pointer
$658 = 0xff8000 ""


    argv=0x22020 <argv_rc>, envp=0x22028 <envp_rc>) at exec.c:313
313			if (!p) {
---in do_execve
___pid
$659 = 2
***parameter pointer
$660 = 131053


Breakpoint 94, free_page_tables (from=134217728, size=1) at memory.c:116
116		for ( ; size-->0 ; dir++) {
---in free_page_tables
___pid
$661 = 2
***from
$662 = 134217728
***size
$663 = 1
***dir
$664 = (unsigned long *) 0x80 <setup_idt+15>


Breakpoint 94, free_page_tables (from=134217728, size=1) at memory.c:116
116		for ( ; size-->0 ; dir++) {
---in free_page_tables
___pid
$665 = 2
***from
$666 = 134217728
***size
$667 = 1
***dir
$668 = (unsigned long *) 0x80 <setup_idt+15>


Breakpoint 51, change_ldt (text_size=266240, page=0xffbed0) at exec.c:167
167		set_limit(current->ldt[2],data_limit);
---in change_ldt
___pid
$669 = 2
***data_limit
$670 = 67108864
***code_limit
$671 = 266240


Breakpoint 52, change_ldt (text_size=266240, page=0xffbed0) at exec.c:174
174				put_page(page[i],data_base);
---in change_ldt
___pid
$672 = 2
***data_base
$673 = 201322496


Breakpoint 104, put_page (page=16744448, address=201322496) at memory.c:211
211			if (!(tmp=get_free_page()))
---in put_page
___pid
$674 = 2
***page_table
$675 = (unsigned long *) 0xbc <setup_gdt+27>
***page$676 = 16744448


    argv=0x22020 <argv_rc>, envp=0x22028 <envp_rc>) at exec.c:336
336		p = (unsigned long) create_tables((char *)p,argc,envc);
---in do_execve
___pid
$677 = 2
***parameter space pointer change
$678 = 67108845


Breakpoint 55, create_tables (p=0x3ffffed "", argc=1, envc=1) at exec.c:52
52		sp -= envc+1;
---in create_tables
___pid
$679 = 2
***sp
$680 = (unsigned long *) 0x3ffffec
***argc
$681 = 1
***envc
$682 = 1


    argv=0x22020 <argv_rc>, envp=0x22028 <envp_rc>) at exec.c:347
347		eip[3] = p;			/* stack pointer */
---in do_execve
___pid
$683 = 2
***new entry
$684 = 0
***esp changeP


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$685 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$686 = 2
***cur state
$687 = 0
***cur counter
$688 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$689 = 2
***task
$690 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$691 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$692 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$693 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$694 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$695 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$696 = 2
***fault address
***cur register edx
edx            0x8000000	134217728
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134217728) at memory.c:367
367	{
---in do_no_page
___pid
$697 = 2
***address
$698 = 134217728


Breakpoint 103, do_no_page (error_code=4, address=134217728) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$699 = 2
***page
$700 = 16752640
***block
$701 = 1


Breakpoint 42, do_no_page (error_code=4, address=134217728) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$702 = 2
***nr array$703 = 823
$704 = 824
$705 = 825
$706 = 826


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$707 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a2e0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a2e0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16752640, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134217728) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$708 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$709 = 2
***drive
$710 = 0
***head
$711 = 11


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$712 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$713 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a304) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a304) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16752640, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134217728) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$714 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$715 = 2
***drive
$716 = 0
***head
$717 = 11


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$718 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$719 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a328) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a328) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16752640, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134217728) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$720 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$721 = 2
***drive
$722 = 0
***head
$723 = 11


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$724 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$725 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a34c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a34c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16752640, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134217728) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$726 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$727 = 2
***drive
$728 = 0
***head
$729 = 11


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$730 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 104, put_page (page=16752640, address=134217728) at memory.c:211
211			if (!(tmp=get_free_page()))
---in put_page
___pid
$731 = 2
***page_table
$732 = (unsigned long *) 0x80 <setup_idt+15>
***page$733 = 16752640


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$734 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$735 = 2
***fault address
***cur register edx
edx            0x8041000	134483968
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134483968) at memory.c:367
367	{
---in do_no_page
___pid
$736 = 2
***address
$737 = 134483968


Breakpoint 103, do_no_page (error_code=6, address=134483968) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$738 = 2
***page
$739 = 16736256
***block
$740 = 261


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$741 = 2
***task
$742 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$743 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$744 = 2
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$745 = 2
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$746 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a370) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a370) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=829) at buffer.c:278
#5  0x0000ca5d in _bmap (inode=0x27768 <inode_table+392>, block=254, create=0)
    at inode.c:98
#6  0x0000cd24 in bmap (inode=0x27768 <inode_table+392>, block=261)
    at inode.c:142
#7  0x0000b751 in do_no_page (error_code=6, address=134483968) at memory.c:386
#8  0x0000b9cf in page_fault () at page.s:30
#9  0x00000006 in startup_32 () at head.s:20
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$747 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$748 = 2
***drive
$749 = 0
***head
$750 = 11


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$751 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 42, do_no_page (error_code=6, address=134483968) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$752 = 2
***nr array$753 = 1084
$754 = 1085
$755 = 1086
$756 = 1087


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$757 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a394) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a394) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16736256, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=6, address=134483968) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000006 in startup_32 () at head.s:20
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$758 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$759 = 2
***drive
$760 = 0
***head
$761 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$762 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$763 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a3b8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a3b8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16736256, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=6, address=134483968) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000006 in startup_32 () at head.s:20
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$764 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$765 = 2
***drive
$766 = 0
***head
$767 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$768 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$769 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a3dc) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a3dc) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16736256, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=6, address=134483968) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000006 in startup_32 () at head.s:20
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$770 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$771 = 2
***drive
$772 = 0
***head
$773 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$774 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$775 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a400) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a400) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16736256, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=6, address=134483968) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000006 in startup_32 () at head.s:20
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$776 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$777 = 2
***drive
$778 = 0
***head
$779 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$780 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$781 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$782 = 2
***fault address
***cur register edx
edx            0x803d854	134469716
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134469716) at memory.c:367
367	{
---in do_no_page
___pid
$783 = 2
***address
$784 = 134469716


Breakpoint 103, do_no_page (error_code=4, address=134467584) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$785 = 2
***page
$786 = 16732160
***block
$787 = 245


Breakpoint 42, do_no_page (error_code=4, address=134467584) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$788 = 2
***nr array$789 = 1068
$790 = 1069
$791 = 1070
$792 = 1071


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$793 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a424) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a424) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16732160, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134467584) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$794 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$795 = 2
***drive
$796 = 0
***head
$797 = 8


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$798 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$799 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a448) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a448) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16732160, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134467584) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$800 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$801 = 2
***drive
$802 = 0
***head
$803 = 8


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$804 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$805 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a46c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a46c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16732160, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134467584) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$806 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$807 = 2
***drive
$808 = 0
***head
$809 = 8


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$810 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$811 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a490) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a490) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16732160, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134467584) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$812 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$813 = 2
***drive
$814 = 0
***head
$815 = 8


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$816 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$817 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$818 = 2
***fault address
***cur register edx
edx            0x8046b18	134507288
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134507288) at memory.c:367
367	{
---in do_no_page
___pid
$819 = 2
***address
$820 = 134507288


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$821 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$822 = 2
***fault address
***cur register edx
edx            0x8007da8	134249896
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134249896) at memory.c:367
367	{
---in do_no_page
___pid
$823 = 2
***address
$824 = 134249896


Breakpoint 103, do_no_page (error_code=4, address=134246400) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$825 = 2
***page
$826 = 16723968
***block
$827 = 29


Breakpoint 42, do_no_page (error_code=4, address=134246400) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$828 = 2
***nr array$829 = 852
$830 = 853
$831 = 854
$832 = 855


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$833 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a4b4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a4b4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16723968, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134246400) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$834 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$835 = 2
***drive
$836 = 0
***head
$837 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$838 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$839 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a4d8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a4d8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16723968, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134246400) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$840 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$841 = 2
***drive
$842 = 0
***head
$843 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$844 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$845 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a4fc) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a4fc) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16723968, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134246400) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$846 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$847 = 2
***drive
$848 = 0
***head
$849 = 13


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$850 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$851 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a520) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a520) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16723968, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134246400) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$852 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$853 = 2
***drive
$854 = 0
***head
$855 = 13


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$856 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$857 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$858 = 2
***fault address
***cur register edx
edx            0x8039c18	134454296
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134454296) at memory.c:367
367	{
---in do_no_page
___pid
$859 = 2
***address
$860 = 134454296


Breakpoint 103, do_no_page (error_code=4, address=134451200) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$861 = 2
***page
$862 = 16719872
***block
$863 = 229


Breakpoint 42, do_no_page (error_code=4, address=134451200) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$864 = 2
***nr array$865 = 1052
$866 = 1053
$867 = 1054
$868 = 1055


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$869 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a544) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a544) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16719872, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134451200) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$870 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$871 = 2
***drive
$872 = 0
***head
$873 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$874 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$875 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a568) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a568) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16719872, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134451200) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$876 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$877 = 2
***drive
$878 = 0
***head
$879 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$880 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$881 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a58c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a58c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16719872, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134451200) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$882 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$883 = 2
***drive
$884 = 0
***head
$885 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$886 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$887 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a5b0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a5b0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16719872, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134451200) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$888 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$889 = 2
***drive
$890 = 0
***head
$891 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$892 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$893 = 2
***task
$894 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$895 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$896 = 2
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$897 = 2
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$898 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$899 = 2
***fault address
***cur register edx
edx            0x801a390	134325136
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134325136) at memory.c:367
367	{
---in do_no_page
___pid
$900 = 2
***address
$901 = 134325136


Breakpoint 103, do_no_page (error_code=4, address=134324224) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$902 = 2
***page
$903 = 16715776
***block
$904 = 105


Breakpoint 42, do_no_page (error_code=4, address=134324224) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$905 = 2
***nr array$906 = 928
$907 = 929
$908 = 930
$909 = 931


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$910 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a5d4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a5d4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16715776, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134324224) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$911 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$912 = 2
***drive
$913 = 0
***head
$914 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$915 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$916 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a5f8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a5f8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16715776, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134324224) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$917 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$918 = 2
***drive
$919 = 0
***head
$920 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$921 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$922 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a61c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a61c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16715776, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134324224) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$923 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$924 = 2
***drive
$925 = 0
***head
$926 = 1


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$927 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$928 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a640) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a640) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16715776, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134324224) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$929 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$930 = 2
***drive
$931 = 0
***head
$932 = 1


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$933 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$934 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$935 = 2
***fault address
***cur register edx
edx            0x804522e	134500910
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134500910) at memory.c:367
367	{
---in do_no_page
___pid
$936 = 2
***address
$937 = 134500910


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$938 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$939 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3a	58
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3fffff1	67108849


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$940 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$941 = 2
***eax as return
eax            0xffffffda	-38
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$942 = 2
***cur state
$943 = 0
***cur counter
$944 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$945 = 2
***task
$946 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$947 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$948 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$949 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$950 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$951 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$952 = 2
***fault address
***cur register edx
edx            0x80440b4	134496436
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134496436) at memory.c:367
367	{
---in do_no_page
___pid
$953 = 2
***address
$954 = 134496436


Breakpoint 103, do_no_page (error_code=4, address=134496256) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$955 = 2
***page
$956 = 16707584
***block
$957 = 273


Breakpoint 42, do_no_page (error_code=4, address=134496256) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$958 = 2
***nr array$959 = 1096
$960 = 1097
$961 = 1098
$962 = 1099


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$963 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a664) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a664) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16707584, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134496256) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$964 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$965 = 2
***drive
$966 = 0
***head
$967 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$968 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$969 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a688) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a688) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16707584, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134496256) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$970 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$971 = 2
***drive
$972 = 0
***head
$973 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$974 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$975 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a6ac) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a6ac) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16707584, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134496256) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$976 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$977 = 2
***drive
$978 = 0
***head
$979 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$980 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$981 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a6d0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a6d0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16707584, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134496256) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$982 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$983 = 2
***drive
$984 = 0
***head
$985 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$986 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$987 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$988 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x46bb8	289720
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$989 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=289720) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$990 = 2
***end_data_seg
$991 = 289720
***cur brk
$992 = 289720


Breakpoint 59, sys_brk (end_data_seg=289720) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$993 = 2
***cur brk
$994 = 289720


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$995 = 2
***eax as return
eax            0x46bb8	289720
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$996 = 2
***cur state
$997 = 0
***cur counter
$998 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$999 = 2
***task
$1000 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1001 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1002 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1003 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1004 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1005 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1006 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x46c00	289792
***cur register ecx
ecx            0x48	72
***cur register edx
edx            0x48	72


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1007 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=289792) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$1008 = 2
***end_data_seg
$1009 = 289792
***cur brk
$1010 = 289720


Breakpoint 59, sys_brk (end_data_seg=289792) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$1011 = 2
***cur brk
$1012 = 289792


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1013 = 2
***eax as return
eax            0x46c00	289792
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1014 = 2
***cur state
$1015 = 0
***cur counter
$1016 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1017 = 2
***task
$1018 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1019 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1020 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1021 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1022 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1023 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1024 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x47400	291840
***cur register ecx
ecx            0x48	72
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1025 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=291840) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$1026 = 2
***end_data_seg
$1027 = 291840
***cur brk
$1028 = 289792


Breakpoint 59, sys_brk (end_data_seg=291840) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$1029 = 2
***cur brk
$1030 = 291840


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1031 = 2
***eax as return
eax            0x47400	291840
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1032 = 2
***cur state
$1033 = 0
***cur counter
$1034 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1035 = 2
***task
$1036 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1037 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1038 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1039 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1040 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1041 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1042 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x47400	291840
***cur register ecx
ecx            0x6	6
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1043 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=291840) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$1044 = 2
***end_data_seg
$1045 = 291840
***cur brk
$1046 = 291840


Breakpoint 59, sys_brk (end_data_seg=291840) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$1047 = 2
***cur brk
$1048 = 291840


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1049 = 2
***eax as return
eax            0x47400	291840
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1050 = 2
***cur state
$1051 = 0
***cur counter
$1052 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1053 = 2
***task
$1054 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1055 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1056 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1057 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1058 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1059 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1060 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x47c00	293888
***cur register ecx
ecx            0x6	6
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1061 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=293888) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$1062 = 2
***end_data_seg
$1063 = 293888
***cur brk
$1064 = 291840


Breakpoint 59, sys_brk (end_data_seg=293888) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$1065 = 2
***cur brk
$1066 = 293888


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1067 = 2
***eax as return
eax            0x47c00	293888
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1068 = 2
***cur state
$1069 = 0
***cur counter
$1070 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1071 = 2
***task
$1072 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1073 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1074 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1075 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1076 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1077 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$1078 = 2
***fault address
***cur register edx
edx            0x8047404	134509572
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134509572) at memory.c:367
367	{
---in do_no_page
___pid
$1079 = 2
***address
$1080 = 134509572


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$1081 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1082 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x47c00	293888
***cur register ecx
ecx            0x6	6
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1083 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=293888) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$1084 = 2
***end_data_seg
$1085 = 293888
***cur brk
$1086 = 293888


Breakpoint 59, sys_brk (end_data_seg=293888) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$1087 = 2
***cur brk
$1088 = 293888


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1089 = 2
***eax as return
eax            0x47c00	293888
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1090 = 2
***cur state
$1091 = 0
***cur counter
$1092 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1093 = 2
***task
$1094 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1095 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1096 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1097 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1098 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1099 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1100 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x48400	295936
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1101 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=295936) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$1102 = 2
***end_data_seg
$1103 = 295936
***cur brk
$1104 = 293888


Breakpoint 59, sys_brk (end_data_seg=295936) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$1105 = 2
***cur brk
$1106 = 295936


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1107 = 2
***eax as return
eax            0x48400	295936
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1108 = 2
***cur state
$1109 = 0
***cur counter
$1110 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1111 = 2
***task
$1112 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1113 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1114 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1115 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1116 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1117 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$1118 = 2
***fault address
***cur register edx
edx            0x8048000	134512640
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134512640) at memory.c:367
367	{
---in do_no_page
___pid
$1119 = 2
***address
$1120 = 134512640


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$1121 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1122 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0xd	13
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x8	8
***cur register edx
edx            0x47c0c	293900


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1123 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1124 = 2
***eax as return
eax            0x5fa97090	1604939920
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1125 = 2
***cur state
$1126 = 0
***cur counter
$1127 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1128 = 2
***task
$1129 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1130 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1131 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1132 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1133 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1134 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1135 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee8	67108584


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1136 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=0, cmd=21505, arg=67108584) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$1137 = 2
***fd
$1138 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1139 = 2
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1140 = 2
***cur state
$1141 = 0
***cur counter
$1142 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1143 = 2
***task
$1144 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1145 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1146 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1147 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1148 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1149 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$1150 = 2
***fault address
***cur register edx
edx            0x8001300	134222592
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134222592) at memory.c:367
367	{
---in do_no_page
___pid
$1151 = 2
***address
$1152 = 134222592


Breakpoint 103, do_no_page (error_code=4, address=134221824) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$1153 = 2
***page
$1154 = 16695296
***block
$1155 = 5


Breakpoint 42, do_no_page (error_code=4, address=134221824) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$1156 = 2
***nr array$1157 = 827
$1158 = 828
$1159 = 830
$1160 = 831


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1161 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a6f4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a6f4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16695296, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134221824) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1162 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1163 = 2
***drive
$1164 = 0
***head
$1165 = 11


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1166 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1167 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a718) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a718) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16695296, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134221824) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1168 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1169 = 2
***drive
$1170 = 0
***head
$1171 = 11


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1172 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1173 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a73c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a73c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16695296, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134221824) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1174 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1175 = 2
***drive
$1176 = 0
***head
$1177 = 11


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1178 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1179 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a760) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a760) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16695296, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134221824) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1180 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1181 = 2
***drive
$1182 = 0
***head
$1183 = 11


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1184 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$1185 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$1186 = 2
***fault address
***cur register edx
edx            0x803c4bc	134464700
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134464700) at memory.c:367
367	{
---in do_no_page
___pid
$1187 = 2
***address
$1188 = 134464700


Breakpoint 103, do_no_page (error_code=4, address=134463488) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$1189 = 2
***page
$1190 = 16691200
***block
$1191 = 241


Breakpoint 42, do_no_page (error_code=4, address=134463488) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$1192 = 2
***nr array$1193 = 1064
$1194 = 1065
$1195 = 1066
$1196 = 1067


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1197 = 2
***task
$1198 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1199 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1200 = 2
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$1201 = 2
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1202 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a784) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a784) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16691200, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134463488) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1203 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1204 = 2
***drive
$1205 = 0
***head
$1206 = 8


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1207 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1208 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a7a8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a7a8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16691200, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134463488) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1209 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1210 = 2
***drive
$1211 = 0
***head
$1212 = 8


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1213 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1214 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a7cc) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a7cc) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16691200, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134463488) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1215 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1216 = 2
***drive
$1217 = 0
***head
$1218 = 8


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1219 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1220 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a7f0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a7f0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16691200, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134463488) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1221 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1222 = 2
***drive
$1223 = 0
***head
$1224 = 8


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1225 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$1226 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1227 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x48400	295936
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1228 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=295936) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$1229 = 2
***end_data_seg
$1230 = 295936
***cur brk
$1231 = 295936


Breakpoint 59, sys_brk (end_data_seg=295936) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$1232 = 2
***cur brk
$1233 = 295936


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1234 = 2
***eax as return
eax            0x48400	295936
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1235 = 2
***cur state
$1236 = 0
***cur counter
$1237 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1238 = 2
***task
$1239 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1240 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1241 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1242 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1243 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1244 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1245 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x48c00	297984
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1246 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=297984) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$1247 = 2
***end_data_seg
$1248 = 297984
***cur brk
$1249 = 295936


Breakpoint 59, sys_brk (end_data_seg=297984) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$1250 = 2
***cur brk
$1251 = 297984


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1252 = 2
***eax as return
eax            0x48c00	297984
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1253 = 2
***cur state
$1254 = 0
***cur counter
$1255 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1256 = 2
***task
$1257 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1258 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1259 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1260 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1261 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1262 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$1263 = 2
***fault address
***cur register edx
edx            0x803fc14	134478868
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134478868) at memory.c:367
367	{
---in do_no_page
___pid
$1264 = 2
***address
$1265 = 134478868


Breakpoint 103, do_no_page (error_code=4, address=134475776) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$1266 = 2
***page
$1267 = 16687104
***block
$1268 = 253


Breakpoint 42, do_no_page (error_code=4, address=134475776) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$1269 = 2
***nr array$1270 = 1076
$1271 = 1077
$1272 = 1078
$1273 = 1079


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1274 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a814) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a814) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16687104, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134475776) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1275 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1276 = 2
***drive
$1277 = 0
***head
$1278 = 8


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1279 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1280 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a838) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a838) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16687104, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134475776) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1281 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1282 = 2
***drive
$1283 = 0
***head
$1284 = 8


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1285 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1286 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a85c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a85c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16687104, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134475776) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1287 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1288 = 2
***drive
$1289 = 0
***head
$1290 = 8


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1291 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1292 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a880) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a880) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16687104, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134475776) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1293 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1294 = 2
***drive
$1295 = 0
***head
$1296 = 8


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1297 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$1298 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1299 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x48c00	297984
***cur register ecx
ecx            0x400	1024
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1300 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=297984) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$1301 = 2
***end_data_seg
$1302 = 297984
***cur brk
$1303 = 297984


Breakpoint 59, sys_brk (end_data_seg=297984) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$1304 = 2
***cur brk
$1305 = 297984


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1306 = 2
***eax as return
eax            0x48c00	297984
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1307 = 2
***cur state
$1308 = 0
***cur counter
$1309 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1310 = 2
***task
$1311 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1312 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1313 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1314 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1315 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1316 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1317 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x49400	300032
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1318 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=300032) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$1319 = 2
***end_data_seg
$1320 = 300032
***cur brk
$1321 = 297984


Breakpoint 59, sys_brk (end_data_seg=300032) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$1322 = 2
***cur brk
$1323 = 300032


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1324 = 2
***eax as return
eax            0x49400	300032
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1325 = 2
***cur state
$1326 = 0
***cur counter
$1327 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1328 = 2
***task
$1329 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1330 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1331 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1332 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1333 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1334 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$1335 = 2
***fault address
***cur register edx
edx            0x804900c	134516748
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134516748) at memory.c:367
367	{
---in do_no_page
___pid
$1336 = 2
***address
$1337 = 134516748


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$1338 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$1339 = 2
***fault address
***cur register edx
edx            0x801edb4	134344116
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134344116) at memory.c:367
367	{
---in do_no_page
___pid
$1340 = 2
***address
$1341 = 134344116


Breakpoint 103, do_no_page (error_code=4, address=134340608) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$1342 = 2
***page
$1343 = 16678912
***block
$1344 = 121


Breakpoint 42, do_no_page (error_code=4, address=134340608) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$1345 = 2
***nr array$1346 = 944
$1347 = 945
$1348 = 946
$1349 = 947


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1350 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a8a4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a8a4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16678912, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134340608) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1351 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1352 = 2
***drive
$1353 = 0
***head
$1354 = 1


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1355 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1356 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a8c8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a8c8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16678912, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134340608) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1357 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1358 = 2
***drive
$1359 = 0
***head
$1360 = 1


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1361 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1362 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a8ec) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a8ec) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16678912, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134340608) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1363 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1364 = 2
***drive
$1365 = 0
***head
$1366 = 1


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1367 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1368 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a910) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a910) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16678912, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134340608) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1369 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1370 = 2
***drive
$1371 = 0
***head
$1372 = 1


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1373 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$1374 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$1375 = 2
***fault address
***cur register edx
edx            0x803a404	134456324
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134456324) at memory.c:367
367	{
---in do_no_page
___pid
$1376 = 2
***address
$1377 = 134456324


Breakpoint 103, do_no_page (error_code=4, address=134455296) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$1378 = 2
***page
$1379 = 16674816
***block
$1380 = 233


Breakpoint 42, do_no_page (error_code=4, address=134455296) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$1381 = 2
***nr array$1382 = 1056
$1383 = 1057
$1384 = 1058
$1385 = 1059


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1386 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a934) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a934) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16674816, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134455296) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1387 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1388 = 2
***drive
$1389 = 0
***head
$1390 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1391 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1392 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a958) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a958) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16674816, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134455296) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1393 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1394 = 2
***drive
$1395 = 0
***head
$1396 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1397 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1398 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a97c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a97c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16674816, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134455296) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1399 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1400 = 2
***drive
$1401 = 0
***head
$1402 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1403 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1404 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a9a0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a9a0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16674816, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134455296) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1405 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1406 = 2
***drive
$1407 = 0
***head
$1408 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1409 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$1410 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$1411 = 2
***fault address
***cur register edx
edx            0x802122c	134353452
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134353452) at memory.c:367
367	{
---in do_no_page
___pid
$1412 = 2
***address
$1413 = 134353452


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1414 = 2
***task
$1415 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1416 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1417 = 2
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$1418 = 2
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 103, do_no_page (error_code=4, address=134352896) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$1419 = 2
***page
$1420 = 16670720
***block
$1421 = 133


Breakpoint 42, do_no_page (error_code=4, address=134352896) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$1422 = 2
***nr array$1423 = 956
$1424 = 957
$1425 = 958
$1426 = 959


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1427 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a9c4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a9c4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16670720, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134352896) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1428 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1429 = 2
***drive
$1430 = 0
***head
$1431 = 2


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1432 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1433 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2a9e8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2a9e8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16670720, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134352896) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1434 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1435 = 2
***drive
$1436 = 0
***head
$1437 = 2


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1438 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1439 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2aa0c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2aa0c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16670720, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134352896) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1440 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1441 = 2
***drive
$1442 = 0
***head
$1443 = 2


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1444 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1445 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2aa30) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2aa30) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16670720, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134352896) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1446 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1447 = 2
***drive
$1448 = 0
***head
$1449 = 2


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1450 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$1451 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$1452 = 2
***fault address
***cur register edx
edx            0x8020f38	134352696
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134352696) at memory.c:367
367	{
---in do_no_page
___pid
$1453 = 2
***address
$1454 = 134352696


Breakpoint 103, do_no_page (error_code=4, address=134348800) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$1455 = 2
***page
$1456 = 16666624
***block
$1457 = 129


Breakpoint 42, do_no_page (error_code=4, address=134348800) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$1458 = 2
***nr array$1459 = 952
$1460 = 953
$1461 = 954
$1462 = 955


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1463 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2aa54) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2aa54) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16666624, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134348800) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1464 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1465 = 2
***drive
$1466 = 0
***head
$1467 = 2


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1468 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1469 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2aa78) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2aa78) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16666624, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134348800) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1470 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1471 = 2
***drive
$1472 = 0
***head
$1473 = 2


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1474 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1475 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2aa9c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2aa9c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16666624, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134348800) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1476 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1477 = 2
***drive
$1478 = 0
***head
$1479 = 2


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1480 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1481 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2aac0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2aac0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16666624, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134348800) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1482 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1483 = 2
***drive
$1484 = 0
***head
$1485 = 2


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1486 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$1487 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1488 = 2
***task
$1489 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1490 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1491 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1492 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1493 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1494 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$1495 = 2
***fault address
***cur register edx
edx            0x80190bc	134320316
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134320316) at memory.c:367
367	{
---in do_no_page
___pid
$1496 = 2
***address
$1497 = 134320316


Breakpoint 103, do_no_page (error_code=4, address=134320128) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$1498 = 2
***page
$1499 = 16662528
***block
$1500 = 101


Breakpoint 42, do_no_page (error_code=4, address=134320128) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$1501 = 2
***nr array$1502 = 924
$1503 = 925
$1504 = 926
$1505 = 927


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1506 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2aae4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2aae4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16662528, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134320128) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1507 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1508 = 2
***drive
$1509 = 0
***head
$1510 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1511 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1512 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ab08) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ab08) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16662528, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134320128) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1513 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1514 = 2
***drive
$1515 = 0
***head
$1516 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1517 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1518 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ab2c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ab2c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16662528, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134320128) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1519 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1520 = 2
***drive
$1521 = 0
***head
$1522 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1523 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1524 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ab50) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ab50) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16662528, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134320128) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1525 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1526 = 2
***drive
$1527 = 0
***head
$1528 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1529 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$1530 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$1531 = 2
***fault address
***cur register edx
edx            0x803b11c	134459676
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134459676) at memory.c:367
367	{
---in do_no_page
___pid
$1532 = 2
***address
$1533 = 134459676


Breakpoint 103, do_no_page (error_code=4, address=134459392) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$1534 = 2
***page
$1535 = 16658432
***block
$1536 = 237


Breakpoint 42, do_no_page (error_code=4, address=134459392) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$1537 = 2
***nr array$1538 = 1060
$1539 = 1061
$1540 = 1062
$1541 = 1063


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1542 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ab74) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ab74) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16658432, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134459392) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1543 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1544 = 2
***drive
$1545 = 0
***head
$1546 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1547 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1548 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ab98) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ab98) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16658432, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134459392) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1549 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1550 = 2
***drive
$1551 = 0
***head
$1552 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1553 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1554 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2abbc) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2abbc) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16658432, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134459392) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1555 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1556 = 2
***drive
$1557 = 0
***head
$1558 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1559 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1560 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2abe0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2abe0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16658432, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134459392) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$1561 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$1562 = 2
***drive
$1563 = 0
***head
$1564 = 8


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$1565 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$1566 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1567 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x49400	300032
***cur register ecx
ecx            0x7	7
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1568 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=300032) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$1569 = 2
***end_data_seg
$1570 = 300032
***cur brk
$1571 = 300032


Breakpoint 59, sys_brk (end_data_seg=300032) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$1572 = 2
***cur brk
$1573 = 300032


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1574 = 2
***eax as return
eax            0x49400	300032
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1575 = 2
***cur state
$1576 = 0
***cur counter
$1577 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1578 = 2
***task
$1579 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1580 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1581 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1582 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1583 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1584 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1585 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x49c00	302080
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1586 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=302080) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$1587 = 2
***end_data_seg
$1588 = 302080
***cur brk
$1589 = 300032


Breakpoint 59, sys_brk (end_data_seg=302080) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$1590 = 2
***cur brk
$1591 = 302080


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1592 = 2
***eax as return
eax            0x49c00	302080
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1593 = 2
***cur state
$1594 = 0
***cur counter
$1595 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1596 = 2
***task
$1597 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1598 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1599 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1600 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1601 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1602 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1603 = 2
***task
$1604 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1605 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1606 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1607 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1608 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1609 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1610 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1611 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=1, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1612 = 2
***signum
$1613 = 1


Breakpoint 32, sys_signal (signum=1, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1614 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1615 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1616 = 2
***cur state
$1617 = 0
***cur counter
$1618 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1619 = 2
***task
$1620 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1621 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1622 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1623 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1624 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1625 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1626 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1627 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=1, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1628 = 2
***signum
$1629 = 1


Breakpoint 32, sys_signal (signum=1, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1630 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1631 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1632 = 2
***cur state
$1633 = 0
***cur counter
$1634 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1635 = 2
***task
$1636 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1637 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1638 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1639 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1640 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1641 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1642 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1643 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=2, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1644 = 2
***signum
$1645 = 2


Breakpoint 32, sys_signal (signum=2, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1646 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1647 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1648 = 2
***cur state
$1649 = 0
***cur counter
$1650 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1651 = 2
***task
$1652 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1653 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1654 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1655 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1656 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1657 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1658 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1659 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=2, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1660 = 2
***signum
$1661 = 2


Breakpoint 32, sys_signal (signum=2, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1662 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1663 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1664 = 2
***cur state
$1665 = 0
***cur counter
$1666 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1667 = 2
***task
$1668 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1669 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1670 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1671 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1672 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1673 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1674 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1675 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=3, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1676 = 2
***signum
$1677 = 3


Breakpoint 32, sys_signal (signum=3, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1678 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1679 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1680 = 2
***cur state
$1681 = 0
***cur counter
$1682 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1683 = 2
***task
$1684 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1685 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1686 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1687 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1688 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1689 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1690 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1691 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=3, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1692 = 2
***signum
$1693 = 3


Breakpoint 32, sys_signal (signum=3, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1694 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1695 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1696 = 2
***cur state
$1697 = 0
***cur counter
$1698 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1699 = 2
***task
$1700 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1701 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1702 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1703 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1704 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1705 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1706 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x4	4
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1707 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=4, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1708 = 2
***signum
$1709 = 4


Breakpoint 32, sys_signal (signum=4, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1710 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1711 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1712 = 2
***cur state
$1713 = 0
***cur counter
$1714 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1715 = 2
***task
$1716 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1717 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1718 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1719 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1720 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1721 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1722 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x4	4
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1723 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=4, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1724 = 2
***signum
$1725 = 4


Breakpoint 32, sys_signal (signum=4, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1726 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1727 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1728 = 2
***cur state
$1729 = 0
***cur counter
$1730 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1731 = 2
***task
$1732 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1733 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1734 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1735 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1736 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1737 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1738 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x5	5
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1739 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=5, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1740 = 2
***signum
$1741 = 5


Breakpoint 32, sys_signal (signum=5, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1742 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1743 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1744 = 2
***cur state
$1745 = 0
***cur counter
$1746 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1747 = 2
***task
$1748 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1749 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1750 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1751 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1752 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1753 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1754 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x5	5
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1755 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=5, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1756 = 2
***signum
$1757 = 5


Breakpoint 32, sys_signal (signum=5, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1758 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1759 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1760 = 2
***cur state
$1761 = 0
***cur counter
$1762 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1763 = 2
***task
$1764 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1765 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1766 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1767 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1768 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1769 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1770 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x6	6
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1771 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=6, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1772 = 2
***signum
$1773 = 6


Breakpoint 32, sys_signal (signum=6, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1774 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1775 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1776 = 2
***cur state
$1777 = 0
***cur counter
$1778 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1779 = 2
***task
$1780 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1781 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1782 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1783 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1784 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1785 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1786 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x6	6
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1787 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=6, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1788 = 2
***signum
$1789 = 6


Breakpoint 32, sys_signal (signum=6, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1790 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1791 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1792 = 2
***cur state
$1793 = 0
***cur counter
$1794 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1795 = 2
***task
$1796 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1797 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1798 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1799 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1800 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1801 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1802 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x7	7
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1803 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=7, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1804 = 2
***signum
$1805 = 7


Breakpoint 32, sys_signal (signum=7, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1806 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1807 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1808 = 2
***cur state
$1809 = 0
***cur counter
$1810 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1811 = 2
***task
$1812 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1813 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1814 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1815 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1816 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1817 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1818 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x7	7
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1819 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=7, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1820 = 2
***signum
$1821 = 7


Breakpoint 32, sys_signal (signum=7, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1822 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1823 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1824 = 2
***cur state
$1825 = 0
***cur counter
$1826 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1827 = 2
***task
$1828 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1829 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1830 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1831 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1832 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1833 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1834 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x8	8
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1835 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=8, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1836 = 2
***signum
$1837 = 8


Breakpoint 32, sys_signal (signum=8, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1838 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1839 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1840 = 2
***cur state
$1841 = 0
***cur counter
$1842 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1843 = 2
***task
$1844 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1845 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1846 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1847 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1848 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1849 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1850 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x8	8
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1851 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=8, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1852 = 2
***signum
$1853 = 8


Breakpoint 32, sys_signal (signum=8, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1854 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1855 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1856 = 2
***cur state
$1857 = 0
***cur counter
$1858 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1859 = 2
***task
$1860 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1861 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1862 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1863 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1864 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1865 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1866 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x9	9
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1867 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=9, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1868 = 2
***signum
$1869 = 9


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1870 = 2
***eax as return
eax            0xffffffff	-1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1871 = 2
***cur state
$1872 = 0
***cur counter
$1873 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1874 = 2
***task
$1875 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1876 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1877 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1878 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1879 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1880 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1881 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x9	9
***cur register ecx
ecx            0xffffffff	-1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1882 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1883 = 2
***signum
$1884 = 9


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1885 = 2
***eax as return
eax            0xffffffff	-1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1886 = 2
***cur state
$1887 = 0
***cur counter
$1888 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1889 = 2
***task
$1890 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1891 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1892 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1893 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1894 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1895 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1896 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xa	10
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1897 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1898 = 2
***signum
$1899 = 10


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1900 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1901 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1902 = 2
***cur state
$1903 = 0
***cur counter
$1904 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1905 = 2
***task
$1906 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1907 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1908 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1909 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1910 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1911 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1912 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xa	10
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1913 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1914 = 2
***signum
$1915 = 10


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1916 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1917 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1918 = 2
***cur state
$1919 = 0
***cur counter
$1920 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1921 = 2
***task
$1922 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1923 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1924 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1925 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1926 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1927 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1928 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xb	11
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1929 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1930 = 2
***signum
$1931 = 11


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1932 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1933 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1934 = 2
***cur state
$1935 = 0
***cur counter
$1936 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1937 = 2
***task
$1938 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1939 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1940 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1941 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1942 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1943 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1944 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xb	11
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1945 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1946 = 2
***signum
$1947 = 11


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1948 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1949 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1950 = 2
***cur state
$1951 = 0
***cur counter
$1952 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1953 = 2
***task
$1954 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1955 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1956 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1957 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1958 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1959 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1960 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xc	12
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1961 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1962 = 2
***signum
$1963 = 12


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1964 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1965 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1966 = 2
***cur state
$1967 = 0
***cur counter
$1968 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1969 = 2
***task
$1970 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1971 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1972 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1973 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1974 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1975 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1976 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xc	12
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1977 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1978 = 2
***signum
$1979 = 12


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1980 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1981 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1982 = 2
***cur state
$1983 = 0
***cur counter
$1984 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$1985 = 2
***task
$1986 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$1987 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$1988 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$1989 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$1990 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$1991 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$1992 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xd	13
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$1993 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$1994 = 2
***signum
$1995 = 13


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$1996 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$1997 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$1998 = 2
***cur state
$1999 = 0
***cur counter
$2000 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2001 = 2
***task
$2002 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2003 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2004 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2005 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2006 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2007 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2008 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xd	13
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2009 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2010 = 2
***signum
$2011 = 13


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2012 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2013 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2014 = 2
***cur state
$2015 = 0
***cur counter
$2016 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2017 = 2
***task
$2018 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2019 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2020 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2021 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2022 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2023 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2024 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xe	14
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2025 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2026 = 2
***signum
$2027 = 14


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2028 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2029 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2030 = 2
***cur state
$2031 = 0
***cur counter
$2032 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2033 = 2
***task
$2034 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2035 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2036 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2037 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2038 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2039 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2040 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xe	14
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2041 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2042 = 2
***signum
$2043 = 14


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2044 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2045 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2046 = 2
***cur state
$2047 = 0
***cur counter
$2048 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2049 = 2
***task
$2050 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2051 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2052 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2053 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2054 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2055 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2056 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xf	15
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2057 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2058 = 2
***signum
$2059 = 15


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2060 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2061 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2062 = 2
***cur state
$2063 = 0
***cur counter
$2064 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2065 = 2
***task
$2066 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2067 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2068 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2069 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2070 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2071 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2072 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xf	15
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2073 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2074 = 2
***signum
$2075 = 15


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2076 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2077 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2078 = 2
***cur state
$2079 = 0
***cur counter
$2080 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2081 = 2
***task
$2082 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2083 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2084 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2085 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2086 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2087 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2088 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x10	16
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2089 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2090 = 2
***signum
$2091 = 16


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2092 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2093 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2094 = 2
***cur state
$2095 = 0
***cur counter
$2096 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2097 = 2
***task
$2098 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2099 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2100 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2101 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2102 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2103 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2104 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x10	16
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2105 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2106 = 2
***signum
$2107 = 16


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2108 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2109 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2110 = 2
***cur state
$2111 = 0
***cur counter
$2112 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2113 = 2
***task
$2114 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2115 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2116 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2117 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2118 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2119 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2120 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x11	17
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2121 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2122 = 2
***signum
$2123 = 17


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2124 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2125 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2126 = 2
***cur state
$2127 = 0
***cur counter
$2128 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2129 = 2
***task
$2130 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2131 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2132 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2133 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2134 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2135 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2136 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x11	17
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2137 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2138 = 2
***signum
$2139 = 17


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2140 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2141 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2142 = 2
***cur state
$2143 = 0
***cur counter
$2144 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2145 = 2
***task
$2146 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2147 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2148 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2149 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2150 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2151 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2152 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x12	18
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2153 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2154 = 2
***signum
$2155 = 18


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2156 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2157 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2158 = 2
***cur state
$2159 = 0
***cur counter
$2160 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2161 = 2
***task
$2162 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2163 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2164 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2165 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2166 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2167 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2168 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x12	18
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2169 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2170 = 2
***signum
$2171 = 18


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2172 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2173 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2174 = 2
***cur state
$2175 = 0
***cur counter
$2176 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2177 = 2
***task
$2178 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2179 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2180 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2181 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2182 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2183 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2184 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x13	19
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2185 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2186 = 2
***signum
$2187 = 19


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2188 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2189 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2190 = 2
***cur state
$2191 = 0
***cur counter
$2192 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2193 = 2
***task
$2194 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2195 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2196 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2197 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2198 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2199 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2200 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x13	19
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2201 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2202 = 2
***signum
$2203 = 19


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2204 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2205 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2206 = 2
***cur state
$2207 = 0
***cur counter
$2208 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2209 = 2
***task
$2210 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2211 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2212 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2213 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2214 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2215 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2216 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2217 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2218 = 2
***signum
$2219 = 20


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2220 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2221 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2222 = 2
***cur state
$2223 = 0
***cur counter
$2224 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2225 = 2
***task
$2226 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2227 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2228 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2229 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2230 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2231 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2232 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2233 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2234 = 2
***signum
$2235 = 20


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2236 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2237 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2238 = 2
***cur state
$2239 = 0
***cur counter
$2240 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2241 = 2
***task
$2242 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2243 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2244 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2245 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2246 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2247 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2248 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x15	21
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2249 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2250 = 2
***signum
$2251 = 21


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2252 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2253 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2254 = 2
***cur state
$2255 = 0
***cur counter
$2256 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2257 = 2
***task
$2258 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2259 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2260 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2261 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2262 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2263 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2264 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x15	21
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2265 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2266 = 2
***signum
$2267 = 21


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2268 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2269 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2270 = 2
***cur state
$2271 = 0
***cur counter
$2272 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2273 = 2
***task
$2274 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2275 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2276 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2277 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2278 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2279 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2280 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x16	22
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2281 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2282 = 2
***signum
$2283 = 22


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2284 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2285 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2286 = 2
***cur state
$2287 = 0
***cur counter
$2288 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2289 = 2
***task
$2290 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2291 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2292 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2293 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2294 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2295 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2296 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x16	22
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2297 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2298 = 2
***signum
$2299 = 22


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2300 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2301 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2302 = 2
***cur state
$2303 = 0
***cur counter
$2304 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2305 = 2
***task
$2306 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2307 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2308 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2309 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2310 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2311 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2312 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x17	23
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2313 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2314 = 2
***signum
$2315 = 23


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2316 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2317 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2318 = 2
***cur state
$2319 = 0
***cur counter
$2320 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2321 = 2
***task
$2322 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2323 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2324 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2325 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2326 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2327 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2328 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x17	23
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2329 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2330 = 2
***signum
$2331 = 23


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2332 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2333 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2334 = 2
***cur state
$2335 = 0
***cur counter
$2336 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2337 = 2
***task
$2338 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2339 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2340 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2341 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2342 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2343 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2344 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x18	24
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2345 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2346 = 2
***signum
$2347 = 24


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2348 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2349 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2350 = 2
***cur state
$2351 = 0
***cur counter
$2352 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2353 = 2
***task
$2354 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2355 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2356 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2357 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2358 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2359 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2360 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x18	24
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2361 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2362 = 2
***signum
$2363 = 24


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2364 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2365 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2366 = 2
***cur state
$2367 = 0
***cur counter
$2368 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2369 = 2
***task
$2370 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2371 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2372 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2373 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2374 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2375 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2376 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x19	25
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2377 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2378 = 2
***signum
$2379 = 25


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2380 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2381 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2382 = 2
***cur state
$2383 = 0
***cur counter
$2384 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2385 = 2
***task
$2386 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2387 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2388 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2389 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2390 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2391 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2392 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x19	25
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2393 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2394 = 2
***signum
$2395 = 25


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2396 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2397 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2398 = 2
***cur state
$2399 = 0
***cur counter
$2400 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2401 = 2
***task
$2402 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2403 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2404 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2405 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2406 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2407 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2408 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1a	26
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2409 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2410 = 2
***signum
$2411 = 26


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2412 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2413 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2414 = 2
***cur state
$2415 = 0
***cur counter
$2416 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2417 = 2
***task
$2418 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2419 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2420 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2421 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2422 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2423 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2424 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1a	26
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2425 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2426 = 2
***signum
$2427 = 26


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2428 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2429 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2430 = 2
***cur state
$2431 = 0
***cur counter
$2432 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2433 = 2
***task
$2434 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2435 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2436 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2437 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2438 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2439 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2440 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1b	27
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2441 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2442 = 2
***signum
$2443 = 27


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2444 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2445 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2446 = 2
***cur state
$2447 = 0
***cur counter
$2448 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2449 = 2
***task
$2450 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2451 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2452 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2453 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2454 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2455 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2456 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1b	27
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2457 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2458 = 2
***signum
$2459 = 27


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2460 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2461 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2462 = 2
***cur state
$2463 = 0
***cur counter
$2464 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2465 = 2
***task
$2466 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2467 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2468 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2469 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2470 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2471 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2472 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1c	28
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2473 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2474 = 2
***signum
$2475 = 28


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2476 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2477 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2478 = 2
***cur state
$2479 = 0
***cur counter
$2480 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2481 = 2
***task
$2482 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2483 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2484 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2485 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2486 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2487 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2488 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1c	28
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2489 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2490 = 2
***signum
$2491 = 28


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2492 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2493 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2494 = 2
***cur state
$2495 = 0
***cur counter
$2496 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2497 = 2
***task
$2498 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2499 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2500 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2501 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2502 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2503 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2504 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1d	29
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2505 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2506 = 2
***signum
$2507 = 29


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2508 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2509 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2510 = 2
***cur state
$2511 = 0
***cur counter
$2512 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2513 = 2
***task
$2514 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2515 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2516 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2517 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2518 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2519 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2520 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1d	29
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2521 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2522 = 2
***signum
$2523 = 29


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2524 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2525 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2526 = 2
***cur state
$2527 = 0
***cur counter
$2528 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2529 = 2
***task
$2530 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2531 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2532 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2533 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2534 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2535 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2536 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1e	30
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2537 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2538 = 2
***signum
$2539 = 30


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2540 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2541 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2542 = 2
***cur state
$2543 = 0
***cur counter
$2544 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2545 = 2
***task
$2546 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2547 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2548 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2549 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2550 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2551 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2552 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1e	30
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2553 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2554 = 2
***signum
$2555 = 30


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2556 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2557 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2558 = 2
***cur state
$2559 = 0
***cur counter
$2560 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2561 = 2
***task
$2562 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2563 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2564 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2565 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2566 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2567 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2568 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1f	31
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2569 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2570 = 2
***signum
$2571 = 31


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2572 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2573 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2574 = 2
***cur state
$2575 = 0
***cur counter
$2576 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2577 = 2
***task
$2578 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2579 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2580 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2581 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2582 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2583 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2584 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1f	31
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2585 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2586 = 2
***signum
$2587 = 31


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2588 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2589 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2590 = 2
***cur state
$2591 = 0
***cur counter
$2592 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2593 = 2
***task
$2594 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2595 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2596 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2597 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2598 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2599 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2600 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x3fffdec	67108332
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2601 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2602 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2603 = 2
***cur state
$2604 = 0
***cur counter
$2605 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2606 = 2
***task
$2607 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2608 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2609 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2610 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2611 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2612 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2613 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x3fffdec	67108332
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2614 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2615 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2616 = 2
***cur state
$2617 = 0
***cur counter
$2618 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2619 = 2
***task
$2620 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2621 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2622 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2623 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2624 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2625 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2626 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fffdec	67108332
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2627 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2628 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2629 = 2
***cur state
$2630 = 0
***cur counter
$2631 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2632 = 2
***task
$2633 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2634 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2635 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2636 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2637 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2638 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2639 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0x4	4
***cur register ecx
ecx            0x3fffdec	67108332
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2640 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2641 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2642 = 2
***cur state
$2643 = 0
***cur counter
$2644 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2645 = 2
***task
$2646 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2647 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2648 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2649 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2650 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2651 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2652 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0x5	5
***cur register ecx
ecx            0x3fffdec	67108332
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2653 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2654 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2655 = 2
***cur state
$2656 = 0
***cur counter
$2657 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2658 = 2
***task
$2659 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2660 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2661 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2662 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2663 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2664 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2665 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0x6	6
***cur register ecx
ecx            0x3fffdec	67108332
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2666 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2667 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2668 = 2
***cur state
$2669 = 0
***cur counter
$2670 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2671 = 2
***task
$2672 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2673 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2674 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2675 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2676 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2677 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2678 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0x8	8
***cur register ecx
ecx            0x3fffdec	67108332
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2679 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2680 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2681 = 2
***cur state
$2682 = 0
***cur counter
$2683 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2684 = 2
***task
$2685 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2686 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2687 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2688 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2689 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2690 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2691 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0x9	9
***cur register ecx
ecx            0x3fffdec	67108332
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2692 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2693 = 2
***eax as return
eax            0xffffffff	-1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2694 = 2
***cur state
$2695 = 0
***cur counter
$2696 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2697 = 2
***task
$2698 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2699 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2700 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2701 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2702 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2703 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2704 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0xb	11
***cur register ecx
ecx            0x3fffdec	67108332
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2705 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2706 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2707 = 2
***cur state
$2708 = 0
***cur counter
$2709 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2710 = 2
***task
$2711 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2712 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2713 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2714 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2715 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2716 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2717 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0xd	13
***cur register ecx
ecx            0x3fffdec	67108332
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2718 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2719 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2720 = 2
***cur state
$2721 = 0
***cur counter
$2722 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2723 = 2
***task
$2724 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2725 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2726 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2727 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2728 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2729 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2730 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0xe	14
***cur register ecx
ecx            0x3fffdec	67108332
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2731 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2732 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2733 = 2
***cur state
$2734 = 0
***cur counter
$2735 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2736 = 2
***task
$2737 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2738 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2739 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2740 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2741 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2742 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2743 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0xf	15
***cur register ecx
ecx            0x3fffdec	67108332
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2744 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2745 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2746 = 2
***cur state
$2747 = 0
***cur counter
$2748 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2749 = 2
***task
$2750 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2751 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2752 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2753 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2754 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2755 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2756 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0xa	10
***cur register ecx
ecx            0x3fffdec	67108332
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2757 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2758 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2759 = 2
***cur state
$2760 = 0
***cur counter
$2761 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2762 = 2
***task
$2763 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2764 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2765 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2766 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2767 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2768 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2769 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0xc	12
***cur register ecx
ecx            0x3fffdec	67108332
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2770 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2771 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2772 = 2
***cur state
$2773 = 0
***cur counter
$2774 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2775 = 2
***task
$2776 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2777 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2778 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2779 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2780 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2781 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2782 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2783 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=3, handler=1, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2784 = 2
***signum
$2785 = 3


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2786 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2787 = 2
***eax as return
eax            0x1534	5428
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2788 = 2
***cur state
$2789 = 0
***cur counter
$2790 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2791 = 2
***task
$2792 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2793 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2794 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2795 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2796 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2797 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$2798 = 2
***fault address
***cur register edx
edx            0x80108ac	134285484
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134285484) at memory.c:367
367	{
---in do_no_page
___pid
$2799 = 2
***address
$2800 = 134285484


Breakpoint 103, do_no_page (error_code=4, address=134283264) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$2801 = 2
***page
$2802 = 16654336
***block
$2803 = 65


Breakpoint 42, do_no_page (error_code=4, address=134283264) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$2804 = 2
***nr array$2805 = 888
$2806 = 889
$2807 = 890
$2808 = 891


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2809 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ac04) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ac04) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16654336, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134283264) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$2810 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$2811 = 2
***drive
$2812 = 0
***head
$2813 = 14


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2814 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2815 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ac28) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ac28) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16654336, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134283264) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$2816 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$2817 = 2
***drive
$2818 = 0
***head
$2819 = 14


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2820 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2821 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ac4c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ac4c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16654336, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134283264) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$2822 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$2823 = 2
***drive
$2824 = 0
***head
$2825 = 14


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2826 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2827 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ac70) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ac70) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16654336, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134283264) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$2828 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$2829 = 2
***drive
$2830 = 0
***head
$2831 = 14


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2832 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$2833 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2834 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x1730	5936
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2835 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$2836 = 2
***signum
$2837 = 2


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$2838 = 2
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2839 = 2
***eax as return
eax            0x1534	5428
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2840 = 2
***cur state
$2841 = 0
***cur counter
$2842 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2843 = 2
***task
$2844 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2845 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2846 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2847 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2848 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2849 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$2850 = 2
***fault address
***cur register edx
edx            0x801b260	134328928
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134328928) at memory.c:367
367	{
---in do_no_page
___pid
$2851 = 2
***address
$2852 = 134328928


Breakpoint 103, do_no_page (error_code=4, address=134328320) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$2853 = 2
***page
$2854 = 16650240
***block
$2855 = 109


Breakpoint 42, do_no_page (error_code=4, address=134328320) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$2856 = 2
***nr array$2857 = 932
$2858 = 933
$2859 = 934
$2860 = 935


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2861 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ac94) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ac94) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16650240, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134328320) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$2862 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$2863 = 2
***drive
$2864 = 0
***head
$2865 = 1


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2866 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2867 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2acb8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2acb8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16650240, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134328320) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$2868 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$2869 = 2
***drive
$2870 = 0
***head
$2871 = 1


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2872 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2873 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2acdc) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2acdc) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16650240, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134328320) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$2874 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$2875 = 2
***drive
$2876 = 0
***head
$2877 = 1


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2878 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2879 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ad00) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ad00) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16650240, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134328320) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$2880 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$2881 = 2
***drive
$2882 = 0
***head
$2883 = 1


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2884 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$2885 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2886 = 2
***task
$2887 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2888 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2889 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2890 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2891 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2892 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2893 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x18	24
***cur register ebx
ebx            0x19da0	105888
***cur register ecx
ecx            0x12	18
***cur register edx
edx            0x498de	301278


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2894 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2895 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2896 = 2
***cur state
$2897 = 0
***cur counter
$2898 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2899 = 2
***task
$2900 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2901 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2902 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2903 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2904 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2905 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2906 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x3db2a	252714
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x1b6	438


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2907 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 65, sys_open (filename=0x3db2a "", flag=0, mode=420) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$2908 = 2
***open filename
$2909 = 0 '\000'
***fd
$2910 = 3


Breakpoint 66, sys_open (filename=0x3db2a "", flag=0, mode=420) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$2911 = 2
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2912 = 2
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2913 = 2
***cur state
$2914 = 0
***cur counter
$2915 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2916 = 2
***task
$2917 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2918 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2919 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2920 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2921 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2922 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$2923 = 2
***fault address
***cur register edx
edx            0x80407cc	134481868
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134481868) at memory.c:367
367	{
---in do_no_page
___pid
$2924 = 2
***address
$2925 = 134481868


Breakpoint 103, do_no_page (error_code=4, address=134479872) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$2926 = 2
***page
$2927 = 16646144
***block
$2928 = 257


Breakpoint 42, do_no_page (error_code=4, address=134479872) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$2929 = 2
***nr array$2930 = 1080
$2931 = 1081
$2932 = 1082
$2933 = 1083


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2934 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ad24) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ad24) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16646144, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134479872) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$2935 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$2936 = 2
***drive
$2937 = 0
***head
$2938 = 8


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2939 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2940 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ad48) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ad48) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16646144, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134479872) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$2941 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$2942 = 2
***drive
$2943 = 0
***head
$2944 = 8


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2945 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2946 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ad6c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ad6c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16646144, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134479872) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$2947 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$2948 = 2
***drive
$2949 = 0
***head
$2950 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2951 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2952 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ad90) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ad90) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16646144, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134479872) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$2953 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$2954 = 2
***drive
$2955 = 0
***head
$2956 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2957 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$2958 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2959 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffd88	67108232


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2960 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=3, cmd=21505, arg=67108232) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$2961 = 2
***fd
$2962 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2963 = 2
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2964 = 2
***cur state
$2965 = 0
***cur counter
$2966 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2967 = 2
***task
$2968 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2969 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2970 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2971 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2972 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2973 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2974 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x46258	287320
***cur register edx
edx            0x400	1024


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2975 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=134504448) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$2976 = 2
***call stack
#0  write_verify (address=134504448) at memory.c:267
#1  0x000085cd in verify_area (addr=0x46258, size=-2472) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x46258 "", count=1024)
    at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$2977 = 134504448


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2978 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2adb4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2adb4) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=3521) at buffer.c:278
#5  0x0000f3ad in file_read (inode=0x277d8 <inode_table+504>, 
    filp=0x29780 <file_table+32>, buf=0x46258 "", count=266) at file_dev.c:26
#6  0x0000c524 in sys_read (fd=3, buf=0x46258 "", count=266) at read_write.c:77
#7  0x0000793f in system_call () at system_call.s:94
#8  0x00000003 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$2979 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$2980 = 2
***drive
$2981 = 0
***head
$2982 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$2983 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2984 = 2
***eax as return
eax            0x10a	266
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2985 = 2
***cur state
$2986 = 0
***cur counter
$2987 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$2988 = 2
***task
$2989 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$2990 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$2991 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$2992 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$2993 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$2994 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$2995 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x13	19
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0xffffff11	-239
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$2996 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$2997 = 2
***eax as return
eax            0x1b	27
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$2998 = 2
***cur state
$2999 = 0
***cur counter
$3000 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3001 = 2
***task
$3002 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3003 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3004 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3005 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3006 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3007 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3008 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0xffffff11	-239
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3009 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$3010 = 2
***fd
$3011 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3012 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3013 = 2
***cur state
$3014 = 0
***cur counter
$3015 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3016 = 2
***task
$3017 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3018 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3019 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3020 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3021 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3022 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3023 = 2
***fault address
***cur register edx
edx            0x8008128	134250792
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134250792) at memory.c:367
367	{
---in do_no_page
___pid
$3024 = 2
***address
$3025 = 134250792


Breakpoint 103, do_no_page (error_code=4, address=134250496) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$3026 = 2
***page
$3027 = 16642048
***block
$3028 = 33


Breakpoint 42, do_no_page (error_code=4, address=134250496) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$3029 = 2
***nr array$3030 = 856
$3031 = 857
$3032 = 858
$3033 = 859


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3034 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2add8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2add8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16642048, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134250496) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3035 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3036 = 2
***drive
$3037 = 0
***head
$3038 = 13


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3039 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3040 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2adfc) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2adfc) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16642048, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134250496) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3041 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3042 = 2
***drive
$3043 = 0
***head
$3044 = 13


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3045 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3046 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ae20) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ae20) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16642048, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134250496) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3047 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3048 = 2
***drive
$3049 = 0
***head
$3050 = 13


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3051 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3052 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ae44) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ae44) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16642048, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134250496) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3053 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3054 = 2
***drive
$3055 = 0
***head
$3056 = 13


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3057 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3058 = 2
***task
$3059 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3060 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3061 = 2
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$3062 = 2
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$3063 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3064 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3b	59
***cur register ebx
ebx            0x3fffdc4	67108292
***cur register ecx
ecx            0x46258	287320
***cur register edx
edx            0x49980	301440


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3065 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$3066 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fffdc4, size=-527) at fork.c:35
#2  0x00009d27 in sys_uname (name=0x3fffdc4) at sys.c:224
#3  0x0000793f in system_call () at system_call.s:94
#4  0x03fffdc4 in ?? ()
***address
$3067 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3068 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3069 = 2
***cur state
$3070 = 0
***cur counter
$3071 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3072 = 2
***task
$3073 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3074 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3075 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3076 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3077 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3078 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3079 = 2
***fault address
***cur register edx
edx            0x800d380	134271872
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134271872) at memory.c:367
367	{
---in do_no_page
___pid
$3080 = 2
***address
$3081 = 134271872


Breakpoint 103, do_no_page (error_code=4, address=134270976) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$3082 = 2
***page
$3083 = 16637952
***block
$3084 = 53


Breakpoint 42, do_no_page (error_code=4, address=134270976) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$3085 = 2
***nr array$3086 = 876
$3087 = 877
$3088 = 878
$3089 = 879


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3090 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ae68) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ae68) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16637952, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134270976) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3091 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3092 = 2
***drive
$3093 = 0
***head
$3094 = 14


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3095 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3096 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ae8c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ae8c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16637952, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134270976) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3097 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3098 = 2
***drive
$3099 = 0
***head
$3100 = 14


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3101 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3102 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2aeb0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2aeb0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16637952, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134270976) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3103 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3104 = 2
***drive
$3105 = 0
***head
$3106 = 14


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3107 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3108 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2aed4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2aed4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16637952, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134270976) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3109 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3110 = 2
***drive
$3111 = 0
***head
$3112 = 14


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3113 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$3114 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3115 = 2
***fault address
***cur register edx
edx            0x8015ee8	134307560
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134307560) at memory.c:367
367	{
---in do_no_page
___pid
$3116 = 2
***address
$3117 = 134307560


Breakpoint 103, do_no_page (error_code=4, address=134303744) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$3118 = 2
***page
$3119 = 16633856
***block
$3120 = 85


Breakpoint 42, do_no_page (error_code=4, address=134303744) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$3121 = 2
***nr array$3122 = 908
$3123 = 909
$3124 = 910
$3125 = 911


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3126 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2aef8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2aef8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16633856, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134303744) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3127 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3128 = 2
***drive
$3129 = 0
***head
$3130 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3131 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3132 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2af1c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2af1c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16633856, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134303744) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3133 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3134 = 2
***drive
$3135 = 0
***head
$3136 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3137 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3138 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2af40) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2af40) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16633856, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134303744) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3139 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3140 = 2
***drive
$3141 = 0
***head
$3142 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3143 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3144 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2af64) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2af64) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16633856, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134303744) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3145 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3146 = 2
***drive
$3147 = 0
***head
$3148 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3149 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$3150 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3151 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x49c00	302080
***cur register ecx
ecx            0xc	12
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3152 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=302080) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$3153 = 2
***end_data_seg
$3154 = 302080
***cur brk
$3155 = 302080


Breakpoint 59, sys_brk (end_data_seg=302080) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$3156 = 2
***cur brk
$3157 = 302080


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3158 = 2
***eax as return
eax            0x49c00	302080
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3159 = 2
***cur state
$3160 = 0
***cur counter
$3161 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3162 = 2
***task
$3163 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3164 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3165 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3166 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3167 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3168 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3169 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4a400	304128
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3170 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=304128) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$3171 = 2
***end_data_seg
$3172 = 304128
***cur brk
$3173 = 302080


Breakpoint 59, sys_brk (end_data_seg=304128) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$3174 = 2
***cur brk
$3175 = 304128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3176 = 2
***eax as return
eax            0x4a400	304128
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3177 = 2
***cur state
$3178 = 0
***cur counter
$3179 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3180 = 2
***task
$3181 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3182 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3183 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3184 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3185 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3186 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3187 = 2
***fault address
***cur register edx
edx            0x804a000	134520832
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134520832) at memory.c:367
367	{
---in do_no_page
___pid
$3188 = 2
***address
$3189 = 134520832


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$3190 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3191 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4a400	304128
***cur register ecx
ecx            0x1a8	424
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3192 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=304128) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$3193 = 2
***end_data_seg
$3194 = 304128
***cur brk
$3195 = 304128


Breakpoint 59, sys_brk (end_data_seg=304128) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$3196 = 2
***cur brk
$3197 = 304128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3198 = 2
***eax as return
eax            0x4a400	304128
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3199 = 2
***cur state
$3200 = 0
***cur counter
$3201 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3202 = 2
***task
$3203 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3204 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3205 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3206 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3207 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3208 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3209 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4ac00	306176
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3210 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=306176) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$3211 = 2
***end_data_seg
$3212 = 306176
***cur brk
$3213 = 304128


Breakpoint 59, sys_brk (end_data_seg=306176) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$3214 = 2
***cur brk
$3215 = 306176


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3216 = 2
***eax as return
eax            0x4ac00	306176
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3217 = 2
***cur state
$3218 = 0
***cur counter
$3219 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3220 = 2
***task
$3221 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3222 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3223 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3224 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3225 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3226 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3227 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x1b3a0	111520
***cur register ecx
ecx            0x3fffc48	67107912
***cur register edx
edx            0x40c	1036


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3228 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$3229 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fffc48, size=-920) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27618 <inode_table+56>, statbuf=0x3fffc48)
    at stat.c:20
#3  0x0000f85b in sys_stat (
    filename=0x1b3a0 "\016 C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", statbuf=0x3fffc48) at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x0001b3a0 in ?? ()
***address
$3230 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3231 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3232 = 2
***cur state
$3233 = 0
***cur counter
$3234 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3235 = 2
***task
$3236 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3237 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3238 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3239 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3240 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3241 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3242 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x1b3a2	111522
***cur register ecx
ecx            0x3fffc48	67107912
***cur register edx
edx            0x40c	1036


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3243 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$3244 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fffc48, size=-920) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27618 <inode_table+56>, statbuf=0x3fffc48)
    at stat.c:20
#3  0x0000f85b in sys_stat (
    filename=0x1b3a2 "C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", statbuf=0x3fffc48) at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x0001b3a2 in ?? ()
***address
$3245 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3246 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3247 = 2
***cur state
$3248 = 0
***cur counter
$3249 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3250 = 2
***task
$3251 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3252 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3253 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3254 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3255 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3256 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3257 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0xc	12
***cur register ebx
ebx            0x3fffd66	67108198
***cur register ecx
ecx            0x3fffc48	67107912
***cur register edx
edx            0x40c	1036


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3258 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3259 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3260 = 2
***cur state
$3261 = 0
***cur counter
$3262 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3263 = 2
***task
$3264 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3265 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3266 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3267 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3268 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3269 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3270 = 2
***fault address
***cur register edx
edx            0x800e1b4	134275508
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134275508) at memory.c:367
367	{
---in do_no_page
___pid
$3271 = 2
***address
$3272 = 134275508


Breakpoint 103, do_no_page (error_code=4, address=134275072) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$3273 = 2
***page
$3274 = 16625664
***block
$3275 = 57


Breakpoint 42, do_no_page (error_code=4, address=134275072) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$3276 = 2
***nr array$3277 = 880
$3278 = 881
$3279 = 882
$3280 = 883


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3281 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2af88) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2af88) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16625664, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134275072) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3282 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3283 = 2
***drive
$3284 = 0
***head
$3285 = 14


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3286 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3287 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2afac) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2afac) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16625664, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134275072) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3288 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3289 = 2
***drive
$3290 = 0
***head
$3291 = 14


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3292 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3293 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2afd0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2afd0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16625664, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134275072) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3294 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3295 = 2
***drive
$3296 = 0
***head
$3297 = 14


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3298 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3299 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2aff4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2aff4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16625664, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134275072) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3300 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3301 = 2
***drive
$3302 = 0
***head
$3303 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3304 = 2
***task
$3305 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3306 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3307 = 2
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$3308 = 2
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3309 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$3310 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3311 = 2
***fault address
***cur register edx
edx            0x8016038	134307896
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134307896) at memory.c:367
367	{
---in do_no_page
___pid
$3312 = 2
***address
$3313 = 134307896


Breakpoint 103, do_no_page (error_code=4, address=134307840) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$3314 = 2
***page
$3315 = 16621568
***block
$3316 = 89


Breakpoint 42, do_no_page (error_code=4, address=134307840) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$3317 = 2
***nr array$3318 = 912
$3319 = 913
$3320 = 914
$3321 = 915


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3322 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b018) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b018) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16621568, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134307840) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3323 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3324 = 2
***drive
$3325 = 0
***head
$3326 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3327 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3328 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b03c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b03c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16621568, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134307840) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3329 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3330 = 2
***drive
$3331 = 0
***head
$3332 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3333 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3334 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b060) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b060) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16621568, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134307840) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3335 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3336 = 2
***drive
$3337 = 0
***head
$3338 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3339 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3340 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b084) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b084) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16621568, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134307840) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3341 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3342 = 2
***drive
$3343 = 0
***head
$3344 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3345 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$3346 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3347 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x14	20
***cur register ebx
ebx            0x19da0	105888
***cur register ecx
ecx            0x4998c	301452
***cur register edx
edx            0x3ffffe4	67108836


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3348 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3349 = 2
***eax as return
eax            0x2	2
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3350 = 2
***cur state
$3351 = 0
***cur counter
$3352 = 5


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3353 = 2
***task
$3354 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3355 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3356 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3357 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3358 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3359 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3360 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4ac00	306176
***cur register ecx
ecx            0x481ed	295405
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3361 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=306176) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$3362 = 2
***end_data_seg
$3363 = 306176
***cur brk
$3364 = 306176


Breakpoint 59, sys_brk (end_data_seg=306176) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$3365 = 2
***cur brk
$3366 = 306176


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3367 = 2
***eax as return
eax            0x4ac00	306176
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3368 = 2
***cur state
$3369 = 0
***cur counter
$3370 = 5


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3371 = 2
***task
$3372 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3373 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3374 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3375 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3376 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3377 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3378 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4b400	308224
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3379 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=308224) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$3380 = 2
***end_data_seg
$3381 = 308224
***cur brk
$3382 = 306176


Breakpoint 59, sys_brk (end_data_seg=308224) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$3383 = 2
***cur brk
$3384 = 308224


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3385 = 2
***eax as return
eax            0x4b400	308224
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3386 = 2
***cur state
$3387 = 0
***cur counter
$3388 = 5


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3389 = 2
***task
$3390 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3391 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3392 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3393 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3394 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3395 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3396 = 2
***fault address
***cur register edx
edx            0x804b000	134524928
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134524928) at memory.c:367
367	{
---in do_no_page
___pid
$3397 = 2
***address
$3398 = 134524928


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$3399 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3400 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x40	64
***cur register ebx
ebx            0x19da0	105888
***cur register ecx
ecx            0x2	2
***cur register edx
edx            0x48260	295520


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3401 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3402 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3403 = 2
***cur state
$3404 = 0
***cur counter
$3405 = 5


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3406 = 2
***task
$3407 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3408 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3409 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3410 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3411 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3412 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3413 = 2
***fault address
***cur register edx
edx            0x800cbcc	134269900
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134269900) at memory.c:367
367	{
---in do_no_page
___pid
$3414 = 2
***address
$3415 = 134269900


Breakpoint 103, do_no_page (error_code=4, address=134266880) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$3416 = 2
***page
$3417 = 16613376
***block
$3418 = 49


Breakpoint 42, do_no_page (error_code=4, address=134266880) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$3419 = 2
***nr array$3420 = 872
$3421 = 873
$3422 = 874
$3423 = 875


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3424 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b0a8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b0a8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16613376, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134266880) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3425 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3426 = 2
***drive
$3427 = 0
***head
$3428 = 13


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3429 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3430 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b0cc) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b0cc) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16613376, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134266880) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3431 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3432 = 2
***drive
$3433 = 0
***head
$3434 = 14


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3435 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3436 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b0f0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b0f0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16613376, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134266880) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3437 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3438 = 2
***drive
$3439 = 0
***head
$3440 = 14


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3441 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3442 = 2
***task
$3443 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3444 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3445 = 2
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$3446 = 2
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3447 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b114) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b114) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16613376, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134266880) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3448 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3449 = 2
***drive
$3450 = 0
***head
$3451 = 14


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3452 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$3453 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3454 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4b400	308224
***cur register ecx
ecx            0x2f	47
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3455 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=308224) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$3456 = 2
***end_data_seg
$3457 = 308224
***cur brk
$3458 = 308224


Breakpoint 59, sys_brk (end_data_seg=308224) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$3459 = 2
***cur brk
$3460 = 308224


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3461 = 2
***eax as return
eax            0x4b400	308224
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3462 = 2
***cur state
$3463 = 0
***cur counter
$3464 = 4


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3465 = 2
***task
$3466 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3467 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3468 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3469 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3470 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3471 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3472 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4bc00	310272
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3473 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=310272) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$3474 = 2
***end_data_seg
$3475 = 310272
***cur brk
$3476 = 308224


Breakpoint 59, sys_brk (end_data_seg=310272) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$3477 = 2
***cur brk
$3478 = 310272


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3479 = 2
***eax as return
eax            0x4bc00	310272
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3480 = 2
***cur state
$3481 = 0
***cur counter
$3482 = 4


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3483 = 2
***task
$3484 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3485 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3486 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3487 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3488 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3489 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3490 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x4b40c	308236
***cur register ecx
ecx            0x3fffd04	67108100
***cur register edx
edx            0x4b40c	308236


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3491 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$3492 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fffd04, size=-732) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27768 <inode_table+392>, statbuf=0x3fffd04)
    at stat.c:20
#3  0x0000f85b in sys_stat (filename=0x4b40c "", statbuf=0x3fffd04)
    at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x0004b40c in ?? ()
***address
$3493 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3494 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3495 = 2
***cur state
$3496 = 0
***cur counter
$3497 = 4


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3498 = 2
***task
$3499 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3500 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3501 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3502 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3503 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3504 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3505 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x31	49
***cur register ebx
ebx            0x19da0	105888
***cur register ecx
ecx            0x3fffd04	67108100
***cur register edx
edx            0x4b40c	308236


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3506 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3507 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3508 = 2
***cur state
$3509 = 0
***cur counter
$3510 = 4


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3511 = 2
***task
$3512 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3513 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3514 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3515 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3516 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3517 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3518 = 2
***fault address
***cur register edx
edx            0x80378e8	134445288
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134445288) at memory.c:367
367	{
---in do_no_page
___pid
$3519 = 2
***address
$3520 = 134445288


Breakpoint 103, do_no_page (error_code=4, address=134443008) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$3521 = 2
***page
$3522 = 16609280
***block
$3523 = 221


Breakpoint 42, do_no_page (error_code=4, address=134443008) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$3524 = 2
***nr array$3525 = 1044
$3526 = 1045
$3527 = 1046
$3528 = 1047


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3529 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b138) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b138) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16609280, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134443008) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3530 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3531 = 2
***drive
$3532 = 0
***head
$3533 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3534 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3535 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b15c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b15c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16609280, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134443008) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3536 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3537 = 2
***drive
$3538 = 0
***head
$3539 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3540 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3541 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b180) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b180) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16609280, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134443008) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3542 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3543 = 2
***drive
$3544 = 0
***head
$3545 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3546 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3547 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b1a4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b1a4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16609280, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134443008) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3548 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3549 = 2
***drive
$3550 = 0
***head
$3551 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3552 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$3553 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3554 = 2
***fault address
***cur register edx
edx            0x800f2cc	134279884
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134279884) at memory.c:367
367	{
---in do_no_page
___pid
$3555 = 2
***address
$3556 = 134279884


Breakpoint 103, do_no_page (error_code=4, address=134279168) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$3557 = 2
***page
$3558 = 16605184
***block
$3559 = 61


Breakpoint 42, do_no_page (error_code=4, address=134279168) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$3560 = 2
***nr array$3561 = 884
$3562 = 885
$3563 = 886
$3564 = 887


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3565 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b1c8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b1c8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16605184, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134279168) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3566 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3567 = 2
***drive
$3568 = 0
***head
$3569 = 14


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3570 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3571 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b1ec) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b1ec) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16605184, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134279168) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3572 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3573 = 2
***drive
$3574 = 0
***head
$3575 = 14


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3576 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3577 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b210) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b210) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16605184, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134279168) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3578 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3579 = 2
***drive
$3580 = 0
***head
$3581 = 14


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3582 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3583 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b234) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b234) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16605184, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134279168) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3584 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3585 = 2
***drive
$3586 = 0
***head
$3587 = 14


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3588 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$3589 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3590 = 2
***task
$3591 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3592 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3593 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3594 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3595 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3596 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3597 = 2
***fault address
***cur register edx
edx            0x8012140	134291776
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134291776) at memory.c:367
367	{
---in do_no_page
___pid
$3598 = 2
***address
$3599 = 134291776


Breakpoint 103, do_no_page (error_code=4, address=134291456) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$3600 = 2
***page
$3601 = 16601088
***block
$3602 = 73


Breakpoint 42, do_no_page (error_code=4, address=134291456) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$3603 = 2
***nr array$3604 = 896
$3605 = 897
$3606 = 898
$3607 = 899


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3608 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b258) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b258) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16601088, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134291456) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3609 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3610 = 2
***drive
$3611 = 0
***head
$3612 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3613 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3614 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b27c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b27c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16601088, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134291456) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3615 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3616 = 2
***drive
$3617 = 0
***head
$3618 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3619 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3620 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b2a0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b2a0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16601088, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134291456) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3621 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3622 = 2
***drive
$3623 = 0
***head
$3624 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3625 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3626 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b2c4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b2c4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16601088, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134291456) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3627 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3628 = 2
***drive
$3629 = 0
***head
$3630 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3631 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$3632 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3633 = 2
***fault address
***cur register edx
edx            0x803551c	134436124
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134436124) at memory.c:367
367	{
---in do_no_page
___pid
$3634 = 2
***address
$3635 = 134436124


Breakpoint 103, do_no_page (error_code=4, address=134434816) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$3636 = 2
***page
$3637 = 16596992
***block
$3638 = 213


Breakpoint 42, do_no_page (error_code=4, address=134434816) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$3639 = 2
***nr array$3640 = 1036
$3641 = 1037
$3642 = 1038
$3643 = 1039


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3644 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b2e8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b2e8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16596992, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134434816) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3645 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3646 = 2
***drive
$3647 = 0
***head
$3648 = 6


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3649 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3650 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b30c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b30c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16596992, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134434816) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3651 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3652 = 2
***drive
$3653 = 0
***head
$3654 = 6


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3655 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3656 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b330) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b330) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16596992, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134434816) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3657 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3658 = 2
***drive
$3659 = 0
***head
$3660 = 6


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3661 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3662 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b354) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b354) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16596992, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134434816) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3663 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3664 = 2
***drive
$3665 = 0
***head
$3666 = 6


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3667 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$3668 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3669 = 2
***fault address
***cur register edx
edx            0x8042540	134489408
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134489408) at memory.c:367
367	{
---in do_no_page
___pid
$3670 = 2
***address
$3671 = 134489408


Breakpoint 103, do_no_page (error_code=4, address=134488064) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$3672 = 2
***page
$3673 = 16592896
***block
$3674 = 265


Breakpoint 42, do_no_page (error_code=4, address=134488064) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$3675 = 2
***nr array$3676 = 1088
$3677 = 1089
$3678 = 1090
$3679 = 1091


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3680 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b378) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b378) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16592896, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134488064) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3681 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3682 = 2
***drive
$3683 = 0
***head
$3684 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3685 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3686 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b39c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b39c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16592896, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134488064) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3687 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3688 = 2
***drive
$3689 = 0
***head
$3690 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3691 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3692 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b3c0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b3c0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16592896, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134488064) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3693 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3694 = 2
***drive
$3695 = 0
***head
$3696 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3697 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3698 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b3e4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b3e4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16592896, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134488064) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3699 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3700 = 2
***drive
$3701 = 0
***head
$3702 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3703 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$3704 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3705 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x18	24
***cur register ebx
ebx            0x19da0	105888
***cur register ecx
ecx            0x4aecc	306892
***cur register edx
edx            0x10	16


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3706 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3707 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3708 = 2
***cur state
$3709 = 0
***cur counter
$3710 = 3


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3711 = 2
***task
$3712 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3713 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3714 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3715 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3716 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3717 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3718 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x31	49
***cur register ebx
ebx            0x19da0	105888
***cur register ecx
ecx            0x4aecc	306892
***cur register edx
edx            0x10	16


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3719 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3720 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3721 = 2
***cur state
$3722 = 0
***cur counter
$3723 = 3


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3724 = 2
***task
$3725 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3726 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3727 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3728 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3729 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3730 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3731 = 2
***task
$3732 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3733 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3734 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3735 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3736 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3737 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3738 = 2
***fault address
***cur register edx
edx            0x801f150	134345040
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134345040) at memory.c:367
367	{
---in do_no_page
___pid
$3739 = 2
***address
$3740 = 134345040


Breakpoint 103, do_no_page (error_code=4, address=134344704) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$3741 = 2
***page
$3742 = 16588800
***block
$3743 = 125


Breakpoint 42, do_no_page (error_code=4, address=134344704) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$3744 = 2
***nr array$3745 = 948
$3746 = 949
$3747 = 950
$3748 = 951


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3749 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b408) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b408) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16588800, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134344704) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3750 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3751 = 2
***drive
$3752 = 0
***head
$3753 = 1


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3754 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3755 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b42c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b42c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16588800, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134344704) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3756 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3757 = 2
***drive
$3758 = 0
***head
$3759 = 2


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3760 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3761 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b450) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b450) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16588800, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134344704) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3762 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3763 = 2
***drive
$3764 = 0
***head
$3765 = 2


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3766 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3767 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b474) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b474) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16588800, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134344704) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3768 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3769 = 2
***drive
$3770 = 0
***head
$3771 = 2


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3772 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$3773 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3774 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4bc00	310272
***cur register ecx
ecx            0xc	12
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3775 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=310272) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$3776 = 2
***end_data_seg
$3777 = 310272
***cur brk
$3778 = 310272


Breakpoint 59, sys_brk (end_data_seg=310272) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$3779 = 2
***cur brk
$3780 = 310272


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3781 = 2
***eax as return
eax            0x4bc00	310272
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3782 = 2
***cur state
$3783 = 0
***cur counter
$3784 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3785 = 2
***task
$3786 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3787 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3788 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3789 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3790 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3791 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3792 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4cc00	314368
***cur register ecx
ecx            0xc	12
***cur register edx
edx            0x1000	4096


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3793 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=314368) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$3794 = 2
***end_data_seg
$3795 = 314368
***cur brk
$3796 = 310272


Breakpoint 59, sys_brk (end_data_seg=314368) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$3797 = 2
***cur brk
$3798 = 314368


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3799 = 2
***eax as return
eax            0x4cc00	314368
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3800 = 2
***cur state
$3801 = 0
***cur counter
$3802 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3803 = 2
***task
$3804 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3805 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3806 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3807 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3808 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3809 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3810 = 2
***fault address
***cur register edx
edx            0x804c5e8	134530536
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134530536) at memory.c:367
367	{
---in do_no_page
___pid
$3811 = 2
***address
$3812 = 134530536


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$3813 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3814 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x10c7e	68734
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3fffe00	67108352


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3815 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    flag=0, mode=0) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$3816 = 2
***open filename
$3817 = 64 '@'
***fd
$3818 = 3


    flag=0, mode=0) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$3819 = 2
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3820 = 2
***eax as return
eax            0xffffffff	-1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3821 = 2
***cur state
$3822 = 0
***cur counter
$3823 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3824 = 2
***task
$3825 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3826 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3827 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3828 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3829 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3830 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3831 = 2
***fault address
***cur register edx
edx            0x8004960	134236512
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134236512) at memory.c:367
367	{
---in do_no_page
___pid
$3832 = 2
***address
$3833 = 134236512


Breakpoint 103, do_no_page (error_code=4, address=134234112) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$3834 = 2
***page
$3835 = 16580608
***block
$3836 = 17


Breakpoint 42, do_no_page (error_code=4, address=134234112) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$3837 = 2
***nr array$3838 = 840
$3839 = 841
$3840 = 842
$3841 = 843


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3842 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b498) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b498) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16580608, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134234112) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3843 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3844 = 2
***drive
$3845 = 0
***head
$3846 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3847 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3848 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b4bc) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b4bc) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16580608, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134234112) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3849 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3850 = 2
***drive
$3851 = 0
***head
$3852 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3853 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3854 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b4e0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b4e0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16580608, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134234112) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3855 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3856 = 2
***drive
$3857 = 0
***head
$3858 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3859 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3860 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b504) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b504) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16580608, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134234112) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3861 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3862 = 2
***drive
$3863 = 0
***head
$3864 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3865 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$3866 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3867 = 2
***fault address
***cur register edx
edx            0x8009d54	134258004
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134258004) at memory.c:367
367	{
---in do_no_page
___pid
$3868 = 2
***address
$3869 = 134258004


Breakpoint 103, do_no_page (error_code=4, address=134254592) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$3870 = 2
***page
$3871 = 16576512
***block
$3872 = 37


Breakpoint 42, do_no_page (error_code=4, address=134254592) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$3873 = 2
***nr array$3874 = 860
$3875 = 861
$3876 = 862
$3877 = 863


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3878 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b528) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b528) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16576512, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134254592) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3879 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3880 = 2
***drive
$3881 = 0
***head
$3882 = 13


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3883 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3884 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b54c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b54c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16576512, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134254592) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3885 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3886 = 2
***drive
$3887 = 0
***head
$3888 = 13


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3889 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3890 = 2
***task
$3891 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3892 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3893 = 2
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$3894 = 2
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3895 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b570) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b570) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16576512, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134254592) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3896 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3897 = 2
***drive
$3898 = 0
***head
$3899 = 13


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3900 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3901 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b594) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b594) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16576512, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134254592) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3902 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3903 = 2
***drive
$3904 = 0
***head
$3905 = 13


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3906 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$3907 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$3908 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x37	55
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3	3
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$3909 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$3910 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$3911 = 2
***cur state
$3912 = 0
***cur counter
$3913 = 1


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$3914 = 2
***task
$3915 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$3916 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$3917 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$3918 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$3919 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$3920 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3921 = 2
***fault address
***cur register edx
edx            0x8003158	134230360
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134230360) at memory.c:367
367	{
---in do_no_page
___pid
$3922 = 2
***address
$3923 = 134230360


Breakpoint 103, do_no_page (error_code=4, address=134230016) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$3924 = 2
***page
$3925 = 16572416
***block
$3926 = 13


Breakpoint 42, do_no_page (error_code=4, address=134230016) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$3927 = 2
***nr array$3928 = 836
$3929 = 837
$3930 = 838
$3931 = 839


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3932 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b5b8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b5b8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16572416, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134230016) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3933 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3934 = 2
***drive
$3935 = 0
***head
$3936 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3937 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3938 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b5dc) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b5dc) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16572416, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134230016) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3939 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3940 = 2
***drive
$3941 = 0
***head
$3942 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3943 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3944 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b600) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b600) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16572416, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134230016) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3945 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3946 = 2
***drive
$3947 = 0
***head
$3948 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3949 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3950 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b624) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b624) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16572416, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134230016) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3951 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3952 = 2
***drive
$3953 = 0
***head
$3954 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3955 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$3956 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3957 = 2
***fault address
***cur register edx
edx            0x800260c	134227468
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134227468) at memory.c:367
367	{
---in do_no_page
___pid
$3958 = 2
***address
$3959 = 134227468


Breakpoint 103, do_no_page (error_code=4, address=134225920) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$3960 = 2
***page
$3961 = 16568320
***block
$3962 = 9


Breakpoint 42, do_no_page (error_code=4, address=134225920) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$3963 = 2
***nr array$3964 = 832
$3965 = 833
$3966 = 834
$3967 = 835


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3968 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b648) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b648) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16568320, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134225920) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3969 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3970 = 2
***drive
$3971 = 0
***head
$3972 = 11


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3973 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3974 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b66c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b66c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16568320, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134225920) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3975 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3976 = 2
***drive
$3977 = 0
***head
$3978 = 11


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3979 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3980 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b690) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b690) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16568320, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134225920) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3981 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3982 = 2
***drive
$3983 = 0
***head
$3984 = 11


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3985 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3986 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b6b4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b6b4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16568320, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134225920) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$3987 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$3988 = 2
***drive
$3989 = 0
***head
$3990 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$3991 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$3992 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$3993 = 2
***fault address
***cur register edx
edx            0x8005620	134239776
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134239776) at memory.c:367
367	{
---in do_no_page
___pid
$3994 = 2
***address
$3995 = 134239776


Breakpoint 103, do_no_page (error_code=4, address=134238208) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$3996 = 2
***page
$3997 = 16564224
***block
$3998 = 21


Breakpoint 42, do_no_page (error_code=4, address=134238208) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$3999 = 2
***nr array$4000 = 844
$4001 = 845
$4002 = 846
$4003 = 847


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4004 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b6d8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b6d8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16564224, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134238208) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4005 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4006 = 2
***drive
$4007 = 0
***head
$4008 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4009 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4010 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b6fc) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b6fc) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16564224, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134238208) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4011 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4012 = 2
***drive
$4013 = 0
***head
$4014 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4015 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4016 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b720) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b720) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16564224, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134238208) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4017 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4018 = 2
***drive
$4019 = 0
***head
$4020 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4021 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4022 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b744) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b744) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16564224, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134238208) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4023 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4024 = 2
***drive
$4025 = 0
***head
$4026 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4027 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$4028 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4029 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4cc00	314368
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4030 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=314368) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$4031 = 2
***end_data_seg
$4032 = 314368
***cur brk
$4033 = 314368


Breakpoint 59, sys_brk (end_data_seg=314368) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$4034 = 2
***cur brk
$4035 = 314368


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4036 = 2
***eax as return
eax            0x4cc00	314368
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4037 = 2
***cur state
$4038 = 0
***cur counter
$4039 = 1


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4040 = 2
***task
$4041 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4042 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4043 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4044 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4045 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4046 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4047 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4d400	316416
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4048 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=316416) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$4049 = 2
***end_data_seg
$4050 = 316416
***cur brk
$4051 = 314368


Breakpoint 59, sys_brk (end_data_seg=316416) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$4052 = 2
***cur brk
$4053 = 316416


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4054 = 2
***eax as return
eax            0x4d400	316416
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4055 = 2
***cur state
$4056 = 0
***cur counter
$4057 = 1


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4058 = 2
***task
$4059 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4060 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4061 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4062 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4063 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4064 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$4065 = 2
***fault address
***cur register edx
edx            0x804d000	134533120
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134533120) at memory.c:367
367	{
---in do_no_page
___pid
$4066 = 2
***address
$4067 = 134533120


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$4068 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4069 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4070 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$4071 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$4072 = 201322496


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4073 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b768) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b768) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=3442) at buffer.c:278
#5  0x0000f3ad in file_read (inode=0x276f8 <inode_table+280>, 
    filp=0x29770 <file_table+16>, buf=0x3fff5f0 "r\r", count=1)
    at file_dev.c:26
#6  0x0000c524 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:77
#7  0x0000793f in system_call () at system_call.s:94
#8  0x00000000 in ?? ()


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4074 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4075 = 2
***drive
$4076 = 0
***head
$4077 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4078 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4079 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4080 = 2
***cur state
$4081 = 0
***cur counter
$4082 = 1


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4083 = 2
***task
$4084 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4085 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4086 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4087 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4088 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4089 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4090 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4091 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$4092 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$4093 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4094 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4095 = 2
***cur state
$4096 = 0
***cur counter
$4097 = 1


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4098 = 2
***task
$4099 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4100 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4101 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4102 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4103 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4104 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4105 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4106 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$4107 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$4108 = 201322496


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4109 = 2
***task
$4110 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4111 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4112 = 2
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$4113 = 2
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4114 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4115 = 2
***cur state
$4116 = 0
***cur counter
$4117 = 0


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$4118 = 2


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000001 in startup_32 () at head.s:19


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$4119 = 0
***loop pid
$4120 = 2
***loop counter
$4121 = 0


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$4122 = 1
***loop pid
$4123 = 1
***loop counter
$4124 = 14


Breakpoint 41, schedule () at sched.c:138
138					(*p)->counter = ((*p)->counter >> 1) +
---in schedule
***in loop3
***loop pid
$4125 = 2
***loop counter
$4126 = 0
***loop priority
$4127 = 15
***compute new counter


Breakpoint 41, schedule () at sched.c:138
138					(*p)->counter = ((*p)->counter >> 1) +
---in schedule
***in loop3
***loop pid
$4128 = 1
***loop counter
$4129 = 14
***loop priority
$4130 = 15
***compute new counter


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$4131 = 0
***loop pid
$4132 = 2
***loop counter
$4133 = 15


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$4134 = 1
***loop pid
$4135 = 1
***loop counter
$4136 = 22


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$4137 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4138 = 2
***task
$4139 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4140 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4141 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4142 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4143 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4144 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4145 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4146 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$4147 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$4148 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4149 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4150 = 2
***cur state
$4151 = 0
***cur counter
$4152 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4153 = 2
***task
$4154 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4155 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4156 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4157 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4158 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4159 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4160 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4161 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$4162 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$4163 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4164 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4165 = 2
***cur state
$4166 = 0
***cur counter
$4167 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4168 = 2
***task
$4169 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4170 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4171 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4172 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4173 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4174 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4175 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4176 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$4177 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$4178 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4179 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4180 = 2
***cur state
$4181 = 0
***cur counter
$4182 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4183 = 2
***task
$4184 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4185 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4186 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4187 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4188 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4189 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4190 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4191 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$4192 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$4193 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4194 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4195 = 2
***cur state
$4196 = 0
***cur counter
$4197 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4198 = 2
***task
$4199 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4200 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4201 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4202 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4203 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4204 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4205 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4206 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$4207 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5f0 "\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^"..., count=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$4208 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4209 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4210 = 2
***cur state
$4211 = 0
***cur counter
$4212 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4213 = 2
***task
$4214 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4215 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4216 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4217 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4218 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4219 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4220 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4221 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$4222 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$4223 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4224 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4225 = 2
***cur state
$4226 = 0
***cur counter
$4227 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4228 = 2
***task
$4229 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4230 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4231 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4232 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4233 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4234 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4235 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4236 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$4237 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$4238 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4239 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4240 = 2
***cur state
$4241 = 0
***cur counter
$4242 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4243 = 2
***task
$4244 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4245 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4246 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4247 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4248 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4249 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4250 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4251 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$4252 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$4253 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4254 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4255 = 2
***cur state
$4256 = 0
***cur counter
$4257 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4258 = 2
***task
$4259 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4260 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4261 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4262 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4263 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4264 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4265 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4266 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$4267 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5f0 "\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^"..., count=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$4268 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4269 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4270 = 2
***cur state
$4271 = 0
***cur counter
$4272 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4273 = 2
***task
$4274 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4275 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4276 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4277 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4278 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4279 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4280 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4281 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$4282 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$4283 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4284 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4285 = 2
***cur state
$4286 = 0
***cur counter
$4287 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4288 = 2
***task
$4289 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4290 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4291 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4292 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4293 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4294 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4295 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4296 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$4297 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$4298 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4299 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4300 = 2
***cur state
$4301 = 0
***cur counter
$4302 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4303 = 2
***task
$4304 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4305 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4306 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4307 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4308 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4309 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$4310 = 2
***fault address
***cur register edx
edx            0x800601e	134242334
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134242334) at memory.c:367
367	{
---in do_no_page
___pid
$4311 = 2
***address
$4312 = 134242334


Breakpoint 103, do_no_page (error_code=4, address=134242304) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$4313 = 2
***page
$4314 = 16556032
***block
$4315 = 25


Breakpoint 42, do_no_page (error_code=4, address=134242304) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$4316 = 2
***nr array$4317 = 848
$4318 = 849
$4319 = 850
$4320 = 851


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4321 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b78c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b78c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16556032, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134242304) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4322 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4323 = 2
***drive
$4324 = 0
***head
$4325 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4326 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4327 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b7b0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b7b0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16556032, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134242304) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4328 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4329 = 2
***drive
$4330 = 0
***head
$4331 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4332 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4333 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b7d4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b7d4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16556032, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134242304) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4334 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4335 = 2
***drive
$4336 = 0
***head
$4337 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4338 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4339 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b7f8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b7f8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16556032, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134242304) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4340 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4341 = 2
***drive
$4342 = 0
***head
$4343 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4344 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$4345 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$4346 = 2
***fault address
***cur register edx
edx            0x800a0f4	134258932
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134258932) at memory.c:367
367	{
---in do_no_page
___pid
$4347 = 2
***address
$4348 = 134258932


Breakpoint 103, do_no_page (error_code=4, address=134258688) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$4349 = 2
***page
$4350 = 16551936
***block
$4351 = 41


Breakpoint 42, do_no_page (error_code=4, address=134258688) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$4352 = 2
***nr array$4353 = 864
$4354 = 865
$4355 = 866
$4356 = 867


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4357 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b81c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b81c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16551936, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134258688) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4358 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4359 = 2
***drive
$4360 = 0
***head
$4361 = 13


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4362 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4363 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b840) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b840) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16551936, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134258688) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4364 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4365 = 2
***drive
$4366 = 0
***head
$4367 = 13


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4368 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4369 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b864) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b864) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16551936, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134258688) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4370 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4371 = 2
***drive
$4372 = 0
***head
$4373 = 13


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4374 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4375 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b888) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b888) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16551936, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134258688) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4376 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4377 = 2
***drive
$4378 = 0
***head
$4379 = 13


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4380 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$4381 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$4382 = 2
***fault address
***cur register edx
edx            0x80135b4	134297012
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134297012) at memory.c:367
367	{
---in do_no_page
___pid
$4383 = 2
***address
$4384 = 134297012


Breakpoint 103, do_no_page (error_code=4, address=134295552) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$4385 = 2
***page
$4386 = 16547840
***block
$4387 = 77


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4388 = 2
***task
$4389 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4390 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4391 = 2
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$4392 = 2
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 42, do_no_page (error_code=4, address=134295552) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$4393 = 2
***nr array$4394 = 900
$4395 = 901
$4396 = 902
$4397 = 903


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4398 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b8ac) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b8ac) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16547840, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134295552) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4399 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4400 = 2
***drive
$4401 = 0
***head
$4402 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4403 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4404 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b8d0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b8d0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16547840, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134295552) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4405 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4406 = 2
***drive
$4407 = 0
***head
$4408 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4409 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4410 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b8f4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b8f4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16547840, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134295552) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4411 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4412 = 2
***drive
$4413 = 0
***head
$4414 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4415 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4416 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b918) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b918) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16547840, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134295552) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4417 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4418 = 2
***drive
$4419 = 0
***head
$4420 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4421 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$4422 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$4423 = 2
***fault address
***cur register edx
edx            0x8014a4c	134302284
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134302284) at memory.c:367
367	{
---in do_no_page
___pid
$4424 = 2
***address
$4425 = 134302284


Breakpoint 103, do_no_page (error_code=4, address=134299648) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$4426 = 2
***page
$4427 = 16543744
***block
$4428 = 81


Breakpoint 42, do_no_page (error_code=4, address=134299648) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$4429 = 2
***nr array$4430 = 904
$4431 = 905
$4432 = 906
$4433 = 907


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4434 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b93c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b93c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16543744, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134299648) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4435 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4436 = 2
***drive
$4437 = 0
***head
$4438 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4439 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4440 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b960) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b960) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16543744, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134299648) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4441 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4442 = 2
***drive
$4443 = 0
***head
$4444 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4445 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4446 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b984) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b984) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16543744, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134299648) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4447 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4448 = 2
***drive
$4449 = 0
***head
$4450 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4451 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4452 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b9a8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b9a8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16543744, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134299648) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4453 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4454 = 2
***drive
$4455 = 0
***head
$4456 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4457 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$4458 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$4459 = 2
***fault address
***cur register edx
edx            0x801193c	134289724
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134289724) at memory.c:367
367	{
---in do_no_page
___pid
$4460 = 2
***address
$4461 = 134289724


Breakpoint 103, do_no_page (error_code=4, address=134287360) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$4462 = 2
***page
$4463 = 16539648
***block
$4464 = 69


Breakpoint 42, do_no_page (error_code=4, address=134287360) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$4465 = 2
***nr array$4466 = 892
$4467 = 893
$4468 = 894
$4469 = 895


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4470 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b9cc) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b9cc) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16539648, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134287360) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4471 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4472 = 2
***drive
$4473 = 0
***head
$4474 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4475 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4476 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2b9f0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2b9f0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16539648, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134287360) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4477 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4478 = 2
***drive
$4479 = 0
***head
$4480 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4481 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4482 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ba14) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ba14) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16539648, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134287360) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4483 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4484 = 2
***drive
$4485 = 0
***head
$4486 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4487 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4488 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ba38) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ba38) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16539648, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134287360) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4489 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4490 = 2
***drive
$4491 = 0
***head
$4492 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4493 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$4494 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$4495 = 2
***fault address
***cur register edx
edx            0x8038a68	134449768
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134449768) at memory.c:367
367	{
---in do_no_page
___pid
$4496 = 2
***address
$4497 = 134449768


Breakpoint 103, do_no_page (error_code=4, address=134447104) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$4498 = 2
***page
$4499 = 16535552
***block
$4500 = 225


Breakpoint 42, do_no_page (error_code=4, address=134447104) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$4501 = 2
***nr array$4502 = 1048
$4503 = 1049
$4504 = 1050
$4505 = 1051


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4506 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ba5c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ba5c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16535552, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134447104) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4507 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4508 = 2
***drive
$4509 = 0
***head
$4510 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4511 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4512 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ba80) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ba80) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16535552, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134447104) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4513 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4514 = 2
***drive
$4515 = 0
***head
$4516 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4517 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4518 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2baa4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2baa4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16535552, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134447104) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4519 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4520 = 2
***drive
$4521 = 0
***head
$4522 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4523 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4524 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bac8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bac8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16535552, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134447104) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4525 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4526 = 2
***drive
$4527 = 0
***head
$4528 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4529 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4530 = 2
***task
$4531 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4532 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4533 = 2
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$4534 = 2
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$4535 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4536 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x4ba2c	309804
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x1b6	438


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4537 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 65, sys_open (filename=0x4ba2c "", flag=0, mode=420) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$4538 = 2
***open filename
$4539 = 0 '\000'
***fd
$4540 = 3


Breakpoint 66, sys_open (filename=0x4ba2c "", flag=0, mode=420) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$4541 = 2
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4542 = 2
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4543 = 2
***cur state
$4544 = 0
***cur counter
$4545 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4546 = 2
***task
$4547 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4548 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4549 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4550 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4551 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4552 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4553 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x37	55
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4554 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4555 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4556 = 2
***cur state
$4557 = 0
***cur counter
$4558 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4559 = 2
***task
$4560 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4561 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4562 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4563 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4564 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4565 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4566 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x37	55
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0xa	10


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4567 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4568 = 2
***eax as return
eax            0xa	10
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4569 = 2
***cur state
$4570 = 0
***cur counter
$4571 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4572 = 2
***task
$4573 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4574 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4575 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4576 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4577 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4578 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4579 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x37	55
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4580 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4581 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4582 = 2
***cur state
$4583 = 0
***cur counter
$4584 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4585 = 2
***task
$4586 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4587 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4588 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4589 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4590 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4591 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4592 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x37	55
***cur register ebx
ebx            0xa	10
***cur register ecx
ecx            0x2	2
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4593 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4594 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4595 = 2
***cur state
$4596 = 0
***cur counter
$4597 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4598 = 2
***task
$4599 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4600 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4601 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4602 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4603 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4604 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4605 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3f	63
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4606 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=0) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$4607 = 2
***fd
$4608 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4609 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4610 = 2
***cur state
$4611 = 0
***cur counter
$4612 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4613 = 2
***task
$4614 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4615 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4616 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4617 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4618 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4619 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4620 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4621 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$4622 = 2
***fd
$4623 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4624 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4625 = 2
***cur state
$4626 = 0
***cur counter
$4627 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4628 = 2
***task
$4629 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4630 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4631 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4632 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4633 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4634 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$4635 = 2
***fault address
***cur register edx
edx            0x800b098	134262936
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134262936) at memory.c:367
367	{
---in do_no_page
___pid
$4636 = 2
***address
$4637 = 134262936


Breakpoint 103, do_no_page (error_code=4, address=134262784) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$4638 = 2
***page
$4639 = 16531456
***block
$4640 = 45


Breakpoint 42, do_no_page (error_code=4, address=134262784) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$4641 = 2
***nr array$4642 = 868
$4643 = 869
$4644 = 870
$4645 = 871


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4646 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2baec) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2baec) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16531456, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134262784) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4647 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4648 = 2
***drive
$4649 = 0
***head
$4650 = 13


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4651 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4652 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bb10) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bb10) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16531456, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134262784) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4653 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4654 = 2
***drive
$4655 = 0
***head
$4656 = 13


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4657 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4658 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bb34) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bb34) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16531456, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134262784) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4659 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4660 = 2
***drive
$4661 = 0
***head
$4662 = 13


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4663 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4664 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bb58) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bb58) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16531456, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134262784) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$4665 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$4666 = 2
***drive
$4667 = 0
***head
$4668 = 13


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$4669 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$4670 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$4671 = 2
***fault address
***cur register edx
edx            0xbffea04	201320964
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=201320964) at memory.c:367
367	{
---in do_no_page
___pid
$4672 = 2
***address
$4673 = 201320964


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$4674 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4675 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4d400	316416
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4676 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=316416) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$4677 = 2
***end_data_seg
$4678 = 316416
***cur brk
$4679 = 316416


Breakpoint 59, sys_brk (end_data_seg=316416) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$4680 = 2
***cur brk
$4681 = 316416


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4682 = 2
***eax as return
eax            0x4d400	316416
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4683 = 2
***cur state
$4684 = 0
***cur counter
$4685 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4686 = 2
***task
$4687 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4688 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4689 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4690 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4691 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4692 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4693 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4dc00	318464
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4694 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=318464) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$4695 = 2
***end_data_seg
$4696 = 318464
***cur brk
$4697 = 316416


Breakpoint 59, sys_brk (end_data_seg=318464) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$4698 = 2
***cur brk
$4699 = 318464


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4700 = 2
***eax as return
eax            0x4dc00	318464
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4701 = 2
***cur state
$4702 = 0
***cur counter
$4703 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4704 = 2
***task
$4705 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4706 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4707 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4708 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4709 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4710 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4711 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4dc00	318464
***cur register ecx
ecx            0x41	65
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4712 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=318464) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$4713 = 2
***end_data_seg
$4714 = 318464
***cur brk
$4715 = 318464


Breakpoint 59, sys_brk (end_data_seg=318464) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$4716 = 2
***cur brk
$4717 = 318464


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4718 = 2
***eax as return
eax            0x4dc00	318464
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4719 = 2
***cur state
$4720 = 0
***cur counter
$4721 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4722 = 2
***task
$4723 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4724 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4725 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4726 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4727 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4728 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4729 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4e400	320512
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4730 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=320512) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$4731 = 2
***end_data_seg
$4732 = 320512
***cur brk
$4733 = 318464


Breakpoint 59, sys_brk (end_data_seg=320512) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$4734 = 2
***cur brk
$4735 = 320512


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4736 = 2
***eax as return
eax            0x4e400	320512
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4737 = 2
***cur state
$4738 = 0
***cur counter
$4739 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4740 = 2
***task
$4741 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4742 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4743 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4744 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4745 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4746 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$4747 = 2
***fault address
***cur register edx
edx            0x804e000	134537216
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134537216) at memory.c:367
367	{
---in do_no_page
___pid
$4748 = 2
***address
$4749 = 134537216


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$4750 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4751 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4e400	320512
***cur register ecx
ecx            0x9	9
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4752 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=320512) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$4753 = 2
***end_data_seg
$4754 = 320512
***cur brk
$4755 = 320512


Breakpoint 59, sys_brk (end_data_seg=320512) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$4756 = 2
***cur brk
$4757 = 320512


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4758 = 2
***eax as return
eax            0x4e400	320512
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4759 = 2
***cur state
$4760 = 0
***cur counter
$4761 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4762 = 2
***task
$4763 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4764 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4765 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4766 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4767 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4768 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4769 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4ec00	322560
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4770 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=322560) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$4771 = 2
***end_data_seg
$4772 = 322560
***cur brk
$4773 = 320512


Breakpoint 59, sys_brk (end_data_seg=322560) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$4774 = 2
***cur brk
$4775 = 322560


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4776 = 2
***eax as return
eax            0x4ec00	322560
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4777 = 2
***cur state
$4778 = 0
***cur counter
$4779 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4780 = 2
***task
$4781 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4782 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4783 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4784 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4785 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4786 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4787 = 2
***task
$4788 = {0x22220 <init_task>, 0xfff000, 0xffb000, 
  0x0 <startup_32> <repeats 61 times>}
***current
$4789 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4790 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4791 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4792 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4793 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 91, write_verify (address=3262382084) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$4794 = 2
***call stack
#0  write_verify (address=3262382084) at memory.c:267
#1  0x7883c875 in ?? ()
***address
$4795 = 3262382084


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$4796 = 2
***fault address
***cur register edx
edx            0x18	24
***error code
***cur register eax
eax            0x4bb8c	310156


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4797 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2	2
***cur register ebx
ebx            0x19da0	105888
***cur register ecx
ecx            0xc	12
***cur register edx
edx            0x4bac0	309952


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4798 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 10, sys_fork () at system_call.s:217
217		call copy_process
---in sys_fork
___pid
$4799 = 2
***cur register gs
gs             0x17	23
***push gs
***cur register esi
esi            0x1	1
***push esi
***cur register edi
edi            0xffc	4092
***push edi
***cur register ebp
ebp            0x3fffd78	0x3fffd78
***push ebp
***cur register eax
eax            0x3	3
;;;eax to nr


    eip=235695, cs=15, eflags=582, esp=67108204, ss=23) at fork.c:79
79		p = (struct task_struct *) get_free_page();
---in copy_process
***father pid
$4800 = 2
***new pid
$4801 = 3
***task number
$4802 = 3
***before free page
***cur register ecx
ecx            0x3	3
***cur register edi
edi            0xffc	4092


    eip=235695, cs=15, eflags=582, esp=67108204, ss=23) at fork.c:80
80		if (!p)
---in copy_process
___pid
$4803 = 2
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0xffc	4092
***eax:physical address
eax            0xfc1000	16519168


    eip=235695, cs=15, eflags=582, esp=67108204, ss=23) at fork.c:86
86		*p = *current;	/* NOTE! this doesn't copy the supervisor stack */
---in copy_process
___pid
$4804 = 2
***copy task struct


    eip=235695, cs=15, eflags=582, esp=67108204, ss=23) at fork.c:116
116		p->tss.ldt = _LDT(nr);
---in copy_process
___pid
$4805 = 2
***new process state
$4806 = 2
***new process tss.esp0
$4807 = 16523264


    eip=235695, cs=15, eflags=582, esp=67108204, ss=23) at fork.c:117
117		p->tss.trace_bitmap = 0x80000000;
---in copy_process
___pid
$4808 = 2
***new LDT index in GDT
$4809 = 88
***new cs in LDT
$4810 = {a = 64, b = 146864896}
***new ds in LDT
$4811 = {a = 16383, b = 146862848}


Breakpoint 16, copy_mem (nr=3, p=0xfc1000) at fork.c:54
54		p->start_code = new_code_base;
---in copy_mem
___pid
$4812 = 2
***new_data_base
$4813 = 201326592
***old_data_base
$4814 = 134217728


    at memory.c:163
163		for( ; size-->0 ; from_dir++,to_dir++) {
---in copy_page_tables
___pid
$4815 = 2
***from_dir
$4816 = (unsigned long *) 0x80 <setup_idt+15>
***to_dir
$4817 = (unsigned long *) 0xc0 <setup_gdt+31>
size
$4818 = 16


    at memory.c:169
169			if (!(to_page_table = (unsigned long *) get_free_page()))
---in copy_page_tables
___pid
$4819 = 2
***before free page
***cur register ecx
ecx            0xfc12e2	16519906
***cur register edi
edi            0xfc12e7	16519911


    at memory.c:171
171			*to_dir = ((unsigned long) to_page_table) | 7;
---in copy_page_tables
___pid
$4820 = 2
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0xfc12e7	16519911
***from_page_table
$4821 = (unsigned long *) 0xff7000
***to_page_table
$4822 = (unsigned long *) 0xfc0000


    at memory.c:169
169			if (!(to_page_table = (unsigned long *) get_free_page()))
---in copy_page_tables
___pid
$4823 = 2
***before free page
***cur register ecx
ecx            0x266e0	157408
***cur register edi
edi            0xfc12e7	16519911


    at memory.c:171
171			*to_dir = ((unsigned long) to_page_table) | 7;
---in copy_page_tables
___pid
$4824 = 2
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0xfc12e7	16519911
***from_page_table
$4825 = (unsigned long *) 0xffd000
***to_page_table
$4826 = (unsigned long *) 0xfbf000


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4827 = 2
***task
$4828 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$4829 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4830 = 2
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$4831 = 2
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


    eip=235695, cs=15, eflags=582, esp=67108204, ss=23) at fork.c:134
134		set_tss_desc(gdt+(nr<<1)+FIRST_TSS_ENTRY,&(p->tss));
---in copy_process
___pid
$4832 = 2
tss in GDT
$4833 = 10
***tss address
$4834 = (struct tss_struct *) 0xfc12e8
ldt in GDT
$4835 = 11
***ldt address
$4836 = (struct desc_struct (*)[3]) 0xfc12d0


    eip=235695, cs=15, eflags=582, esp=67108204, ss=23) at fork.c:137
137		return last_pid;
---in copy_process
___pid
$4837 = 2
***new process state
$4838 = 0


Breakpoint 19, sys_fork () at system_call.s:219
219	1:	ret
---in sys_fork
***cur register esp
esp            0xffbfd0	0xffbfd0


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4839 = 2
***cur state
$4840 = 0
***cur counter
$4841 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4842 = 2
***task
$4843 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$4844 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4845 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4846 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4847 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4848 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$4849 = 2
***fault address
***cur register edx
edx            0xbfffd74	201325940
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=201325940) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$4850 = 2


Breakpoint 98, un_wp_page (table_entry=0xffdffc) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$4851 = 2
***table entry
$4852 = (unsigned long *) 0xffdffc


Breakpoint 99, un_wp_page (table_entry=0xffdffc) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$4853 = 2
***physical page address
$4854 = 16744448


Breakpoint 100, un_wp_page (table_entry=0xffdffc) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$4855 = 2
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xffdffc) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$4856 = 2
***new page
$4857 = 16506880


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$4858 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$4859 = 2
***fault address
***cur register edx
edx            0x80413f4	134484980
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134484980) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$4860 = 2


Breakpoint 98, un_wp_page (table_entry=0xff7104) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$4861 = 2
***table entry
$4862 = (unsigned long *) 0xff7104


Breakpoint 99, un_wp_page (table_entry=0xff7104) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$4863 = 2
***physical page address
$4864 = 16736256


Breakpoint 100, un_wp_page (table_entry=0xff7104) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$4865 = 2
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xff7104) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$4866 = 2
***new page
$4867 = 16502784


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$4868 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$4869 = 2
***fault address
***cur register edx
edx            0x804bb80	134527872
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134527872) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$4870 = 2


Breakpoint 98, un_wp_page (table_entry=0xff712c) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$4871 = 2
***table entry
$4872 = (unsigned long *) 0xff712c


Breakpoint 99, un_wp_page (table_entry=0xff712c) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$4873 = 2
***physical page address
$4874 = 16617472


Breakpoint 100, un_wp_page (table_entry=0xff712c) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$4875 = 2
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xff712c) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$4876 = 2
***new page
$4877 = 16498688


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$4878 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$4879 = 2
***fault address
***cur register edx
edx            0x804522e	134500910
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134500910) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$4880 = 2


Breakpoint 98, un_wp_page (table_entry=0xff7114) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$4881 = 2
***table entry
$4882 = (unsigned long *) 0xff7114


Breakpoint 99, un_wp_page (table_entry=0xff7114) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$4883 = 2
***physical page address
$4884 = 16711680


Breakpoint 100, un_wp_page (table_entry=0xff7114) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$4885 = 2
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xff7114) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$4886 = 2
***new page
$4887 = 16494592


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$4888 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$4889 = 2
***fault address
***cur register edx
edx            0x8046f88	134508424
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134508424) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$4890 = 2


Breakpoint 98, un_wp_page (table_entry=0xff7118) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$4891 = 2
***table entry
$4892 = (unsigned long *) 0xff7118


Breakpoint 99, un_wp_page (table_entry=0xff7118) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$4893 = 2
***physical page address
$4894 = 16728064


Breakpoint 100, un_wp_page (table_entry=0xff7118) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$4895 = 2
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xff7118) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$4896 = 2
***new page
$4897 = 16490496


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$4898 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$4899 = 2
***fault address
***cur register edx
edx            0x8047cb4	134511796
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134511796) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$4900 = 2


Breakpoint 98, un_wp_page (table_entry=0xff711c) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$4901 = 2
***table entry
$4902 = (unsigned long *) 0xff711c


Breakpoint 99, un_wp_page (table_entry=0xff711c) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$4903 = 2
***physical page address
$4904 = 16703488


Breakpoint 100, un_wp_page (table_entry=0xff711c) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$4905 = 2
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xff711c) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$4906 = 2
***new page
$4907 = 16486400


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$4908 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


    at signal.c:104
104		*(&eip) = sa_handler;
---in do_signal
___pid
$4909 = 2
***sig old eip
$4910 = 2
***sig old esp
$4911 = (unsigned long *) 0x2 <startup_32+2>


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4912 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3f	63
***cur register ebx
ebx            0xa	10
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x4ba80	309888


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4913 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=0) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$4914 = 2
***fd
$4915 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4916 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4917 = 2
***cur state
$4918 = 0
***cur counter
$4919 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4920 = 2
***task
$4921 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$4922 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4923 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4924 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4925 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4926 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4927 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x37	55
***cur register ebx
ebx            0xa	10
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4928 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4929 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4930 = 2
***cur state
$4931 = 0
***cur counter
$4932 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4933 = 2
***task
$4934 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$4935 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4936 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4937 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4938 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4939 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4940 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0xa	10
***cur register ecx
ecx            0x8	8
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4941 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=10) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$4942 = 2
***fd
$4943 = 10


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4944 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4945 = 2
***cur state
$4946 = 0
***cur counter
$4947 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4948 = 2
***task
$4949 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$4950 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4951 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4952 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4953 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4954 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$4955 = 2
***fault address
***cur register edx
edx            0x8049a80	134519424
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134519424) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$4956 = 2


Breakpoint 98, un_wp_page (table_entry=0xff7124) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$4957 = 2
***table entry
$4958 = (unsigned long *) 0xff7124


Breakpoint 99, un_wp_page (table_entry=0xff7124) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$4959 = 2
***physical page address
$4960 = 16683008


Breakpoint 100, un_wp_page (table_entry=0xff7124) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$4961 = 2
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xff7124) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$4962 = 2
***new page
$4963 = 16482304


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$4964 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$4965 = 2
***fault address
***cur register edx
edx            0x804435c	134497116
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134497116) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$4966 = 2


Breakpoint 98, un_wp_page (table_entry=0xff7110) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$4967 = 2
***table entry
$4968 = (unsigned long *) 0xff7110


Breakpoint 99, un_wp_page (table_entry=0xff7110) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$4969 = 2
***physical page address
$4970 = 16707584


Breakpoint 100, un_wp_page (table_entry=0xff7110) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$4971 = 2
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xff7110) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$4972 = 2
***new page
$4973 = 16478208


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$4974 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4975 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4976 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$4977 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$4978 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4979 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4980 = 2
***cur state
$4981 = 0
***cur counter
$4982 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4983 = 2
***task
$4984 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$4985 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$4986 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$4987 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$4988 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$4989 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$4990 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$4991 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$4992 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$4993 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$4994 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$4995 = 2
***cur state
$4996 = 0
***cur counter
$4997 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$4998 = 2
***task
$4999 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5000 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5001 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5002 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5003 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5004 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5005 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5006 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5007 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5008 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5009 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5010 = 2
***cur state
$5011 = 0
***cur counter
$5012 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5013 = 2
***task
$5014 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5015 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5016 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5017 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5018 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5019 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5020 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5021 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5022 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5023 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5024 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5025 = 2
***cur state
$5026 = 0
***cur counter
$5027 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5028 = 2
***task
$5029 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5030 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5031 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5032 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5033 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5034 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5035 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5036 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5037 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5038 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5039 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5040 = 2
***cur state
$5041 = 0
***cur counter
$5042 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5043 = 2
***task
$5044 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5045 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5046 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5047 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5048 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5049 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5050 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5051 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5052 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5053 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5054 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5055 = 2
***cur state
$5056 = 0
***cur counter
$5057 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5058 = 2
***task
$5059 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5060 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5061 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5062 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5063 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5064 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5065 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5066 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5067 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5f0 "\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^"..., count=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5068 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5069 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5070 = 2
***cur state
$5071 = 0
***cur counter
$5072 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5073 = 2
***task
$5074 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5075 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5076 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5077 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5078 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5079 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5080 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5081 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5082 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5083 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5084 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5085 = 2
***cur state
$5086 = 0
***cur counter
$5087 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5088 = 2
***task
$5089 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5090 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5091 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5092 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5093 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5094 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5095 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5096 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5097 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5098 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5099 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5100 = 2
***cur state
$5101 = 0
***cur counter
$5102 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5103 = 2
***task
$5104 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5105 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5106 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5107 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5108 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5109 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5110 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5111 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5112 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5113 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5114 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5115 = 2
***cur state
$5116 = 0
***cur counter
$5117 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5118 = 2
***task
$5119 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5120 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5121 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5122 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5123 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5124 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5125 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5126 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5127 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5128 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5129 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5130 = 2
***cur state
$5131 = 0
***cur counter
$5132 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5133 = 2
***task
$5134 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5135 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5136 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5137 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5138 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5139 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5140 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5141 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5142 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5143 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5144 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5145 = 2
***cur state
$5146 = 0
***cur counter
$5147 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5148 = 2
***task
$5149 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5150 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5151 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5152 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5153 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5154 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5155 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5156 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5157 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5158 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5159 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5160 = 2
***cur state
$5161 = 0
***cur counter
$5162 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5163 = 2
***task
$5164 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5165 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5166 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5167 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5168 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5169 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5170 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5171 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5172 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5173 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5174 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5175 = 2
***cur state
$5176 = 0
***cur counter
$5177 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5178 = 2
***task
$5179 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5180 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5181 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5182 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5183 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5184 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5185 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5186 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5187 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5188 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5189 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5190 = 2
***cur state
$5191 = 0
***cur counter
$5192 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5193 = 2
***task
$5194 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5195 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5196 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5197 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5198 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5199 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5200 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5201 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5202 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5203 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5204 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5205 = 2
***cur state
$5206 = 0
***cur counter
$5207 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5208 = 2
***task
$5209 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5210 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5211 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5212 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5213 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5214 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5215 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5216 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5217 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5218 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5219 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5220 = 2
***cur state
$5221 = 0
***cur counter
$5222 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5223 = 2
***task
$5224 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5225 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5226 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5227 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5228 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5229 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5230 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5231 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5232 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5233 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5234 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5235 = 2
***cur state
$5236 = 0
***cur counter
$5237 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5238 = 2
***task
$5239 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5240 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5241 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5242 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5243 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5244 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5245 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5246 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5247 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5248 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5249 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5250 = 2
***cur state
$5251 = 0
***cur counter
$5252 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5253 = 2
***task
$5254 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5255 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5256 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5257 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5258 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5259 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5260 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5261 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5262 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5263 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5264 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5265 = 2
***cur state
$5266 = 0
***cur counter
$5267 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5268 = 2
***task
$5269 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5270 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5271 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5272 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5273 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5274 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5275 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5276 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5277 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5278 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5279 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5280 = 2
***cur state
$5281 = 0
***cur counter
$5282 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5283 = 2
***task
$5284 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5285 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5286 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5287 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5288 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5289 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5290 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5291 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5292 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5293 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5294 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5295 = 2
***cur state
$5296 = 0
***cur counter
$5297 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5298 = 2
***task
$5299 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5300 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5301 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5302 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5303 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5304 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5305 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5306 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5307 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5308 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5309 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5310 = 2
***cur state
$5311 = 0
***cur counter
$5312 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5313 = 2
***task
$5314 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5315 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5316 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5317 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5318 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5319 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5320 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5321 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5322 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5323 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5324 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5325 = 2
***cur state
$5326 = 0
***cur counter
$5327 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5328 = 2
***task
$5329 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5330 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5331 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5332 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5333 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5334 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5335 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5336 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5337 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5338 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5339 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5340 = 2
***cur state
$5341 = 0
***cur counter
$5342 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5343 = 2
***task
$5344 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5345 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5346 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5347 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5348 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5349 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5350 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5351 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5352 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5353 = 201322496


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5354 = 2
***task
$5355 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5356 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5357 = 2
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$5358 = 2
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5359 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5360 = 2
***cur state
$5361 = 0
***cur counter
$5362 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5363 = 2
***task
$5364 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5365 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5366 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5367 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5368 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5369 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5370 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5371 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5372 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5373 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5374 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5375 = 2
***cur state
$5376 = 0
***cur counter
$5377 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5378 = 2
***task
$5379 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5380 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5381 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5382 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5383 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5384 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5385 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5386 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5387 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5388 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5389 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5390 = 2
***cur state
$5391 = 0
***cur counter
$5392 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5393 = 2
***task
$5394 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5395 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5396 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5397 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5398 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5399 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5400 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5401 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5402 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5403 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5404 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5405 = 2
***cur state
$5406 = 0
***cur counter
$5407 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5408 = 2
***task
$5409 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5410 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5411 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5412 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5413 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5414 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5415 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5416 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5417 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5f0 "\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^"..., count=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5418 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5419 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5420 = 2
***cur state
$5421 = 0
***cur counter
$5422 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5423 = 2
***task
$5424 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5425 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5426 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5427 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5428 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5429 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$5430 = 2
***fault address
***cur register edx
edx            0x804cc0c	134532108
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134532108) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$5431 = 2


Breakpoint 98, un_wp_page (table_entry=0xff7130) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$5432 = 2
***table entry
$5433 = (unsigned long *) 0xff7130


Breakpoint 99, un_wp_page (table_entry=0xff7130) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$5434 = 2
***physical page address
$5435 = 16584704


Breakpoint 100, un_wp_page (table_entry=0xff7130) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$5436 = 2
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xff7130) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$5437 = 2
***new page
$5438 = 16474112


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$5439 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$5440 = 2
***fault address
***cur register edx
edx            0x804afc0	134524864
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134524864) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$5441 = 2


Breakpoint 98, un_wp_page (table_entry=0xff7128) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$5442 = 2
***table entry
$5443 = (unsigned long *) 0xff7128


Breakpoint 99, un_wp_page (table_entry=0xff7128) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$5444 = 2
***physical page address
$5445 = 16629760


Breakpoint 100, un_wp_page (table_entry=0xff7128) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$5446 = 2
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xff7128) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$5447 = 2
***new page
$5448 = 16470016


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$5449 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$5450 = 2
***fault address
***cur register edx
edx            0xbffea74	201321076
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=201321076) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$5451 = 2


Breakpoint 98, un_wp_page (table_entry=0xffdff8) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$5452 = 2
***table entry
$5453 = (unsigned long *) 0xffdff8


Breakpoint 99, un_wp_page (table_entry=0xffdff8) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$5454 = 2
***physical page address
$5455 = 16527360


Breakpoint 100, un_wp_page (table_entry=0xffdff8) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$5456 = 2
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xffdff8) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$5457 = 2
***new page
$5458 = 16465920


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$5459 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$5460 = 2
***fault address
***cur register edx
edx            0x804d40c	134534156
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134534156) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$5461 = 2


Breakpoint 98, un_wp_page (table_entry=0xff7134) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$5462 = 2
***table entry
$5463 = (unsigned long *) 0xff7134


Breakpoint 99, un_wp_page (table_entry=0xff7134) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$5464 = 2
***physical page address
$5465 = 16560128


Breakpoint 100, un_wp_page (table_entry=0xff7134) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$5466 = 2
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xff7134) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$5467 = 2
***new page
$5468 = 16461824


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$5469 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$5470 = 2
***fault address
***cur register edx
edx            0x804e440	134538304
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134538304) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$5471 = 2


Breakpoint 98, un_wp_page (table_entry=0xff7138) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$5472 = 2
***table entry
$5473 = (unsigned long *) 0xff7138


Breakpoint 99, un_wp_page (table_entry=0xff7138) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$5474 = 2
***physical page address
$5475 = 16523264


Breakpoint 100, un_wp_page (table_entry=0xff7138) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$5476 = 2
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xff7138) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$5477 = 2
***new page
$5478 = 16457728


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$5479 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5480 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4ec00	322560
***cur register ecx
ecx            0x2f	47
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5481 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=322560) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$5482 = 2
***end_data_seg
$5483 = 322560
***cur brk
$5484 = 322560


Breakpoint 59, sys_brk (end_data_seg=322560) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$5485 = 2
***cur brk
$5486 = 322560


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5487 = 2
***eax as return
eax            0x4ec00	322560
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5488 = 2
***cur state
$5489 = 0
***cur counter
$5490 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5491 = 2
***task
$5492 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5493 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5494 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5495 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5496 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5497 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5498 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4f400	324608
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5499 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=324608) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$5500 = 2
***end_data_seg
$5501 = 324608
***cur brk
$5502 = 322560


Breakpoint 59, sys_brk (end_data_seg=324608) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$5503 = 2
***cur brk
$5504 = 324608


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5505 = 2
***eax as return
eax            0x4f400	324608
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5506 = 2
***cur state
$5507 = 0
***cur counter
$5508 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5509 = 2
***task
$5510 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5511 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5512 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5513 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5514 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5515 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$5516 = 2
***fault address
***cur register edx
edx            0x804f000	134541312
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134541312) at memory.c:367
367	{
---in do_no_page
___pid
$5517 = 2
***address
$5518 = 134541312


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$5519 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$5520 = 2
***fault address
***cur register edx
edx            0x8048038	134512696
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134512696) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$5521 = 2


Breakpoint 98, un_wp_page (table_entry=0xff7120) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$5522 = 2
***table entry
$5523 = (unsigned long *) 0xff7120


Breakpoint 99, un_wp_page (table_entry=0xff7120) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$5524 = 2
***physical page address
$5525 = 16699392


Breakpoint 100, un_wp_page (table_entry=0xff7120) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$5526 = 2
***need copy page


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5527 = 2
***task
$5528 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5529 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5530 = 2
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$5531 = 2
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 101, un_wp_page (table_entry=0xff7120) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$5532 = 2
***new page
$5533 = 16449536


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$5534 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5535 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x4ba4c	309836
***cur register ecx
ecx            0x241	577
***cur register edx
edx            0x1b6	438


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5536 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 65, sys_open (filename=0x4ba4c "", flag=577, mode=420) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$5537 = 2
***open filename
$5538 = 0 '\000'
***fd
$5539 = 3


Breakpoint 66, sys_open (filename=0x4ba4c "", flag=577, mode=420) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$5540 = 2
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5541 = 2
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5542 = 2
***cur state
$5543 = 0
***cur counter
$5544 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5545 = 2
***task
$5546 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5547 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5548 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5549 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5550 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5551 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5552 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x37	55
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5553 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5554 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5555 = 2
***cur state
$5556 = 0
***cur counter
$5557 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5558 = 2
***task
$5559 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5560 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5561 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5562 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5563 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5564 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5565 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x37	55
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0xa	10


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5566 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5567 = 2
***eax as return
eax            0xa	10
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5568 = 2
***cur state
$5569 = 0
***cur counter
$5570 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5571 = 2
***task
$5572 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5573 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5574 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5575 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5576 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5577 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5578 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x37	55
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5579 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5580 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5581 = 2
***cur state
$5582 = 0
***cur counter
$5583 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5584 = 2
***task
$5585 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5586 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5587 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5588 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5589 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5590 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5591 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x37	55
***cur register ebx
ebx            0xa	10
***cur register ecx
ecx            0x2	2
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5592 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5593 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5594 = 2
***cur state
$5595 = 0
***cur counter
$5596 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5597 = 2
***task
$5598 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5599 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5600 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5601 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5602 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5603 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5604 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3f	63
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5605 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=1) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$5606 = 2
***fd
$5607 = 1


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5608 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5609 = 2
***cur state
$5610 = 0
***cur counter
$5611 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5612 = 2
***task
$5613 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5614 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5615 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5616 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5617 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5618 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5619 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5620 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$5621 = 2
***fd
$5622 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5623 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5624 = 2
***cur state
$5625 = 0
***cur counter
$5626 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5627 = 2
***task
$5628 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5629 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5630 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5631 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5632 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5633 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$5634 = 2
***fault address
***cur register edx
edx            0x8027e00	134381056
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134381056) at memory.c:367
367	{
---in do_no_page
___pid
$5635 = 2
***address
$5636 = 134381056


Breakpoint 103, do_no_page (error_code=4, address=134377472) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$5637 = 2
***page
$5638 = 16445440
***block
$5639 = 157


Breakpoint 42, do_no_page (error_code=4, address=134377472) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$5640 = 2
***nr array$5641 = 980
$5642 = 981
$5643 = 982
$5644 = 983


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$5645 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bb7c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bb7c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16445440, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134377472) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$5646 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$5647 = 2
***drive
$5648 = 0
***head
$5649 = 3


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$5650 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$5651 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bba0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bba0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16445440, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134377472) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$5652 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$5653 = 2
***drive
$5654 = 0
***head
$5655 = 3


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$5656 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$5657 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bbc4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bbc4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16445440, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134377472) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$5658 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$5659 = 2
***drive
$5660 = 0
***head
$5661 = 3


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$5662 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$5663 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bbe8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bbe8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16445440, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134377472) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$5664 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$5665 = 2
***drive
$5666 = 0
***head
$5667 = 3


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$5668 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$5669 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$5670 = 2
***fault address
***cur register edx
edx            0x8028100	134381824
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134381824) at memory.c:367
367	{
---in do_no_page
___pid
$5671 = 2
***address
$5672 = 134381824


Breakpoint 103, do_no_page (error_code=4, address=134381568) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$5673 = 2
***page
$5674 = 16441344
***block
$5675 = 161


Breakpoint 42, do_no_page (error_code=4, address=134381568) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$5676 = 2
***nr array$5677 = 984
$5678 = 985
$5679 = 986
$5680 = 987


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$5681 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bc0c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bc0c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16441344, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134381568) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$5682 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$5683 = 2
***drive
$5684 = 0
***head
$5685 = 3


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$5686 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$5687 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bc30) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bc30) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16441344, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134381568) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$5688 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$5689 = 2
***drive
$5690 = 0
***head
$5691 = 3


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$5692 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$5693 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bc54) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bc54) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16441344, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134381568) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$5694 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$5695 = 2
***drive
$5696 = 0
***head
$5697 = 3


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$5698 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$5699 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bc78) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bc78) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16441344, dev=769, b=0xffbf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134381568) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$5700 = 2
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$5701 = 2
***drive
$5702 = 0
***head
$5703 = 4


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$5704 = 2
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5705 = 2
***task
$5706 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5707 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5708 = 2
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$5709 = 2
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$5710 = 2
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5711 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x48c0c	297996
***cur register edx
edx            0xb	11


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5712 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=1, buf=0x48c0c "", count=11) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$5713 = 2


Breakpoint 68, sys_write (fd=1, buf=0x48c0c "", count=11) at read_write.c:100
100			return file_write(inode,file,buf,count);
---in sys_write
___pid
$5714 = 2
***call file write


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5715 = 2
***eax as return
eax            0xb	11
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5716 = 2
***cur state
$5717 = 0
***cur counter
$5718 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5719 = 2
***task
$5720 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5721 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5722 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5723 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5724 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5725 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5726 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x48c0c	297996
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5727 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=1, buf=0x48c0c "", count=0) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$5728 = 2


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5729 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5730 = 2
***cur state
$5731 = 0
***cur counter
$5732 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5733 = 2
***task
$5734 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5735 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5736 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5737 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5738 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5739 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5740 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3f	63
***cur register ebx
ebx            0xa	10
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x4e560	320864


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5741 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=1) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$5742 = 2
***fd
$5743 = 1


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5744 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5745 = 2
***cur state
$5746 = 0
***cur counter
$5747 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5748 = 2
***task
$5749 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5750 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5751 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5752 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5753 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5754 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5755 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x37	55
***cur register ebx
ebx            0xa	10
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5756 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5757 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5758 = 2
***cur state
$5759 = 0
***cur counter
$5760 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5761 = 2
***task
$5762 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5763 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5764 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5765 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5766 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5767 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5768 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0xa	10
***cur register ecx
ecx            0x8	8
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5769 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=10) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$5770 = 2
***fd
$5771 = 10


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5772 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5773 = 2
***cur state
$5774 = 0
***cur counter
$5775 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5776 = 2
***task
$5777 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5778 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5779 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5780 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5781 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5782 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5783 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5784 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5785 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5786 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5787 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5788 = 2
***cur state
$5789 = 0
***cur counter
$5790 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5791 = 2
***task
$5792 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5793 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5794 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5795 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5796 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5797 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5798 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5799 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5800 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5801 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5802 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5803 = 2
***cur state
$5804 = 0
***cur counter
$5805 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5806 = 2
***task
$5807 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5808 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5809 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5810 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5811 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5812 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5813 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5814 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5815 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5816 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5817 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5818 = 2
***cur state
$5819 = 0
***cur counter
$5820 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5821 = 2
***task
$5822 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5823 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5824 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5825 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5826 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5827 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5828 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5829 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5830 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5831 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5832 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5833 = 2
***cur state
$5834 = 0
***cur counter
$5835 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5836 = 2
***task
$5837 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5838 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5839 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5840 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5841 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5842 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5843 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5844 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5845 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5846 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5847 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5848 = 2
***cur state
$5849 = 0
***cur counter
$5850 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5851 = 2
***task
$5852 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5853 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5854 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5855 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5856 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5857 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5858 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5859 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5860 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5861 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5862 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5863 = 2
***cur state
$5864 = 0
***cur counter
$5865 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5866 = 2
***task
$5867 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5868 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5869 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5870 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5871 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5872 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5873 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5874 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5875 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5876 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5877 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5878 = 2
***cur state
$5879 = 0
***cur counter
$5880 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5881 = 2
***task
$5882 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5883 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5884 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5885 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5886 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5887 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5888 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5889 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5890 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5891 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5892 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5893 = 2
***cur state
$5894 = 0
***cur counter
$5895 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5896 = 2
***task
$5897 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5898 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5899 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5900 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5901 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5902 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5903 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5904 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5905 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5906 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5907 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5908 = 2
***cur state
$5909 = 0
***cur counter
$5910 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5911 = 2
***task
$5912 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5913 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5914 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5915 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5916 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5917 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5918 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5919 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5920 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5921 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5922 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5923 = 2
***cur state
$5924 = 0
***cur counter
$5925 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5926 = 2
***task
$5927 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5928 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5929 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5930 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5931 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5932 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5933 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5934 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5935 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5936 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5937 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5938 = 2
***cur state
$5939 = 0
***cur counter
$5940 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5941 = 2
***task
$5942 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5943 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5944 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5945 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5946 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5947 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5948 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5949 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5950 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5f0 "\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^"..., count=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5951 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5952 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5953 = 2
***cur state
$5954 = 0
***cur counter
$5955 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5956 = 2
***task
$5957 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5958 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5959 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5960 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5961 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5962 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5963 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5964 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$5965 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$5966 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5967 = 2
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5968 = 2
***cur state
$5969 = 0
***cur counter
$5970 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5971 = 2
***task
$5972 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5973 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5974 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5975 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5976 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5977 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5978 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x48c0c	297996
***cur register edx
edx            0x6	6


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5979 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=1, buf=0x48c0c "", count=6) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$5980 = 2


Breakpoint 71, sys_write (fd=1, buf=0x48c0c "", count=6) at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$5981 = 2
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$5982 = 2


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5983 = 2
***eax as return
eax            0x6	6
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5984 = 2
***cur state
$5985 = 0
***cur counter
$5986 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$5987 = 2
***task
$5988 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$5989 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$5990 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$5991 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$5992 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$5993 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$5994 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x48c0c	297996
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$5995 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=1, buf=0x48c0c "", count=0) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$5996 = 2


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$5997 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$5998 = 2
***cur state
$5999 = 0
***cur counter
$6000 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6001 = 2
***task
$6002 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6003 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6004 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6005 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6006 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6007 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6008 = 2
***task
$6009 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6010 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6011 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6012 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6013 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6014 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6015 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5f0	67106288
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6016 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$6017 = 2
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5f0, size=-2575) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5fcount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$6018 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6019 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6020 = 2
***cur state
$6021 = 0
***cur counter
$6022 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6023 = 2
***task
$6024 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6025 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6026 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6027 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6028 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6029 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6030 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x48c0c	297996
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6031 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=1, buf=0x48c0c "", count=0) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$6032 = 2


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6033 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6034 = 2
***cur state
$6035 = 0
***cur counter
$6036 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6037 = 2
***task
$6038 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6039 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6040 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6041 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6042 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6043 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6044 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6045 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=1) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6046 = 2
***fd
$6047 = 1


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6048 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6049 = 2
***cur state
$6050 = 0
***cur counter
$6051 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6052 = 2
***task
$6053 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6054 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6055 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6056 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6057 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6058 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6059 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6060 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=2) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6061 = 2
***fd
$6062 = 2


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6063 = 2
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6064 = 2
***cur state
$6065 = 0
***cur counter
$6066 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6067 = 2
***task
$6068 = {0x22220 <init_task>, 0xfff000, 0xffb000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6069 = (struct task_struct *) 0xffb000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6070 = 2
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6071 = 2
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6072 = 2
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6073 = 2
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6074 = 2
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffbfec	0xffbfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1	1
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6075 = 2
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 6, do_exit (code=0) at exit.c:105
105		free_page_tables(get_base(current->ldt[1]),get_limit(0x0f));
---in do_exit
***pid
$6076 = 2
***father pid
$6077 = 1


Breakpoint 94, free_page_tables (from=134217728, size=1) at memory.c:116
116		for ( ; size-->0 ; dir++) {
---in free_page_tables
___pid
$6078 = 2
***from
$6079 = 134217728
***size
$6080 = 1
***dir
$6081 = (unsigned long *) 0x80 <setup_idt+15>


Breakpoint 94, free_page_tables (from=134217728, size=16) at memory.c:116
116		for ( ; size-->0 ; dir++) {
---in free_page_tables
___pid
$6082 = 2
***from
$6083 = 134217728
***size
$6084 = 16
***dir
$6085 = (unsigned long *) 0x80 <setup_idt+15>


Breakpoint 76, do_exit (code=0) at exit.c:109
109				task[i]->father = 1;
---in do_exit
***in child loop:pid
$6086 = 3
***child state
$6087 = 0


Breakpoint 64, sys_close (fd=0) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6088 = 2
***fd
$6089 = 0


Breakpoint 77, do_exit (code=0) at exit.c:131
131		tell_father(current->father);
---in do_exit
***cur state
$6090 = 3
***exit code
$6091 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x0000a49b in do_exit (code=0) at exit.c:132
#2  0x0000a4c6 in sys_exit (error_code=0) at exit.c:138
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()


Breakpoint 39, schedule () at sched.c:119
119					(*p)->state=TASK_RUNNING;
---in schedule
***signal cause state change pid
$6092 = 1


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$6093 = 0
***loop pid
$6094 = 3
***loop counter
$6095 = 15


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$6096 = 3
***loop pid
$6097 = 2
***loop counter
$6098 = 7


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$6099 = 0
***loop pid
$6100 = 1
***loop counter
$6101 = 22


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$6102 = 1


Breakpoint 78, release (p=0xffb000) at exit.c:28
28				free_page((long)p);
---in release
___pid
$6103 = 1
***call free_page
***release pid
$6104 = 2


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00009e90 in release (p=0xffb000) at exit.c:29
#2  0x0000a683 in sys_waitpid (pid=-1, stat_addr=0x28ed0 <user_stack+4016>, 
    options=0) at exit.c:175
#3  0x0000793f in system_call () at system_call.s:94
#4  0xffffffff in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$6105 = 0
***loop pid
$6106 = 3
***loop counter
$6107 = 15


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$6108 = 0
***loop pid
$6109 = 1
***loop counter
$6110 = 22


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$6111 = 1


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6112 = 1
***eax as return
eax            0x2	2
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6113 = 1
***cur state
$6114 = 0
***cur counter
$6115 = 22


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6116 = 1
***task
$6117 = {0x22220 <init_task>, 0xfff000, 0x0 <startup_32>, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6118 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6119 = 1
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6120 = 1
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6121 = 1
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6122 = 1
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6123 = 1
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffffec	0xffffec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2	2
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x28ed0	167632
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6124 = 1
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 10, sys_fork () at system_call.s:217
217		call copy_process
---in sys_fork
___pid
$6125 = 1
***cur register gs
gs             0x17	23
***push gs
***cur register esi
esi            0xe0000	917504
***push esi
***cur register edi
edi            0xffc	4092
***push edi
***cur register ebp
ebp            0x28f08	0x28f08 <user_stack+4072>
***push ebp
***cur register eax
eax            0x2	2
;;;eax to nr


    eip=27350, cs=15, eflags=582, esp=167632, ss=23) at fork.c:79
79		p = (struct task_struct *) get_free_page();
---in copy_process
***father pid
$6126 = 1
***new pid
$6127 = 4
***task number
$6128 = 2
***before free page
***cur register ecx
ecx            0x2	2
***cur register edi
edi            0xffc	4092


    eip=27350, cs=15, eflags=582, esp=167632, ss=23) at fork.c:80
80		if (!p)
---in copy_process
___pid
$6129 = 1
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0xffc	4092
***eax:physical address
eax            0xffd000	16764928


    eip=27350, cs=15, eflags=582, esp=167632, ss=23) at fork.c:86
86		*p = *current;	/* NOTE! this doesn't copy the supervisor stack */
---in copy_process
___pid
$6130 = 1
***copy task struct


    eip=27350, cs=15, eflags=582, esp=167632, ss=23) at fork.c:116
116		p->tss.ldt = _LDT(nr);
---in copy_process
___pid
$6131 = 1
***new process state
$6132 = 2
***new process tss.esp0
$6133 = 16769024


    eip=27350, cs=15, eflags=582, esp=167632, ss=23) at fork.c:117
117		p->tss.trace_bitmap = 0x80000000;
---in copy_process
___pid
$6134 = 1
***new LDT index in GDT
$6135 = 72
***new cs in LDT
$6136 = {a = 159, b = 79756032}
***new ds in LDT
$6137 = {a = 159, b = 79753984}


Breakpoint 16, copy_mem (nr=2, p=0xffd000) at fork.c:54
54		p->start_code = new_code_base;
---in copy_mem
___pid
$6138 = 1
***new_data_base
$6139 = 134217728
***old_data_base
$6140 = 67108864


    at memory.c:163
163		for( ; size-->0 ; from_dir++,to_dir++) {
---in copy_page_tables
___pid
$6141 = 1
***from_dir
$6142 = (unsigned long *) 0x40 <startup_32+64>
***to_dir
$6143 = (unsigned long *) 0x80 <setup_idt+15>
size
$6144 = 1


    at memory.c:169
169			if (!(to_page_table = (unsigned long *) get_free_page()))
---in copy_page_tables
___pid
$6145 = 1
***before free page
***cur register ecx
ecx            0xffd2e2	16765666
***cur register edi
edi            0xffd2e7	16765671


    at memory.c:171
171			*to_dir = ((unsigned long) to_page_table) | 7;
---in copy_page_tables
___pid
$6146 = 1
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0xffd2e7	16765671
***from_page_table
$6147 = (unsigned long *) 0xffe000
***to_page_table
$6148 = (unsigned long *) 0xffb000


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6149 = 1
***task
$6150 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6151 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6152 = 1
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$6153 = 1
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


    eip=27350, cs=15, eflags=582, esp=167632, ss=23) at fork.c:134
134		set_tss_desc(gdt+(nr<<1)+FIRST_TSS_ENTRY,&(p->tss));
---in copy_process
___pid
$6154 = 1
tss in GDT
$6155 = 8
***tss address
$6156 = (struct tss_struct *) 0xffd2e8
ldt in GDT
$6157 = 9
***ldt address
$6158 = (struct desc_struct (*)[3]) 0xffd2d0


    eip=27350, cs=15, eflags=582, esp=167632, ss=23) at fork.c:137
137		return last_pid;
---in copy_process
___pid
$6159 = 1
***new process state
$6160 = 0


Breakpoint 19, sys_fork () at system_call.s:219
219	1:	ret
---in sys_fork
***cur register esp
esp            0xffffd0	0xffffd0


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6161 = 1
***cur state
$6162 = 0
***cur counter
$6163 = 21


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6164 = 1
***task
$6165 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6166 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6167 = 1
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6168 = 1
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6169 = 1
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6170 = 1
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$6171 = 1
***fault address
***cur register edx
edx            0x4028ed4	67276500
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=67276500) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$6172 = 1


Breakpoint 98, un_wp_page (table_entry=0xffe0a0) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$6173 = 1
***table entry
$6174 = (unsigned long *) 0xffe0a0


Breakpoint 99, un_wp_page (table_entry=0xffe0a0) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$6175 = 1
***physical page address
$6176 = 16748544


Breakpoint 100, un_wp_page (table_entry=0xffe0a0) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$6177 = 1
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xffe0a0) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$6178 = 1
***new page
$6179 = 16740352


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$6180 = 1
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6181 = 1
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffffec	0xffffec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x7	7
***cur register ebx
ebx            0xffffffff	-1
***cur register ecx
ecx            0x28ed0	167632
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6182 = 1
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    options=0) at exit.c:146
146		verify_area(stat_addr,4);
---in sys_waitpid
___pid
$6183 = 1


Breakpoint 91, write_verify (address=67272704) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$6184 = 1
***call stack
#0  write_verify (address=67272704) at memory.c:267
#1  0x000085cd in verify_area (addr=0x28ed0 <user_stack+4016>, size=-300)
    at fork.c:35
#2  0x0000a4ea in sys_waitpid (pid=-1, stat_addr=0x28ed0 <user_stack+4016>, 
    options=0) at exit.c:146
#3  0x0000793f in system_call () at system_call.s:94
#4  0xffffffff in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)
***address
$6185 = 67272704


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x0000a6f8 in sys_waitpid (pid=-1, stat_addr=0x28ed0 <user_stack+4016>, 
    options=0) at exit.c:187
#2  0x0000793f in system_call () at system_call.s:94
#3  0xffffffff in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$6186 = 0
***loop pid
$6187 = 3
***loop counter
$6188 = 15


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$6189 = 0
***loop pid
$6190 = 4
***loop counter
$6191 = 15


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$6192 = 1
***loop pid
$6193 = 1
***loop counter
$6194 = 21


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$6195 = 3


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$6196 = 3
***fault address
***cur register edx
edx            0xffffd74	268434804
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268434804) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$6197 = 3


Breakpoint 98, un_wp_page (table_entry=0xfbfffc) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$6198 = 3
***table entry
$6199 = (unsigned long *) 0xfbfffc


Breakpoint 99, un_wp_page (table_entry=0xfbfffc) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$6200 = 3
***physical page address
$6201 = 16744448


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$6202 = 3
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$6203 = 3
***fault address
***cur register edx
edx            0xc0469d0	201615824
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=201615824) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$6204 = 3


Breakpoint 98, un_wp_page (table_entry=0xfc0118) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$6205 = 3
***table entry
$6206 = (unsigned long *) 0xfc0118


Breakpoint 99, un_wp_page (table_entry=0xfc0118) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$6207 = 3
***physical page address
$6208 = 16728064


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$6209 = 3
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6210 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6211 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=3, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$6212 = 3
***signum
$6213 = 3


Breakpoint 32, sys_signal (signum=3, handler=1, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$6214 = 3
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6215 = 3
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6216 = 3
***cur state
$6217 = 0
***cur counter
$6218 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6219 = 3
***task
$6220 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6221 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6222 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6223 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6224 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6225 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6226 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xf	15
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6227 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$6228 = 3
***signum
$6229 = 15


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$6230 = 3
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6231 = 3
***eax as return
eax            0x1534	5428
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6232 = 3
***cur state
$6233 = 0
***cur counter
$6234 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6235 = 3
***task
$6236 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6237 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6238 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6239 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6240 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6241 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6242 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6243 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=2, handler=1, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$6244 = 3
***signum
$6245 = 2


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$6246 = 3
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6247 = 3
***eax as return
eax            0x1730	5936
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6248 = 3
***cur state
$6249 = 0
***cur counter
$6250 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6251 = 3
***task
$6252 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6253 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6254 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6255 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6256 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6257 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6258 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6259 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=3, handler=1, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$6260 = 3
***signum
$6261 = 3


Breakpoint 32, sys_signal (signum=3, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$6262 = 3
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6263 = 3
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6264 = 3
***cur state
$6265 = 0
***cur counter
$6266 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6267 = 3
***task
$6268 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6269 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6270 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6271 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6272 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6273 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6274 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x14	20
***cur register ebx
ebx            0x19da0	105888
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6275 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6276 = 3
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6277 = 3
***cur state
$6278 = 0
***cur counter
$6279 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6280 = 3
***task
$6281 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6282 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6283 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6284 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6285 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6286 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$6287 = 3
***fault address
***cur register edx
edx            0xc0413f8	201593848
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=201593848) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$6288 = 3


Breakpoint 98, un_wp_page (table_entry=0xfc0104) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$6289 = 3
***table entry
$6290 = (unsigned long *) 0xfc0104


Breakpoint 99, un_wp_page (table_entry=0xfc0104) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$6291 = 3
***physical page address
$6292 = 16736256


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$6293 = 3
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$6294 = 3
***fault address
***cur register edx
edx            0xc04522e	201609774
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=201609774) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$6295 = 3


Breakpoint 98, un_wp_page (table_entry=0xfc0114) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$6296 = 3
***table entry
$6297 = (unsigned long *) 0xfc0114


Breakpoint 99, un_wp_page (table_entry=0xfc0114) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$6298 = 3
***physical page address
$6299 = 16711680


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$6300 = 3
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$6301 = 3
***fault address
***cur register edx
edx            0xc04bb60	201636704
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=201636704) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$6302 = 3


Breakpoint 98, un_wp_page (table_entry=0xfc012c) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$6303 = 3
***table entry
$6304 = (unsigned long *) 0xfc012c


Breakpoint 99, un_wp_page (table_entry=0xfc012c) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$6305 = 3
***physical page address
$6306 = 16617472


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$6307 = 3
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6308 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x11	17
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6309 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$6310 = 3
***signum
$6311 = 17


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$6312 = 3
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6313 = 3
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6314 = 3
***cur state
$6315 = 0
***cur counter
$6316 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6317 = 3
***task
$6318 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6319 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6320 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6321 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6322 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6323 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6324 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0xb	11
***cur register ebx
ebx            0x4bb8c	310156
***cur register ecx
ecx            0x4bb6c	310124
***cur register edx
edx            0x4b0cc	307404


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6325 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 44, sys_execve () at system_call.s:202
202		pushl %eax
---in sys_execve
___pid
$6326 = 3
***cur register eax
eax            0xfc1fec	16523244
***push eax


    argv=0x4bb6c, envp=0x4b0cc) at exec.c:210
210		e_uid = (i & S_ISUID) ? inode->i_uid : current->euid;
---in do_execve
___pid
$6327 = 3
***cur euid
$6328 = 0
***cur egid
$6329 = 0
***imode
$6330 = 33225
***inode euid
$6331 = 0
***inode egid
$6332 = 0 '\000'


    argv=0x4bb6c, envp=0x4b0cc) at exec.c:212
212		if (current->euid == inode->i_uid)
---in do_execve
___pid
$6333 = 3
***changed euid
$6334 = 0
***changed egid
$6335 = 0
***compare priority


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6336 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bcc0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bcc0) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=3443) at buffer.c:278
#5  0x000101c7 in do_execve (eip=0xfc1fec, tmp=31039, filename=0x4bb8c "", 
    argv=0x4bb6c, envp=0x4b0cc) at exec.c:221
#6  0x00007a34 in sys_execve () at system_call.s:203
#7  0x00fc1fec in ?? ()


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$6337 = 3
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$6338 = 3
***drive
$6339 = 0
***head
$6340 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6341 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$6342 = 3
***tmp:cur parameter address pointer
$6343 = 0x4ba7a ""
***len
$6344 = 14
***cur pointer
$6345 = 131068


    from_kmem=0) at exec.c:142
142					if (from_kmem==2)
---in copy_strings
___pid
$6346 = 3
***cur physical pointer
$6347 = 0xfbe000 ""


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$6348 = 3
***tmp:cur parameter address pointer
$6349 = 0x4e43a ""
***len
$6350 = 14
***cur pointer
$6351 = 131054


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$6352 = 3
***tmp:cur parameter address pointer
$6353 = 0x4e416 ""
***len
$6354 = 10
***cur pointer
$6355 = 131040


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$6356 = 3
***tmp:cur parameter address pointer
$6357 = 0x46cd3 ""
***len
$6358 = 71
***cur pointer
$6359 = 131030


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$6360 = 3
***tmp:cur parameter address pointer
$6361 = 0x4ba13 ""
***len
$6362 = 7
***cur pointer
$6363 = 130959


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$6364 = 3
***tmp:cur parameter address pointer
$6365 = 0x4bbf9 ""
***len
$6366 = 13
***cur pointer
$6367 = 130952


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$6368 = 3
***tmp:cur parameter address pointer
$6369 = 0x4bbd4 ""
***len
$6370 = 8
***cur pointer
$6371 = 130939


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$6372 = 3
***tmp:cur parameter address pointer
$6373 = 0x4bbba ""
***len
$6374 = 14
***cur pointer
$6375 = 130931


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$6376 = 3
***tmp:cur parameter address pointer
$6377 = 0x4bad8 ""
***len
$6378 = 12
***cur pointer
$6379 = 130917


    from_kmem=0) at exec.c:142
142					if (from_kmem==2)
---in copy_strings
___pid
$6380 = 3
***cur physical pointer
$6381 = 0xfbe000 ""


    argv=0x4bb6c, envp=0x4b0cc) at exec.c:313
313			if (!p) {
---in do_execve
___pid
$6382 = 3
***parameter pointer
$6383 = 130905


Breakpoint 64, sys_close (fd=10) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6384 = 3
***fd
$6385 = 10


Breakpoint 94, free_page_tables (from=201326592, size=1) at memory.c:116
116		for ( ; size-->0 ; dir++) {
---in free_page_tables
___pid
$6386 = 3
***from
$6387 = 201326592
***size
$6388 = 1
***dir
$6389 = (unsigned long *) 0xc0 <setup_gdt+31>


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6390 = 3
***task
$6391 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6392 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6393 = 3
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$6394 = 3
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 94, free_page_tables (from=201326592, size=16) at memory.c:116
116		for ( ; size-->0 ; dir++) {
---in free_page_tables
___pid
$6395 = 3
***from
$6396 = 201326592
***size
$6397 = 16
***dir
$6398 = (unsigned long *) 0xc0 <setup_gdt+31>


Breakpoint 51, change_ldt (text_size=4096, page=0xfc1ed0) at exec.c:167
167		set_limit(current->ldt[2],data_limit);
---in change_ldt
___pid
$6399 = 3
***data_limit
$6400 = 67108864
***code_limit
$6401 = 4096


Breakpoint 52, change_ldt (text_size=4096, page=0xfc1ed0) at exec.c:174
174				put_page(page[i],data_base);
---in change_ldt
___pid
$6402 = 3
***data_base
$6403 = 268431360


Breakpoint 104, put_page (page=16506880, address=268431360) at memory.c:211
211			if (!(tmp=get_free_page()))
---in put_page
___pid
$6404 = 3
***page_table
$6405 = (unsigned long *) 0xfc <setup_gdt+91>
***page$6406 = 16506880


    argv=0x4bb6c, envp=0x4b0cc) at exec.c:336
336		p = (unsigned long) create_tables((char *)p,argc,envc);
---in do_execve
___pid
$6407 = 3
***parameter space pointer change
$6408 = 67108697


    at exec.c:52
52		sp -= envc+1;
---in create_tables
___pid
$6409 = 3
***sp
$6410 = (unsigned long *) 0x3ffff58
***argc
$6411 = 1
***envc
$6412 = 8


    argv=0x4bb6c, envp=0x4b0cc) at exec.c:347
347		eip[3] = p;			/* stack pointer */
---in do_execve
___pid
$6413 = 3
***new entry
$6414 = 0
***esp changeP


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6415 = 3
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6416 = 3
***cur state
$6417 = 0
***cur counter
$6418 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6419 = 3
***task
$6420 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6421 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6422 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6423 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6424 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6425 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$6426 = 3
***fault address
***cur register edx
edx            0xc000000	201326592
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=201326592) at memory.c:367
367	{
---in do_no_page
___pid
$6427 = 3
***address
$6428 = 201326592


Breakpoint 103, do_no_page (error_code=4, address=201326592) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$6429 = 3
***page
$6430 = 16744448
***block
$6431 = 1


Breakpoint 42, do_no_page (error_code=4, address=201326592) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$6432 = 3
***nr array$6433 = 3444
$6434 = 3445
$6435 = 3446
$6436 = 3447


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6437 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bce4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bce4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16744448, dev=769, b=0xfc1f9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=201326592) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$6438 = 3
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$6439 = 3
***drive
$6440 = 0
***head
$6441 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6442 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6443 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bd08) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bd08) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16744448, dev=769, b=0xfc1f9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=201326592) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$6444 = 3
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$6445 = 3
***drive
$6446 = 0
***head
$6447 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6448 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6449 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bd2c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bd2c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16744448, dev=769, b=0xfc1f9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=201326592) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$6450 = 3
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$6451 = 3
***drive
$6452 = 0
***head
$6453 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6454 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6455 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bd50) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bd50) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16744448, dev=769, b=0xfc1f9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=201326592) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$6456 = 3
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$6457 = 3
***drive
$6458 = 0
***head
$6459 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6460 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 104, put_page (page=16744448, address=201326592) at memory.c:211
211			if (!(tmp=get_free_page()))
---in put_page
___pid
$6461 = 3
***page_table
$6462 = (unsigned long *) 0xc0 <setup_gdt+31>
***page$6463 = 16744448


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$6464 = 3
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$6465 = 3
***fault address
***cur register edx
edx            0xc001000	201330688
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=201330688) at memory.c:367
367	{
---in do_no_page
___pid
$6466 = 3
***address
$6467 = 201330688


Breakpoint 103, do_no_page (error_code=6, address=201330688) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$6468 = 3
***page
$6469 = 16732160
***block
$6470 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6471 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bd74) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bd74) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=3450) at buffer.c:278
#5  0x0000ca5d in _bmap (inode=0x27a40 <inode_table+1120>, block=0, create=0)
    at inode.c:98
#6  0x0000cd24 in bmap (inode=0x27a40 <inode_table+1120>, block=7)
    at inode.c:142
#7  0x0000b751 in do_no_page (error_code=6, address=201330688) at memory.c:386
#8  0x0000b9cf in page_fault () at page.s:30
#9  0x00000006 in startup_32 () at head.s:20


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$6472 = 3
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$6473 = 3
***drive
$6474 = 0
***head
$6475 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6476 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 42, do_no_page (error_code=6, address=201330688) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$6477 = 3
***nr array$6478 = 3448
$6479 = 3449
$6480 = 3451
$6481 = 3452


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6482 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bd98) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bd98) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16732160, dev=769, b=0xfc1f9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=6, address=201330688) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000006 in startup_32 () at head.s:20


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6483 = 3
***task
$6484 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6485 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6486 = 3
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$6487 = 3
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$6488 = 3
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$6489 = 3
***drive
$6490 = 0
***head
$6491 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6492 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6493 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bdbc) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bdbc) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16732160, dev=769, b=0xfc1f9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=6, address=201330688) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000006 in startup_32 () at head.s:20


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$6494 = 3
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$6495 = 3
***drive
$6496 = 0
***head
$6497 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6498 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6499 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bde0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bde0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16732160, dev=769, b=0xfc1f9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=6, address=201330688) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000006 in startup_32 () at head.s:20


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$6500 = 3
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$6501 = 3
***drive
$6502 = 0
***head
$6503 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6504 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6505 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2be04) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2be04) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16732160, dev=769, b=0xfc1f9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=6, address=201330688) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000006 in startup_32 () at head.s:20


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$6506 = 3
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$6507 = 3
***drive
$6508 = 0
***head
$6509 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6510 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$6511 = 3
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6512 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xf	15
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6513 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=15, handler=1, restorer=368) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$6514 = 3
***signum
$6515 = 15


Breakpoint 32, sys_signal (signum=15, handler=0, restorer=368) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$6516 = 3
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6517 = 3
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6518 = 3
***cur state
$6519 = 0
***cur counter
$6520 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6521 = 3
***task
$6522 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6523 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6524 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6525 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6526 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6527 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6528 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6529 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=2, handler=1, restorer=368) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$6530 = 3
***signum
$6531 = 2


Breakpoint 32, sys_signal (signum=2, handler=1, restorer=368) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$6532 = 3
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6533 = 3
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6534 = 3
***cur state
$6535 = 0
***cur counter
$6536 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6537 = 3
***task
$6538 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6539 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6540 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6541 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6542 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6543 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6544 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6545 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=0) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6546 = 3
***fd
$6547 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6548 = 3
***task
$6549 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6550 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6551 = 3
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$6552 = 3
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6553 = 3
***task
$6554 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6555 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6556 = 3
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$6557 = 3
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6558 = 3
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6559 = 3
***cur state
$6560 = 0
***cur counter
$6561 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6562 = 3
***task
$6563 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6564 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6565 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6566 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6567 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6568 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6569 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6570 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=1) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6571 = 3
***fd
$6572 = 1


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6573 = 3
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6574 = 3
***cur state
$6575 = 0
***cur counter
$6576 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6577 = 3
***task
$6578 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6579 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6580 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6581 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6582 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6583 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6584 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6585 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=2) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6586 = 3
***fd
$6587 = 2


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6588 = 3
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6589 = 3
***cur state
$6590 = 0
***cur counter
$6591 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6592 = 3
***task
$6593 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6594 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6595 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6596 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6597 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6598 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6599 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6600 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6601 = 3
***fd
$6602 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6603 = 3
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6604 = 3
***cur state
$6605 = 0
***cur counter
$6606 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6607 = 3
***task
$6608 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6609 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6610 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6611 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6612 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6613 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6614 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x4	4
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6615 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=4) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6616 = 3
***fd
$6617 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6618 = 3
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6619 = 3
***cur state
$6620 = 0
***cur counter
$6621 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6622 = 3
***task
$6623 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6624 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6625 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6626 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6627 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6628 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6629 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x5	5
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6630 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=5) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6631 = 3
***fd
$6632 = 5


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6633 = 3
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6634 = 3
***cur state
$6635 = 0
***cur counter
$6636 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6637 = 3
***task
$6638 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6639 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6640 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6641 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6642 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6643 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6644 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x6	6
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6645 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=6) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6646 = 3
***fd
$6647 = 6


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6648 = 3
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6649 = 3
***cur state
$6650 = 0
***cur counter
$6651 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6652 = 3
***task
$6653 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6654 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6655 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6656 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6657 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6658 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6659 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x7	7
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6660 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=7) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6661 = 3
***fd
$6662 = 7


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6663 = 3
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6664 = 3
***cur state
$6665 = 0
***cur counter
$6666 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6667 = 3
***task
$6668 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6669 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6670 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6671 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6672 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6673 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6674 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x8	8
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6675 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=8) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6676 = 3
***fd
$6677 = 8


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6678 = 3
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6679 = 3
***cur state
$6680 = 0
***cur counter
$6681 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6682 = 3
***task
$6683 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6684 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6685 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6686 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6687 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6688 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6689 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x9	9
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6690 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=9) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6691 = 3
***fd
$6692 = 9


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6693 = 3
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6694 = 3
***cur state
$6695 = 0
***cur counter
$6696 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6697 = 3
***task
$6698 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6699 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6700 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6701 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6702 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6703 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6704 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0xa	10
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6705 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=10) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6706 = 3
***fd
$6707 = 10


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6708 = 3
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6709 = 3
***cur state
$6710 = 0
***cur counter
$6711 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6712 = 3
***task
$6713 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6714 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6715 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6716 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6717 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6718 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6719 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0xb	11
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6720 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=11) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6721 = 3
***fd
$6722 = 11


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6723 = 3
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6724 = 3
***cur state
$6725 = 0
***cur counter
$6726 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6727 = 3
***task
$6728 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6729 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6730 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6731 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6732 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6733 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6734 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0xc	12
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6735 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=12) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6736 = 3
***fd
$6737 = 12


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6738 = 3
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6739 = 3
***cur state
$6740 = 0
***cur counter
$6741 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6742 = 3
***task
$6743 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6744 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6745 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6746 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6747 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6748 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6749 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0xd	13
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6750 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=13) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6751 = 3
***fd
$6752 = 13


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6753 = 3
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6754 = 3
***cur state
$6755 = 0
***cur counter
$6756 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6757 = 3
***task
$6758 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6759 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6760 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6761 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6762 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6763 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6764 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0xe	14
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6765 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=14) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6766 = 3
***fd
$6767 = 14


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6768 = 3
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6769 = 3
***cur state
$6770 = 0
***cur counter
$6771 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6772 = 3
***task
$6773 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6774 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6775 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6776 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6777 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6778 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6779 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0xf	15
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6780 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=15) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6781 = 3
***fd
$6782 = 15


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6783 = 3
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6784 = 3
***cur state
$6785 = 0
***cur counter
$6786 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6787 = 3
***task
$6788 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6789 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6790 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6791 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6792 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6793 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6794 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x10	16
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6795 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=16) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6796 = 3
***fd
$6797 = 16


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6798 = 3
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6799 = 3
***cur state
$6800 = 0
***cur counter
$6801 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6802 = 3
***task
$6803 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6804 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6805 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6806 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6807 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6808 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6809 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x11	17
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6810 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=17) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6811 = 3
***fd
$6812 = 17


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6813 = 3
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6814 = 3
***cur state
$6815 = 0
***cur counter
$6816 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6817 = 3
***task
$6818 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6819 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6820 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6821 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6822 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6823 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6824 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x12	18
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6825 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=18) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6826 = 3
***fd
$6827 = 18


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6828 = 3
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6829 = 3
***cur state
$6830 = 0
***cur counter
$6831 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6832 = 3
***task
$6833 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6834 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6835 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6836 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6837 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6838 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6839 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x13	19
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6840 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=19) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6841 = 3
***fd
$6842 = 19


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6843 = 3
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6844 = 3
***cur state
$6845 = 0
***cur counter
$6846 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6847 = 3
***task
$6848 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6849 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6850 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6851 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6852 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6853 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6854 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0xc	12
***cur register ebx
ebx            0x35	53
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6855 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6856 = 3
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6857 = 3
***cur state
$6858 = 0
***cur counter
$6859 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6860 = 3
***task
$6861 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6862 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6863 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6864 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6865 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6866 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6867 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xe	14
***cur register ecx
ecx            0x18	24
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6868 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=14, handler=24, restorer=368) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$6869 = 3
***signum
$6870 = 14


Breakpoint 32, sys_signal (signum=14, handler=0, restorer=368) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$6871 = 3
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6872 = 3
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6873 = 3
***cur state
$6874 = 0
***cur counter
$6875 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6876 = 3
***task
$6877 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6878 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6879 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6880 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6881 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6882 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6883 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1b	27
***cur register ebx
ebx            0x1e	30
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6884 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6885 = 3
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6886 = 3
***cur state
$6887 = 0
***cur counter
$6888 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6889 = 3
***task
$6890 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6891 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6892 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6893 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6894 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6895 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6896 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x24	36
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6897 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6898 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29e30 <request+720>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=1, bh=0x2a0a0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=1, bh=0x2a0a0) at ll_rw_blk.c:154
#4  0x0000d613 in sys_sync () at buffer.c:57
#5  0x0000793f in system_call () at system_call.s:94
#6  0x00000014 in startup_32 () at head.s:24


Breakpoint 82, do_hd_request () at hd.c:329
329			hd_out(dev,nsect,sec,head,cyl,WIN_WRITE,&write_intr);
---in do_hd_request
___pid
$6899 = 3
***hd out write_intr


    intr_addr=0x15aea <write_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$6900 = 3
***drive
$6901 = 0
***head
$6902 = 0


Breakpoint 85, write_intr () at hd.c:271
271		if (win_result()) {
---in write_intr
___pid
$6903 = 3
***sectors num to write
$6904 = 2


Breakpoint 86, write_intr () at hd.c:276
276		if (--CURRENT->nr_sectors) {
---in write_intr
___pid
$6905 = 3
***write success


Breakpoint 85, write_intr () at hd.c:271
271		if (win_result()) {
---in write_intr
___pid
$6906 = 3
***sectors num to write
$6907 = 1


Breakpoint 86, write_intr () at hd.c:276
276		if (--CURRENT->nr_sectors) {
---in write_intr
___pid
$6908 = 3
***write success


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6909 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015b97 in write_intr () at hd.c:284
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f0 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6910 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29e30 <request+720>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=1, bh=0x2a1c0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=1, bh=0x2a1c0) at ll_rw_blk.c:154
#4  0x0000d613 in sys_sync () at buffer.c:57
#5  0x0000793f in system_call () at system_call.s:94
#6  0x00000014 in startup_32 () at head.s:24


Breakpoint 82, do_hd_request () at hd.c:329
329			hd_out(dev,nsect,sec,head,cyl,WIN_WRITE,&write_intr);
---in do_hd_request
___pid
$6911 = 3
***hd out write_intr


    intr_addr=0x15aea <write_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$6912 = 3
***drive
$6913 = 0
***head
$6914 = 0


Breakpoint 85, write_intr () at hd.c:271
271		if (win_result()) {
---in write_intr
___pid
$6915 = 3
***sectors num to write
$6916 = 2


Breakpoint 86, write_intr () at hd.c:276
276		if (--CURRENT->nr_sectors) {
---in write_intr
___pid
$6917 = 3
***write success


Breakpoint 85, write_intr () at hd.c:271
271		if (win_result()) {
---in write_intr
___pid
$6918 = 3
***sectors num to write
$6919 = 1


Breakpoint 86, write_intr () at hd.c:276
276		if (--CURRENT->nr_sectors) {
---in write_intr
___pid
$6920 = 3
***write success


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6921 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015b97 in write_intr () at hd.c:284
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f0 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6922 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29e30 <request+720>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=1, bh=0x2a250) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=1, bh=0x2a250) at ll_rw_blk.c:154
#4  0x0000d613 in sys_sync () at buffer.c:57
#5  0x0000793f in system_call () at system_call.s:94
#6  0x00000014 in startup_32 () at head.s:24


Breakpoint 82, do_hd_request () at hd.c:329
329			hd_out(dev,nsect,sec,head,cyl,WIN_WRITE,&write_intr);
---in do_hd_request
___pid
$6923 = 3
***hd out write_intr


    intr_addr=0x15aea <write_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$6924 = 3
***drive
$6925 = 0
***head
$6926 = 0


Breakpoint 85, write_intr () at hd.c:271
271		if (win_result()) {
---in write_intr
___pid
$6927 = 3
***sectors num to write
$6928 = 2


Breakpoint 86, write_intr () at hd.c:276
276		if (--CURRENT->nr_sectors) {
---in write_intr
___pid
$6929 = 3
***write success


Breakpoint 85, write_intr () at hd.c:271
271		if (win_result()) {
---in write_intr
___pid
$6930 = 3
***sectors num to write
$6931 = 1


Breakpoint 86, write_intr () at hd.c:276
276		if (--CURRENT->nr_sectors) {
---in write_intr
___pid
$6932 = 3
***write success


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6933 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015b97 in write_intr () at hd.c:284
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f0 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6934 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29e30 <request+720>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=1, bh=0x2bc9c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=1, bh=0x2bc9c) at ll_rw_blk.c:154
#4  0x0000d613 in sys_sync () at buffer.c:57
#5  0x0000793f in system_call () at system_call.s:94
#6  0x00000014 in startup_32 () at head.s:24


Breakpoint 82, do_hd_request () at hd.c:329
329			hd_out(dev,nsect,sec,head,cyl,WIN_WRITE,&write_intr);
---in do_hd_request
___pid
$6935 = 3
***hd out write_intr


    intr_addr=0x15aea <write_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$6936 = 3
***drive
$6937 = 0
***head
$6938 = 2


Breakpoint 85, write_intr () at hd.c:271
271		if (win_result()) {
---in write_intr
___pid
$6939 = 3
***sectors num to write
$6940 = 2


Breakpoint 86, write_intr () at hd.c:276
276		if (--CURRENT->nr_sectors) {
---in write_intr
___pid
$6941 = 3
***write success


Breakpoint 85, write_intr () at hd.c:271
271		if (win_result()) {
---in write_intr
___pid
$6942 = 3
***sectors num to write
$6943 = 1


Breakpoint 86, write_intr () at hd.c:276
276		if (--CURRENT->nr_sectors) {
---in write_intr
___pid
$6944 = 3
***write success


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$6945 = 3
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015b97 in write_intr () at hd.c:284
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f0 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6946 = 3
***task
$6947 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6948 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6949 = 3
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$6950 = 3
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6951 = 3
***task
$6952 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6953 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6954 = 3
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$6955 = 3
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6956 = 3
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6957 = 3
***cur state
$6958 = 0
***cur counter
$6959 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6960 = 3
***task
$6961 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6962 = (struct task_struct *) 0xfc1000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6963 = 3
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6964 = 3
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6965 = 3
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$6966 = 3
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6967 = 3
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfc1fec	0xfc1fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x170	368


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6968 = 3
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00000014 in startup_32 () at head.s:24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$6969 = 1
***loop pid
$6970 = 3
***loop counter
$6971 = 9


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$6972 = 0
***loop pid
$6973 = 4
***loop counter
$6974 = 15


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$6975 = 1
***loop pid
$6976 = 1
***loop counter
$6977 = 21


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$6978 = 4


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$6979 = 4
***fault address
***cur register edx
edx            0x8028ed4	134385364
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134385364) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$6980 = 4


Breakpoint 98, un_wp_page (table_entry=0xffb0a0) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$6981 = 4
***table entry
$6982 = (unsigned long *) 0xffb0a0


Breakpoint 99, un_wp_page (table_entry=0xffb0a0) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$6983 = 4
***physical page address
$6984 = 16748544


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$6985 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$6986 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x22000	139264


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$6987 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=0) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$6988 = 4
***fd
$6989 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$6990 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$6991 = 4
***cur state
$6992 = 0
***cur counter
$6993 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$6994 = 4
***task
$6995 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$6996 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$6997 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$6998 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$6999 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7000 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7001 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x22000	139264


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7002 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=1) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$7003 = 4
***fd
$7004 = 1


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7005 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7006 = 4
***cur state
$7007 = 0
***cur counter
$7008 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7009 = 4
***task
$7010 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7011 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7012 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7013 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7014 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7015 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7016 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x2	2
***cur register edx
edx            0x22000	139264


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7017 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=2) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$7018 = 4
***fd
$7019 = 2


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7020 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7021 = 4
***cur state
$7022 = 0
***cur counter
$7023 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7024 = 4
***task
$7025 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7026 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7027 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7028 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7029 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7030 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7031 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x42	66
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x2	2
***cur register edx
edx            0x22000	139264


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7032 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7033 = 4
***eax as return
eax            0x4	4
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7034 = 4
***cur state
$7035 = 0
***cur counter
$7036 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7037 = 4
***task
$7038 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7039 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7040 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7041 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7042 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7043 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7044 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x19dc7	105927
***cur register ecx
ecx            0x2	2
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7045 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$7046 = 4
***open filename
$7047 = 47 '/'
***fd
$7048 = 0


    at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$7049 = 4
***current->filp[fd]=f


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7050 = 4
***task
$7051 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7052 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7053 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$7054 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7055 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7056 = 4
***cur state
$7057 = 0
***cur counter
$7058 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7059 = 4
***task
$7060 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7061 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7062 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7063 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7064 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7065 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7066 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x29	41
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x22000	139264


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7067 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7068 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7069 = 4
***cur state
$7070 = 0
***cur counter
$7071 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7072 = 4
***task
$7073 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7074 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7075 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7076 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7077 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7078 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7079 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x29	41
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x22000	139264


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7080 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7081 = 4
***eax as return
eax            0x2	2
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7082 = 4
***cur state
$7083 = 0
***cur counter
$7084 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7085 = 4
***task
$7086 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7087 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7088 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7089 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7090 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7091 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7092 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0xb	11
***cur register ebx
ebx            0x19da0	105888
***cur register ecx
ecx            0x22030	139312
***cur register edx
edx            0x22038	139320


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7093 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 44, sys_execve () at system_call.s:202
202		pushl %eax
---in sys_execve
___pid
$7094 = 4
***cur register eax
eax            0xffdfec	16769004
***push eax


    argv=0x22030 <argv>, envp=0x22038 <envp>) at exec.c:210
210		e_uid = (i & S_ISUID) ? inode->i_uid : current->euid;
---in do_execve
___pid
$7095 = 4
***cur euid
$7096 = 0
***cur egid
$7097 = 0
***imode
$7098 = 33225
***inode euid
$7099 = 0
***inode egid
$7100 = 0 '\000'


    argv=0x22030 <argv>, envp=0x22038 <envp>) at exec.c:212
212		if (current->euid == inode->i_uid)
---in do_execve
___pid
$7101 = 4
***changed euid
$7102 = 0
***changed egid
$7103 = 0
***compare priority


    p=131068, from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$7104 = 4
***tmp:cur parameter address pointer
$7105 = 0x19dc7 "/dev/tty0"
***len
$7106 = 15
***cur pointer
$7107 = 131068


    p=131067, from_kmem=0) at exec.c:142
142					if (from_kmem==2)
---in copy_strings
___pid
$7108 = 4
***cur physical pointer
$7109 = 0xff4000 ""


    p=131053, from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$7110 = 4
***tmp:cur parameter address pointer
$7111 = 0x19db8 "HOME=/usr/root"
***len
$7112 = 9
***cur pointer
$7113 = 131053


    p=131052, from_kmem=0) at exec.c:142
142					if (from_kmem==2)
---in copy_strings
___pid
$7114 = 4
***cur physical pointer
$7115 = 0xff4000 ""


    argv=0x22030 <argv>, envp=0x22038 <envp>) at exec.c:313
313			if (!p) {
---in do_execve
___pid
$7116 = 4
***parameter pointer
$7117 = 131044


Breakpoint 94, free_page_tables (from=134217728, size=1) at memory.c:116
116		for ( ; size-->0 ; dir++) {
---in free_page_tables
___pid
$7118 = 4
***from
$7119 = 134217728
***size
$7120 = 1
***dir
$7121 = (unsigned long *) 0x80 <setup_idt+15>


Breakpoint 94, free_page_tables (from=134217728, size=1) at memory.c:116
116		for ( ; size-->0 ; dir++) {
---in free_page_tables
___pid
$7122 = 4
***from
$7123 = 134217728
***size
$7124 = 1
***dir
$7125 = (unsigned long *) 0x80 <setup_idt+15>


Breakpoint 51, change_ldt (text_size=266240, page=0xffded0) at exec.c:167
167		set_limit(current->ldt[2],data_limit);
---in change_ldt
___pid
$7126 = 4
***data_limit
$7127 = 67108864
***code_limit
$7128 = 266240


Breakpoint 52, change_ldt (text_size=266240, page=0xffded0) at exec.c:174
174				put_page(page[i],data_base);
---in change_ldt
___pid
$7129 = 4
***data_base
$7130 = 201322496


Breakpoint 104, put_page (page=16728064, address=201322496) at memory.c:211
211			if (!(tmp=get_free_page()))
---in put_page
___pid
$7131 = 4
***page_table
$7132 = (unsigned long *) 0xbc <setup_gdt+27>
***page$7133 = 16728064


    argv=0x22030 <argv>, envp=0x22038 <envp>) at exec.c:336
336		p = (unsigned long) create_tables((char *)p,argc,envc);
---in do_execve
___pid
$7134 = 4
***parameter space pointer change
$7135 = 67108836


Breakpoint 55, create_tables (p=0x3ffffe4 "", argc=1, envc=1) at exec.c:52
52		sp -= envc+1;
---in create_tables
___pid
$7136 = 4
***sp
$7137 = (unsigned long *) 0x3ffffe4
***argc
$7138 = 1
***envc
$7139 = 1


    argv=0x22030 <argv>, envp=0x22038 <envp>) at exec.c:347
347		eip[3] = p;			/* stack pointer */
---in do_execve
___pid
$7140 = 4
***new entry
$7141 = 0
***esp changeP


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7142 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7143 = 4
***cur state
$7144 = 0
***cur counter
$7145 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7146 = 4
***task
$7147 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7148 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7149 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7150 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7151 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7152 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7153 = 4
***fault address
***cur register edx
edx            0x8000000	134217728
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134217728) at memory.c:367
367	{
---in do_no_page
___pid
$7154 = 4
***address
$7155 = 134217728


Breakpoint 103, do_no_page (error_code=4, address=134217728) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$7156 = 4
***page
$7157 = 16748544
***block
$7158 = 1


Breakpoint 42, do_no_page (error_code=4, address=134217728) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$7159 = 4
***nr array$7160 = 823
$7161 = 824
$7162 = 825
$7163 = 826


Breakpoint 104, put_page (page=16748544, address=134217728) at memory.c:211
211			if (!(tmp=get_free_page()))
---in put_page
___pid
$7164 = 4
***page_table
$7165 = (unsigned long *) 0x80 <setup_idt+15>
***page$7166 = 16748544


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7167 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7168 = 4
***fault address
***cur register edx
edx            0x8041000	134483968
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134483968) at memory.c:367
367	{
---in do_no_page
___pid
$7169 = 4
***address
$7170 = 134483968


Breakpoint 103, do_no_page (error_code=6, address=134483968) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$7171 = 4
***page
$7172 = 16719872
***block
$7173 = 261


Breakpoint 42, do_no_page (error_code=6, address=134483968) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$7174 = 4
***nr array$7175 = 1084
$7176 = 1085
$7177 = 1086
$7178 = 1087


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7179 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7180 = 4
***fault address
***cur register edx
edx            0x803d854	134469716
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134469716) at memory.c:367
367	{
---in do_no_page
___pid
$7181 = 4
***address
$7182 = 134469716


Breakpoint 103, do_no_page (error_code=4, address=134467584) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$7183 = 4
***page
$7184 = 16715776
***block
$7185 = 245


Breakpoint 42, do_no_page (error_code=4, address=134467584) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$7186 = 4
***nr array$7187 = 1068
$7188 = 1069
$7189 = 1070
$7190 = 1071


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7191 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7192 = 4
***fault address
***cur register edx
edx            0x8046b18	134507288
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134507288) at memory.c:367
367	{
---in do_no_page
___pid
$7193 = 4
***address
$7194 = 134507288


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7195 = 4
***task
$7196 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7197 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7198 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$7199 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7200 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7201 = 4
***fault address
***cur register edx
edx            0x8007da8	134249896
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134249896) at memory.c:367
367	{
---in do_no_page
___pid
$7202 = 4
***address
$7203 = 134249896


Breakpoint 103, do_no_page (error_code=4, address=134246400) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$7204 = 4
***page
$7205 = 16707584
***block
$7206 = 29


Breakpoint 42, do_no_page (error_code=4, address=134246400) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$7207 = 4
***nr array$7208 = 852
$7209 = 853
$7210 = 854
$7211 = 855


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7212 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7213 = 4
***fault address
***cur register edx
edx            0x8039c18	134454296
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134454296) at memory.c:367
367	{
---in do_no_page
___pid
$7214 = 4
***address
$7215 = 134454296


Breakpoint 103, do_no_page (error_code=4, address=134451200) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$7216 = 4
***page
$7217 = 16703488
***block
$7218 = 229


Breakpoint 42, do_no_page (error_code=4, address=134451200) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$7219 = 4
***nr array$7220 = 1052
$7221 = 1053
$7222 = 1054
$7223 = 1055


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7224 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7225 = 4
***fault address
***cur register edx
edx            0x801a390	134325136
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134325136) at memory.c:367
367	{
---in do_no_page
___pid
$7226 = 4
***address
$7227 = 134325136


Breakpoint 103, do_no_page (error_code=4, address=134324224) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$7228 = 4
***page
$7229 = 16699392
***block
$7230 = 105


Breakpoint 42, do_no_page (error_code=4, address=134324224) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$7231 = 4
***nr array$7232 = 928
$7233 = 929
$7234 = 930
$7235 = 931


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7236 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7237 = 4
***fault address
***cur register edx
edx            0x804522e	134500910
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134500910) at memory.c:367
367	{
---in do_no_page
___pid
$7238 = 4
***address
$7239 = 134500910


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7240 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7241 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3a	58
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3ffffe9	67108841


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7242 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7243 = 4
***eax as return
eax            0xffffffda	-38
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7244 = 4
***cur state
$7245 = 0
***cur counter
$7246 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7247 = 4
***task
$7248 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7249 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7250 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7251 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7252 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7253 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7254 = 4
***fault address
***cur register edx
edx            0x80440b4	134496436
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134496436) at memory.c:367
367	{
---in do_no_page
___pid
$7255 = 4
***address
$7256 = 134496436


Breakpoint 103, do_no_page (error_code=4, address=134496256) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$7257 = 4
***page
$7258 = 16691200
***block
$7259 = 273


Breakpoint 42, do_no_page (error_code=4, address=134496256) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$7260 = 4
***nr array$7261 = 1096
$7262 = 1097
$7263 = 1098
$7264 = 1099


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7265 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7266 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x46bb8	289720
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7267 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=289720) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$7268 = 4
***end_data_seg
$7269 = 289720
***cur brk
$7270 = 289720


Breakpoint 59, sys_brk (end_data_seg=289720) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$7271 = 4
***cur brk
$7272 = 289720


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7273 = 4
***eax as return
eax            0x46bb8	289720
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7274 = 4
***cur state
$7275 = 0
***cur counter
$7276 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7277 = 4
***task
$7278 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7279 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7280 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7281 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7282 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7283 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7284 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x46c00	289792
***cur register ecx
ecx            0x48	72
***cur register edx
edx            0x48	72


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7285 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=289792) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$7286 = 4
***end_data_seg
$7287 = 289792
***cur brk
$7288 = 289720


Breakpoint 59, sys_brk (end_data_seg=289792) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$7289 = 4
***cur brk
$7290 = 289792


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7291 = 4
***eax as return
eax            0x46c00	289792
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7292 = 4
***cur state
$7293 = 0
***cur counter
$7294 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7295 = 4
***task
$7296 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7297 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7298 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7299 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7300 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7301 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7302 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x47400	291840
***cur register ecx
ecx            0x48	72
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7303 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=291840) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$7304 = 4
***end_data_seg
$7305 = 291840
***cur brk
$7306 = 289792


Breakpoint 59, sys_brk (end_data_seg=291840) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$7307 = 4
***cur brk
$7308 = 291840


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7309 = 4
***eax as return
eax            0x47400	291840
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7310 = 4
***cur state
$7311 = 0
***cur counter
$7312 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7313 = 4
***task
$7314 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7315 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7316 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7317 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7318 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7319 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7320 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x47400	291840
***cur register ecx
ecx            0x6	6
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7321 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=291840) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$7322 = 4
***end_data_seg
$7323 = 291840
***cur brk
$7324 = 291840


Breakpoint 59, sys_brk (end_data_seg=291840) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$7325 = 4
***cur brk
$7326 = 291840


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7327 = 4
***eax as return
eax            0x47400	291840
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7328 = 4
***cur state
$7329 = 0
***cur counter
$7330 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7331 = 4
***task
$7332 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7333 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7334 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7335 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7336 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7337 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7338 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x47c00	293888
***cur register ecx
ecx            0x6	6
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7339 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=293888) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$7340 = 4
***end_data_seg
$7341 = 293888
***cur brk
$7342 = 291840


Breakpoint 59, sys_brk (end_data_seg=293888) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$7343 = 4
***cur brk
$7344 = 293888


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7345 = 4
***eax as return
eax            0x47c00	293888
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7346 = 4
***cur state
$7347 = 0
***cur counter
$7348 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7349 = 4
***task
$7350 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7351 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7352 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7353 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7354 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7355 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7356 = 4
***fault address
***cur register edx
edx            0x8047404	134509572
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134509572) at memory.c:367
367	{
---in do_no_page
___pid
$7357 = 4
***address
$7358 = 134509572


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7359 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7360 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x47c00	293888
***cur register ecx
ecx            0x6	6
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7361 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=293888) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$7362 = 4
***end_data_seg
$7363 = 293888
***cur brk
$7364 = 293888


Breakpoint 59, sys_brk (end_data_seg=293888) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$7365 = 4
***cur brk
$7366 = 293888


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7367 = 4
***eax as return
eax            0x47c00	293888
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7368 = 4
***cur state
$7369 = 0
***cur counter
$7370 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7371 = 4
***task
$7372 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7373 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7374 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7375 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7376 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7377 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7378 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x48400	295936
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7379 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=295936) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$7380 = 4
***end_data_seg
$7381 = 295936
***cur brk
$7382 = 293888


Breakpoint 59, sys_brk (end_data_seg=295936) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$7383 = 4
***cur brk
$7384 = 295936


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7385 = 4
***eax as return
eax            0x48400	295936
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7386 = 4
***cur state
$7387 = 0
***cur counter
$7388 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7389 = 4
***task
$7390 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7391 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7392 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7393 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7394 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7395 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7396 = 4
***fault address
***cur register edx
edx            0x8048000	134512640
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134512640) at memory.c:367
367	{
---in do_no_page
___pid
$7397 = 4
***address
$7398 = 134512640


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7399 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7400 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0xd	13
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x9	9
***cur register edx
edx            0x47c0c	293900


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7401 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7402 = 4
***eax as return
eax            0x5fa97090	1604939920
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7403 = 4
***cur state
$7404 = 0
***cur counter
$7405 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7406 = 4
***task
$7407 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7408 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7409 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7410 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7411 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7412 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7413 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee0	67108576


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7414 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=0, cmd=21505, arg=67108576) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$7415 = 4
***fd
$7416 = 0


Breakpoint 61, sys_ioctl (fd=0, cmd=21505, arg=67108576) at ioctl.c:40
40		dev = filp->f_inode->i_zone[0];
---in sys_ioctl
___pid
$7417 = 4
***mode and fd right
***dev
$7418 = 294912


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$7419 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fffee0, size=-252) at fork.c:35
#2  0x00019486 in get_termios (tty=0x234c0 <tty_table>, termios=0x3fffee0)
    at tty_ioctl.c:60
#3  0x0001976f in tty_ioctl (dev=0, cmd=21505, arg=67108576) at tty_ioctl.c:127
#4  0x00013a54 in sys_ioctl (fd=0, cmd=21505, arg=67108576) at ioctl.c:45
#5  0x0000793f in system_call () at system_call.s:94
#6  0x00000000 in ?? ()
***address
$7420 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7421 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7422 = 4
***cur state
$7423 = 0
***cur counter
$7424 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7425 = 4
***task
$7426 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7427 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7428 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7429 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7430 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7431 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7432 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee0	67108576


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7433 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=1, cmd=21505, arg=67108576) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$7434 = 4
***fd
$7435 = 1


Breakpoint 61, sys_ioctl (fd=1, cmd=21505, arg=67108576) at ioctl.c:40
40		dev = filp->f_inode->i_zone[0];
---in sys_ioctl
___pid
$7436 = 4
***mode and fd right
***dev
$7437 = 1024


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$7438 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fffee0, size=-252) at fork.c:35
#2  0x00019486 in get_termios (tty=0x234c0 <tty_table>, termios=0x3fffee0)
    at tty_ioctl.c:60
#3  0x0001976f in tty_ioctl (dev=0, cmd=21505, arg=67108576) at tty_ioctl.c:127
#4  0x00013a54 in sys_ioctl (fd=1, cmd=21505, arg=67108576) at ioctl.c:45
#5  0x0000793f in system_call () at system_call.s:94
#6  0x00000001 in startup_32 () at head.s:19
***address
$7439 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7440 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7441 = 4
***cur state
$7442 = 0
***cur counter
$7443 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7444 = 4
***task
$7445 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7446 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7447 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7448 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7449 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7450 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7451 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee0	67108576


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7452 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$7453 = 4
***fd
$7454 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7455 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7456 = 4
***cur state
$7457 = 0
***cur counter
$7458 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7459 = 4
***task
$7460 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7461 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7462 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7463 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7464 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7465 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7466 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x4	4
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee0	67108576


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7467 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=4) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$7468 = 4
***fd
$7469 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7470 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7471 = 4
***cur state
$7472 = 0
***cur counter
$7473 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7474 = 4
***task
$7475 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7476 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7477 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7478 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7479 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7480 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7481 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x5	5
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee0	67108576


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7482 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=5) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$7483 = 4
***fd
$7484 = 5


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7485 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7486 = 4
***cur state
$7487 = 0
***cur counter
$7488 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7489 = 4
***task
$7490 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7491 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7492 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7493 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7494 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7495 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7496 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x6	6
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee0	67108576


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7497 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=6) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$7498 = 4
***fd
$7499 = 6


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7500 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7501 = 4
***cur state
$7502 = 0
***cur counter
$7503 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7504 = 4
***task
$7505 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7506 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7507 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7508 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7509 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7510 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7511 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x7	7
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee0	67108576


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7512 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=7) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$7513 = 4
***fd
$7514 = 7


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7515 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7516 = 4
***cur state
$7517 = 0
***cur counter
$7518 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7519 = 4
***task
$7520 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7521 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7522 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7523 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7524 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7525 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7526 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x8	8
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee0	67108576


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7527 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=8) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$7528 = 4
***fd
$7529 = 8


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7530 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7531 = 4
***cur state
$7532 = 0
***cur counter
$7533 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7534 = 4
***task
$7535 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7536 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7537 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7538 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7539 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7540 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7541 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x9	9
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee0	67108576


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7542 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=9) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$7543 = 4
***fd
$7544 = 9


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7545 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7546 = 4
***cur state
$7547 = 0
***cur counter
$7548 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7549 = 4
***task
$7550 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7551 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7552 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7553 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7554 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7555 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7556 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0xa	10
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee0	67108576


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7557 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=10) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$7558 = 4
***fd
$7559 = 10


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7560 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7561 = 4
***cur state
$7562 = 0
***cur counter
$7563 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7564 = 4
***task
$7565 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7566 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7567 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7568 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7569 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7570 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7571 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0xb	11
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee0	67108576


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7572 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=11) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$7573 = 4
***fd
$7574 = 11


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7575 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7576 = 4
***cur state
$7577 = 0
***cur counter
$7578 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7579 = 4
***task
$7580 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7581 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7582 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7583 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7584 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7585 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7586 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0xc	12
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee0	67108576


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7587 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=12) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$7588 = 4
***fd
$7589 = 12


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7590 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7591 = 4
***cur state
$7592 = 0
***cur counter
$7593 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7594 = 4
***task
$7595 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7596 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7597 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7598 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7599 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7600 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7601 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0xd	13
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee0	67108576


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7602 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=13) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$7603 = 4
***fd
$7604 = 13


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7605 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7606 = 4
***cur state
$7607 = 0
***cur counter
$7608 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7609 = 4
***task
$7610 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7611 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7612 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7613 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7614 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7615 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7616 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0xe	14
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee0	67108576


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7617 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=14) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$7618 = 4
***fd
$7619 = 14


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7620 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7621 = 4
***cur state
$7622 = 0
***cur counter
$7623 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7624 = 4
***task
$7625 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7626 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7627 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7628 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7629 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7630 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7631 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0xf	15
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee0	67108576


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7632 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=15) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$7633 = 4
***fd
$7634 = 15


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7635 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7636 = 4
***cur state
$7637 = 0
***cur counter
$7638 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7639 = 4
***task
$7640 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7641 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7642 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7643 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7644 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7645 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7646 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x10	16
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee0	67108576


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7647 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=16) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$7648 = 4
***fd
$7649 = 16


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7650 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7651 = 4
***cur state
$7652 = 0
***cur counter
$7653 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7654 = 4
***task
$7655 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7656 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7657 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7658 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7659 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7660 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7661 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x11	17
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee0	67108576


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7662 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=17) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$7663 = 4
***fd
$7664 = 17


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7665 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7666 = 4
***cur state
$7667 = 0
***cur counter
$7668 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7669 = 4
***task
$7670 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7671 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7672 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7673 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7674 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7675 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7676 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x12	18
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee0	67108576


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7677 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=18) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$7678 = 4
***fd
$7679 = 18


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7680 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7681 = 4
***cur state
$7682 = 0
***cur counter
$7683 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7684 = 4
***task
$7685 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7686 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7687 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7688 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7689 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7690 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7691 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x13	19
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffee0	67108576


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7692 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=19) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$7693 = 4
***fd
$7694 = 19


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7695 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7696 = 4
***cur state
$7697 = 0
***cur counter
$7698 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7699 = 4
***task
$7700 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7701 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7702 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7703 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7704 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7705 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7706 = 4
***fault address
***cur register edx
edx            0x8001300	134222592
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134222592) at memory.c:367
367	{
---in do_no_page
___pid
$7707 = 4
***address
$7708 = 134222592


Breakpoint 103, do_no_page (error_code=4, address=134221824) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$7709 = 4
***page
$7710 = 16678912
***block
$7711 = 5


Breakpoint 42, do_no_page (error_code=4, address=134221824) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$7712 = 4
***nr array$7713 = 827
$7714 = 828
$7715 = 830
$7716 = 831


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7717 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7718 = 4
***fault address
***cur register edx
edx            0x803c4bc	134464700
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134464700) at memory.c:367
367	{
---in do_no_page
___pid
$7719 = 4
***address
$7720 = 134464700


Breakpoint 103, do_no_page (error_code=4, address=134463488) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$7721 = 4
***page
$7722 = 16674816
***block
$7723 = 241


Breakpoint 42, do_no_page (error_code=4, address=134463488) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$7724 = 4
***nr array$7725 = 1064
$7726 = 1065
$7727 = 1066
$7728 = 1067


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7729 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7730 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x48400	295936
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7731 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=295936) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$7732 = 4
***end_data_seg
$7733 = 295936
***cur brk
$7734 = 295936


Breakpoint 59, sys_brk (end_data_seg=295936) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$7735 = 4
***cur brk
$7736 = 295936


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7737 = 4
***eax as return
eax            0x48400	295936
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7738 = 4
***cur state
$7739 = 0
***cur counter
$7740 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7741 = 4
***task
$7742 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7743 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7744 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7745 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7746 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7747 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7748 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x48c00	297984
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7749 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=297984) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$7750 = 4
***end_data_seg
$7751 = 297984
***cur brk
$7752 = 295936


Breakpoint 59, sys_brk (end_data_seg=297984) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$7753 = 4
***cur brk
$7754 = 297984


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7755 = 4
***eax as return
eax            0x48c00	297984
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7756 = 4
***cur state
$7757 = 0
***cur counter
$7758 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7759 = 4
***task
$7760 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7761 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7762 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7763 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7764 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7765 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7766 = 4
***fault address
***cur register edx
edx            0x803fc14	134478868
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134478868) at memory.c:367
367	{
---in do_no_page
___pid
$7767 = 4
***address
$7768 = 134478868


Breakpoint 103, do_no_page (error_code=4, address=134475776) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$7769 = 4
***page
$7770 = 16670720
***block
$7771 = 253


Breakpoint 42, do_no_page (error_code=4, address=134475776) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$7772 = 4
***nr array$7773 = 1076
$7774 = 1077
$7775 = 1078
$7776 = 1079


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7777 = 4
***task
$7778 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7779 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7780 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$7781 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7782 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7783 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x48c00	297984
***cur register ecx
ecx            0x400	1024
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7784 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=297984) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$7785 = 4
***end_data_seg
$7786 = 297984
***cur brk
$7787 = 297984


Breakpoint 59, sys_brk (end_data_seg=297984) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$7788 = 4
***cur brk
$7789 = 297984


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7790 = 4
***eax as return
eax            0x48c00	297984
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7791 = 4
***cur state
$7792 = 0
***cur counter
$7793 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7794 = 4
***task
$7795 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7796 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7797 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7798 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7799 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7800 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7801 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x49400	300032
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7802 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=300032) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$7803 = 4
***end_data_seg
$7804 = 300032
***cur brk
$7805 = 297984


Breakpoint 59, sys_brk (end_data_seg=300032) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$7806 = 4
***cur brk
$7807 = 300032


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7808 = 4
***eax as return
eax            0x49400	300032
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7809 = 4
***cur state
$7810 = 0
***cur counter
$7811 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7812 = 4
***task
$7813 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7814 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7815 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7816 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7817 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7818 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7819 = 4
***fault address
***cur register edx
edx            0x804900c	134516748
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134516748) at memory.c:367
367	{
---in do_no_page
___pid
$7820 = 4
***address
$7821 = 134516748


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7822 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7823 = 4
***fault address
***cur register edx
edx            0x801edb4	134344116
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134344116) at memory.c:367
367	{
---in do_no_page
___pid
$7824 = 4
***address
$7825 = 134344116


Breakpoint 103, do_no_page (error_code=4, address=134340608) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$7826 = 4
***page
$7827 = 16662528
***block
$7828 = 121


Breakpoint 42, do_no_page (error_code=4, address=134340608) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$7829 = 4
***nr array$7830 = 944
$7831 = 945
$7832 = 946
$7833 = 947


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7834 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7835 = 4
***fault address
***cur register edx
edx            0x803a404	134456324
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134456324) at memory.c:367
367	{
---in do_no_page
___pid
$7836 = 4
***address
$7837 = 134456324


Breakpoint 103, do_no_page (error_code=4, address=134455296) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$7838 = 4
***page
$7839 = 16658432
***block
$7840 = 233


Breakpoint 42, do_no_page (error_code=4, address=134455296) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$7841 = 4
***nr array$7842 = 1056
$7843 = 1057
$7844 = 1058
$7845 = 1059


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7846 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7847 = 4
***fault address
***cur register edx
edx            0x802122c	134353452
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134353452) at memory.c:367
367	{
---in do_no_page
___pid
$7848 = 4
***address
$7849 = 134353452


Breakpoint 103, do_no_page (error_code=4, address=134352896) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$7850 = 4
***page
$7851 = 16654336
***block
$7852 = 133


Breakpoint 42, do_no_page (error_code=4, address=134352896) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$7853 = 4
***nr array$7854 = 956
$7855 = 957
$7856 = 958
$7857 = 959


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7858 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7859 = 4
***fault address
***cur register edx
edx            0x8020f38	134352696
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134352696) at memory.c:367
367	{
---in do_no_page
___pid
$7860 = 4
***address
$7861 = 134352696


Breakpoint 103, do_no_page (error_code=4, address=134348800) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$7862 = 4
***page
$7863 = 16650240
***block
$7864 = 129


Breakpoint 42, do_no_page (error_code=4, address=134348800) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$7865 = 4
***nr array$7866 = 952
$7867 = 953
$7868 = 954
$7869 = 955


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7870 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7871 = 4
***task
$7872 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7873 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7874 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7875 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7876 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7877 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7878 = 4
***fault address
***cur register edx
edx            0x80190bc	134320316
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134320316) at memory.c:367
367	{
---in do_no_page
___pid
$7879 = 4
***address
$7880 = 134320316


Breakpoint 103, do_no_page (error_code=4, address=134320128) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$7881 = 4
***page
$7882 = 16646144
***block
$7883 = 101


Breakpoint 42, do_no_page (error_code=4, address=134320128) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$7884 = 4
***nr array$7885 = 924
$7886 = 925
$7887 = 926
$7888 = 927


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7889 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$7890 = 4
***fault address
***cur register edx
edx            0x803b11c	134459676
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134459676) at memory.c:367
367	{
---in do_no_page
___pid
$7891 = 4
***address
$7892 = 134459676


Breakpoint 103, do_no_page (error_code=4, address=134459392) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$7893 = 4
***page
$7894 = 16642048
***block
$7895 = 237


Breakpoint 42, do_no_page (error_code=4, address=134459392) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$7896 = 4
***nr array$7897 = 1060
$7898 = 1061
$7899 = 1062
$7900 = 1063


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$7901 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7902 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x49400	300032
***cur register ecx
ecx            0x7	7
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7903 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=300032) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$7904 = 4
***end_data_seg
$7905 = 300032
***cur brk
$7906 = 300032


Breakpoint 59, sys_brk (end_data_seg=300032) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$7907 = 4
***cur brk
$7908 = 300032


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7909 = 4
***eax as return
eax            0x49400	300032
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7910 = 4
***cur state
$7911 = 0
***cur counter
$7912 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7913 = 4
***task
$7914 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7915 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7916 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7917 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7918 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7919 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7920 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x49c00	302080
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7921 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=302080) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$7922 = 4
***end_data_seg
$7923 = 302080
***cur brk
$7924 = 300032


Breakpoint 59, sys_brk (end_data_seg=302080) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$7925 = 4
***cur brk
$7926 = 302080


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7927 = 4
***eax as return
eax            0x49c00	302080
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7928 = 4
***cur state
$7929 = 0
***cur counter
$7930 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7931 = 4
***task
$7932 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7933 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7934 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7935 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7936 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7937 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7938 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7939 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=1, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$7940 = 4
***signum
$7941 = 1


Breakpoint 32, sys_signal (signum=1, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$7942 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7943 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7944 = 4
***cur state
$7945 = 0
***cur counter
$7946 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7947 = 4
***task
$7948 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7949 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7950 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7951 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7952 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7953 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7954 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7955 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=1, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$7956 = 4
***signum
$7957 = 1


Breakpoint 32, sys_signal (signum=1, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$7958 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7959 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7960 = 4
***cur state
$7961 = 0
***cur counter
$7962 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7963 = 4
***task
$7964 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7965 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7966 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7967 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7968 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7969 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7970 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7971 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=2, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$7972 = 4
***signum
$7973 = 2


Breakpoint 32, sys_signal (signum=2, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$7974 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7975 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7976 = 4
***cur state
$7977 = 0
***cur counter
$7978 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7979 = 4
***task
$7980 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7981 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7982 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7983 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$7984 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$7985 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$7986 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$7987 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=2, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$7988 = 4
***signum
$7989 = 2


Breakpoint 32, sys_signal (signum=2, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$7990 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$7991 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$7992 = 4
***cur state
$7993 = 0
***cur counter
$7994 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$7995 = 4
***task
$7996 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$7997 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$7998 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$7999 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8000 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8001 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8002 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8003 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=3, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8004 = 4
***signum
$8005 = 3


Breakpoint 32, sys_signal (signum=3, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8006 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8007 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8008 = 4
***cur state
$8009 = 0
***cur counter
$8010 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8011 = 4
***task
$8012 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8013 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8014 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8015 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8016 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8017 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8018 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8019 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=3, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8020 = 4
***signum
$8021 = 3


Breakpoint 32, sys_signal (signum=3, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8022 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8023 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8024 = 4
***cur state
$8025 = 0
***cur counter
$8026 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8027 = 4
***task
$8028 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8029 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8030 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8031 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8032 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8033 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8034 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x4	4
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8035 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=4, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8036 = 4
***signum
$8037 = 4


Breakpoint 32, sys_signal (signum=4, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8038 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8039 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8040 = 4
***cur state
$8041 = 0
***cur counter
$8042 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8043 = 4
***task
$8044 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8045 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8046 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8047 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8048 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8049 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8050 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x4	4
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8051 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=4, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8052 = 4
***signum
$8053 = 4


Breakpoint 32, sys_signal (signum=4, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8054 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8055 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8056 = 4
***cur state
$8057 = 0
***cur counter
$8058 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8059 = 4
***task
$8060 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8061 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8062 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8063 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8064 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8065 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8066 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x5	5
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8067 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=5, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8068 = 4
***signum
$8069 = 5


Breakpoint 32, sys_signal (signum=5, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8070 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8071 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8072 = 4
***cur state
$8073 = 0
***cur counter
$8074 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8075 = 4
***task
$8076 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8077 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8078 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8079 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8080 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8081 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8082 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x5	5
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8083 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=5, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8084 = 4
***signum
$8085 = 5


Breakpoint 32, sys_signal (signum=5, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8086 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8087 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8088 = 4
***cur state
$8089 = 0
***cur counter
$8090 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8091 = 4
***task
$8092 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8093 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8094 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8095 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8096 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8097 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8098 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x6	6
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8099 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=6, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8100 = 4
***signum
$8101 = 6


Breakpoint 32, sys_signal (signum=6, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8102 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8103 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8104 = 4
***cur state
$8105 = 0
***cur counter
$8106 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8107 = 4
***task
$8108 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8109 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8110 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8111 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8112 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8113 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8114 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x6	6
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8115 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=6, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8116 = 4
***signum
$8117 = 6


Breakpoint 32, sys_signal (signum=6, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8118 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8119 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8120 = 4
***cur state
$8121 = 0
***cur counter
$8122 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8123 = 4
***task
$8124 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8125 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8126 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8127 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8128 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8129 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8130 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x7	7
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8131 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=7, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8132 = 4
***signum
$8133 = 7


Breakpoint 32, sys_signal (signum=7, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8134 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8135 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8136 = 4
***cur state
$8137 = 0
***cur counter
$8138 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8139 = 4
***task
$8140 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8141 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8142 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8143 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8144 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8145 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8146 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x7	7
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8147 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=7, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8148 = 4
***signum
$8149 = 7


Breakpoint 32, sys_signal (signum=7, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8150 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8151 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8152 = 4
***cur state
$8153 = 0
***cur counter
$8154 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8155 = 4
***task
$8156 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8157 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8158 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8159 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8160 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8161 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8162 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x8	8
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8163 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=8, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8164 = 4
***signum
$8165 = 8


Breakpoint 32, sys_signal (signum=8, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8166 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8167 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8168 = 4
***cur state
$8169 = 0
***cur counter
$8170 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8171 = 4
***task
$8172 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8173 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8174 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8175 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8176 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8177 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8178 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x8	8
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8179 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=8, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8180 = 4
***signum
$8181 = 8


Breakpoint 32, sys_signal (signum=8, handler=0, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8182 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8183 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8184 = 4
***cur state
$8185 = 0
***cur counter
$8186 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8187 = 4
***task
$8188 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8189 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8190 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8191 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8192 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8193 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8194 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x9	9
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8195 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=9, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8196 = 4
***signum
$8197 = 9


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8198 = 4
***eax as return
eax            0xffffffff	-1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8199 = 4
***cur state
$8200 = 0
***cur counter
$8201 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8202 = 4
***task
$8203 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8204 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8205 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8206 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8207 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8208 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8209 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x9	9
***cur register ecx
ecx            0xffffffff	-1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8210 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8211 = 4
***signum
$8212 = 9


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8213 = 4
***eax as return
eax            0xffffffff	-1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8214 = 4
***cur state
$8215 = 0
***cur counter
$8216 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8217 = 4
***task
$8218 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8219 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8220 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8221 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8222 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8223 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8224 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xa	10
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8225 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8226 = 4
***signum
$8227 = 10


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8228 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8229 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8230 = 4
***cur state
$8231 = 0
***cur counter
$8232 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8233 = 4
***task
$8234 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8235 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8236 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8237 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8238 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8239 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8240 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xa	10
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8241 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8242 = 4
***signum
$8243 = 10


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8244 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8245 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8246 = 4
***cur state
$8247 = 0
***cur counter
$8248 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8249 = 4
***task
$8250 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8251 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8252 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8253 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8254 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8255 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8256 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xb	11
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8257 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8258 = 4
***signum
$8259 = 11


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8260 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8261 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8262 = 4
***cur state
$8263 = 0
***cur counter
$8264 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8265 = 4
***task
$8266 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8267 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8268 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8269 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8270 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8271 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8272 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xb	11
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8273 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8274 = 4
***signum
$8275 = 11


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8276 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8277 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8278 = 4
***cur state
$8279 = 0
***cur counter
$8280 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8281 = 4
***task
$8282 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8283 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8284 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8285 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8286 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8287 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8288 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xc	12
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8289 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8290 = 4
***signum
$8291 = 12


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8292 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8293 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8294 = 4
***cur state
$8295 = 0
***cur counter
$8296 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8297 = 4
***task
$8298 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8299 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8300 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8301 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8302 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8303 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8304 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xc	12
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8305 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8306 = 4
***signum
$8307 = 12


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8308 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8309 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8310 = 4
***cur state
$8311 = 0
***cur counter
$8312 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8313 = 4
***task
$8314 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8315 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8316 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8317 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8318 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8319 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8320 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xd	13
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8321 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8322 = 4
***signum
$8323 = 13


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8324 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8325 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8326 = 4
***cur state
$8327 = 0
***cur counter
$8328 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8329 = 4
***task
$8330 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8331 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8332 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8333 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8334 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8335 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8336 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xd	13
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8337 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8338 = 4
***signum
$8339 = 13


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8340 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8341 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8342 = 4
***cur state
$8343 = 0
***cur counter
$8344 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8345 = 4
***task
$8346 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8347 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8348 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8349 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8350 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8351 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8352 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xe	14
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8353 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8354 = 4
***signum
$8355 = 14


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8356 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8357 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8358 = 4
***cur state
$8359 = 0
***cur counter
$8360 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8361 = 4
***task
$8362 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8363 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8364 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8365 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8366 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8367 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8368 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xe	14
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8369 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8370 = 4
***signum
$8371 = 14


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8372 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8373 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8374 = 4
***cur state
$8375 = 0
***cur counter
$8376 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8377 = 4
***task
$8378 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8379 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8380 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8381 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8382 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8383 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8384 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xf	15
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8385 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8386 = 4
***signum
$8387 = 15


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8388 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8389 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8390 = 4
***cur state
$8391 = 0
***cur counter
$8392 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8393 = 4
***task
$8394 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8395 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8396 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8397 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8398 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8399 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8400 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xf	15
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8401 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8402 = 4
***signum
$8403 = 15


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8404 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8405 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8406 = 4
***cur state
$8407 = 0
***cur counter
$8408 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8409 = 4
***task
$8410 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8411 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8412 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8413 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8414 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8415 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8416 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x10	16
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8417 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8418 = 4
***signum
$8419 = 16


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8420 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8421 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8422 = 4
***cur state
$8423 = 0
***cur counter
$8424 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8425 = 4
***task
$8426 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8427 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8428 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8429 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8430 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8431 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8432 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x10	16
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8433 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8434 = 4
***signum
$8435 = 16


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8436 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8437 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8438 = 4
***cur state
$8439 = 0
***cur counter
$8440 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8441 = 4
***task
$8442 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8443 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8444 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8445 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8446 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8447 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8448 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x11	17
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8449 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8450 = 4
***signum
$8451 = 17


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8452 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8453 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8454 = 4
***cur state
$8455 = 0
***cur counter
$8456 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8457 = 4
***task
$8458 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8459 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8460 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8461 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8462 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8463 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8464 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x11	17
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8465 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8466 = 4
***signum
$8467 = 17


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8468 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8469 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8470 = 4
***cur state
$8471 = 0
***cur counter
$8472 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8473 = 4
***task
$8474 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8475 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8476 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8477 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8478 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8479 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8480 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x12	18
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8481 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8482 = 4
***signum
$8483 = 18


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8484 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8485 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8486 = 4
***cur state
$8487 = 0
***cur counter
$8488 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8489 = 4
***task
$8490 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8491 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8492 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8493 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8494 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8495 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8496 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x12	18
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8497 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8498 = 4
***signum
$8499 = 18


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8500 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8501 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8502 = 4
***cur state
$8503 = 0
***cur counter
$8504 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8505 = 4
***task
$8506 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8507 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8508 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8509 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8510 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8511 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8512 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x13	19
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8513 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8514 = 4
***signum
$8515 = 19


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8516 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8517 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8518 = 4
***cur state
$8519 = 0
***cur counter
$8520 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8521 = 4
***task
$8522 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8523 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8524 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8525 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8526 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8527 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8528 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x13	19
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8529 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8530 = 4
***signum
$8531 = 19


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8532 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8533 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8534 = 4
***cur state
$8535 = 0
***cur counter
$8536 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8537 = 4
***task
$8538 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8539 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8540 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8541 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8542 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8543 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8544 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8545 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8546 = 4
***signum
$8547 = 20


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8548 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8549 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8550 = 4
***cur state
$8551 = 0
***cur counter
$8552 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8553 = 4
***task
$8554 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8555 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8556 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8557 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8558 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8559 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8560 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8561 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8562 = 4
***signum
$8563 = 20


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8564 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8565 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8566 = 4
***cur state
$8567 = 0
***cur counter
$8568 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8569 = 4
***task
$8570 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8571 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8572 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8573 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8574 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8575 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8576 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x15	21
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8577 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8578 = 4
***signum
$8579 = 21


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8580 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8581 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8582 = 4
***cur state
$8583 = 0
***cur counter
$8584 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8585 = 4
***task
$8586 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8587 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8588 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8589 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8590 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8591 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8592 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x15	21
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8593 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8594 = 4
***signum
$8595 = 21


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8596 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8597 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8598 = 4
***cur state
$8599 = 0
***cur counter
$8600 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8601 = 4
***task
$8602 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8603 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8604 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8605 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8606 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8607 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8608 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x16	22
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8609 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8610 = 4
***signum
$8611 = 22


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8612 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8613 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8614 = 4
***cur state
$8615 = 0
***cur counter
$8616 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8617 = 4
***task
$8618 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8619 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8620 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8621 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8622 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8623 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8624 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x16	22
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8625 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8626 = 4
***signum
$8627 = 22


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8628 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8629 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8630 = 4
***cur state
$8631 = 0
***cur counter
$8632 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8633 = 4
***task
$8634 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8635 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8636 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8637 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8638 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8639 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8640 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x17	23
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8641 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8642 = 4
***signum
$8643 = 23


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8644 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8645 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8646 = 4
***cur state
$8647 = 0
***cur counter
$8648 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8649 = 4
***task
$8650 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8651 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8652 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8653 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8654 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8655 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8656 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x17	23
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8657 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8658 = 4
***signum
$8659 = 23


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8660 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8661 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8662 = 4
***cur state
$8663 = 0
***cur counter
$8664 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8665 = 4
***task
$8666 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8667 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8668 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8669 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8670 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8671 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8672 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x18	24
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8673 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8674 = 4
***signum
$8675 = 24


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8676 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8677 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8678 = 4
***cur state
$8679 = 0
***cur counter
$8680 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8681 = 4
***task
$8682 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8683 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8684 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8685 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8686 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8687 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8688 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x18	24
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8689 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8690 = 4
***signum
$8691 = 24


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8692 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8693 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8694 = 4
***cur state
$8695 = 0
***cur counter
$8696 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8697 = 4
***task
$8698 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8699 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8700 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8701 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8702 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8703 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8704 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x19	25
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8705 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8706 = 4
***signum
$8707 = 25


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8708 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8709 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8710 = 4
***cur state
$8711 = 0
***cur counter
$8712 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8713 = 4
***task
$8714 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8715 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8716 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8717 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8718 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8719 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8720 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x19	25
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8721 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8722 = 4
***signum
$8723 = 25


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8724 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8725 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8726 = 4
***cur state
$8727 = 0
***cur counter
$8728 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8729 = 4
***task
$8730 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8731 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8732 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8733 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8734 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8735 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8736 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1a	26
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8737 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8738 = 4
***signum
$8739 = 26


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8740 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8741 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8742 = 4
***cur state
$8743 = 0
***cur counter
$8744 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8745 = 4
***task
$8746 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8747 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8748 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8749 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8750 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8751 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8752 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1a	26
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8753 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8754 = 4
***signum
$8755 = 26


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8756 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8757 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8758 = 4
***cur state
$8759 = 0
***cur counter
$8760 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8761 = 4
***task
$8762 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8763 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8764 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8765 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8766 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8767 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8768 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1b	27
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8769 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8770 = 4
***signum
$8771 = 27


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8772 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8773 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8774 = 4
***cur state
$8775 = 0
***cur counter
$8776 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8777 = 4
***task
$8778 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8779 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8780 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8781 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8782 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8783 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8784 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1b	27
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8785 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8786 = 4
***signum
$8787 = 27


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8788 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8789 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8790 = 4
***cur state
$8791 = 0
***cur counter
$8792 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8793 = 4
***task
$8794 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8795 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8796 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8797 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8798 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8799 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8800 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1c	28
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8801 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8802 = 4
***signum
$8803 = 28


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8804 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8805 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8806 = 4
***cur state
$8807 = 0
***cur counter
$8808 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8809 = 4
***task
$8810 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8811 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8812 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8813 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8814 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8815 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8816 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1c	28
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8817 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8818 = 4
***signum
$8819 = 28


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8820 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8821 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8822 = 4
***cur state
$8823 = 0
***cur counter
$8824 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8825 = 4
***task
$8826 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8827 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8828 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8829 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8830 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8831 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8832 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1d	29
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8833 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8834 = 4
***signum
$8835 = 29


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8836 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8837 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8838 = 4
***cur state
$8839 = 0
***cur counter
$8840 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8841 = 4
***task
$8842 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8843 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8844 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8845 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8846 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8847 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8848 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1d	29
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8849 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8850 = 4
***signum
$8851 = 29


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8852 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8853 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8854 = 4
***cur state
$8855 = 0
***cur counter
$8856 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8857 = 4
***task
$8858 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8859 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8860 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8861 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8862 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8863 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8864 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1e	30
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8865 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8866 = 4
***signum
$8867 = 30


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8868 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8869 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8870 = 4
***cur state
$8871 = 0
***cur counter
$8872 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8873 = 4
***task
$8874 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8875 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8876 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8877 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8878 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8879 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8880 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1e	30
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8881 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8882 = 4
***signum
$8883 = 30


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8884 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8885 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8886 = 4
***cur state
$8887 = 0
***cur counter
$8888 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8889 = 4
***task
$8890 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8891 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8892 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8893 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8894 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8895 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8896 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1f	31
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8897 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8898 = 4
***signum
$8899 = 31


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8900 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8901 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8902 = 4
***cur state
$8903 = 0
***cur counter
$8904 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8905 = 4
***task
$8906 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8907 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8908 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8909 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8910 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8911 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8912 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x1f	31
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8913 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$8914 = 4
***signum
$8915 = 31


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$8916 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8917 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8918 = 4
***cur state
$8919 = 0
***cur counter
$8920 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8921 = 4
***task
$8922 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8923 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8924 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8925 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8926 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8927 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8928 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x3fffde4	67108324
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8929 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8930 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8931 = 4
***cur state
$8932 = 0
***cur counter
$8933 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8934 = 4
***task
$8935 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8936 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8937 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8938 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8939 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8940 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8941 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x3fffde4	67108324
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8942 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8943 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8944 = 4
***cur state
$8945 = 0
***cur counter
$8946 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8947 = 4
***task
$8948 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8949 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8950 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8951 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8952 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8953 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8954 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fffde4	67108324
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8955 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8956 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8957 = 4
***cur state
$8958 = 0
***cur counter
$8959 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8960 = 4
***task
$8961 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8962 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8963 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8964 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8965 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8966 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8967 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0x4	4
***cur register ecx
ecx            0x3fffde4	67108324
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8968 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8969 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8970 = 4
***cur state
$8971 = 0
***cur counter
$8972 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8973 = 4
***task
$8974 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8975 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8976 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8977 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8978 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8979 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8980 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0x5	5
***cur register ecx
ecx            0x3fffde4	67108324
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8981 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8982 = 4
***task
$8983 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8984 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8985 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$8986 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$8987 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$8988 = 4
***cur state
$8989 = 0
***cur counter
$8990 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$8991 = 4
***task
$8992 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$8993 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$8994 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$8995 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$8996 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$8997 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$8998 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0x6	6
***cur register ecx
ecx            0x3fffde4	67108324
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$8999 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9000 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9001 = 4
***cur state
$9002 = 0
***cur counter
$9003 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9004 = 4
***task
$9005 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9006 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9007 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9008 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9009 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9010 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9011 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0x8	8
***cur register ecx
ecx            0x3fffde4	67108324
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9012 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9013 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9014 = 4
***cur state
$9015 = 0
***cur counter
$9016 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9017 = 4
***task
$9018 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9019 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9020 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9021 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9022 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9023 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9024 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0x9	9
***cur register ecx
ecx            0x3fffde4	67108324
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9025 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9026 = 4
***eax as return
eax            0xffffffff	-1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9027 = 4
***cur state
$9028 = 0
***cur counter
$9029 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9030 = 4
***task
$9031 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9032 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9033 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9034 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9035 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9036 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9037 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0xb	11
***cur register ecx
ecx            0x3fffde4	67108324
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9038 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9039 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9040 = 4
***cur state
$9041 = 0
***cur counter
$9042 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9043 = 4
***task
$9044 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9045 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9046 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9047 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9048 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9049 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9050 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0xd	13
***cur register ecx
ecx            0x3fffde4	67108324
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9051 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9052 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9053 = 4
***cur state
$9054 = 0
***cur counter
$9055 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9056 = 4
***task
$9057 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9058 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9059 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9060 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9061 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9062 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9063 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0xe	14
***cur register ecx
ecx            0x3fffde4	67108324
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9064 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9065 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9066 = 4
***cur state
$9067 = 0
***cur counter
$9068 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9069 = 4
***task
$9070 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9071 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9072 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9073 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9074 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9075 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9076 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0xf	15
***cur register ecx
ecx            0x3fffde4	67108324
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9077 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9078 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9079 = 4
***cur state
$9080 = 0
***cur counter
$9081 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9082 = 4
***task
$9083 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9084 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9085 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9086 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9087 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9088 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9089 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0xa	10
***cur register ecx
ecx            0x3fffde4	67108324
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9090 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9091 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9092 = 4
***cur state
$9093 = 0
***cur counter
$9094 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9095 = 4
***task
$9096 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9097 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9098 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9099 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9100 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9101 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9102 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0xc	12
***cur register ecx
ecx            0x3fffde4	67108324
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9103 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9104 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9105 = 4
***cur state
$9106 = 0
***cur counter
$9107 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9108 = 4
***task
$9109 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9110 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9111 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9112 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9113 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9114 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9115 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9116 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=3, handler=1, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$9117 = 4
***signum
$9118 = 3


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$9119 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9120 = 4
***eax as return
eax            0x1534	5428
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9121 = 4
***cur state
$9122 = 0
***cur counter
$9123 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9124 = 4
***task
$9125 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9126 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9127 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9128 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9129 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9130 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9131 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xf	15
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9132 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$9133 = 4
***signum
$9134 = 15


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$9135 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9136 = 4
***eax as return
eax            0x1534	5428
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9137 = 4
***cur state
$9138 = 0
***cur counter
$9139 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9140 = 4
***task
$9141 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9142 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9143 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9144 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9145 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9146 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9147 = 4
***fault address
***cur register edx
edx            0x80108ac	134285484
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134285484) at memory.c:367
367	{
---in do_no_page
___pid
$9148 = 4
***address
$9149 = 134285484


Breakpoint 103, do_no_page (error_code=4, address=134283264) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$9150 = 4
***page
$9151 = 16637952
***block
$9152 = 65


Breakpoint 42, do_no_page (error_code=4, address=134283264) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$9153 = 4
***nr array$9154 = 888
$9155 = 889
$9156 = 890
$9157 = 891


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9158 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9159 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x1730	5936
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9160 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$9161 = 4
***signum
$9162 = 2


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$9163 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9164 = 4
***eax as return
eax            0x1534	5428
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9165 = 4
***cur state
$9166 = 0
***cur counter
$9167 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9168 = 4
***task
$9169 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9170 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9171 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9172 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9173 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9174 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9175 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9176 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$9177 = 4
***signum
$9178 = 20


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$9179 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9180 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9181 = 4
***cur state
$9182 = 0
***cur counter
$9183 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9184 = 4
***task
$9185 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9186 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9187 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9188 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9189 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9190 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9191 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x16	22
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9192 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$9193 = 4
***signum
$9194 = 22


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$9195 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9196 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9197 = 4
***cur state
$9198 = 0
***cur counter
$9199 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9200 = 4
***task
$9201 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9202 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9203 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9204 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9205 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9206 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9207 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x15	21
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9208 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$9209 = 4
***signum
$9210 = 21


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$9211 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9212 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9213 = 4
***cur state
$9214 = 0
***cur counter
$9215 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9216 = 4
***task
$9217 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9218 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9219 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9220 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9221 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9222 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9223 = 4
***fault address
***cur register edx
edx            0x801b260	134328928
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134328928) at memory.c:367
367	{
---in do_no_page
___pid
$9224 = 4
***address
$9225 = 134328928


Breakpoint 103, do_no_page (error_code=4, address=134328320) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$9226 = 4
***page
$9227 = 16633856
***block
$9228 = 109


Breakpoint 42, do_no_page (error_code=4, address=134328320) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$9229 = 4
***nr array$9230 = 932
$9231 = 933
$9232 = 934
$9233 = 935


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9234 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9235 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x18	24
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x12	18
***cur register edx
edx            0x498de	301278


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9236 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9237 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9238 = 4
***cur state
$9239 = 0
***cur counter
$9240 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9241 = 4
***task
$9242 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9243 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9244 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9245 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9246 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9247 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9248 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x3db2a	252714
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x1b6	438


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9249 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 65, sys_open (filename=0x3db2a "", flag=0, mode=420) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$9250 = 4
***open filename
$9251 = 0 '\000'
***fd
$9252 = 3


Breakpoint 66, sys_open (filename=0x3db2a "", flag=0, mode=420) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$9253 = 4
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9254 = 4
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9255 = 4
***cur state
$9256 = 0
***cur counter
$9257 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9258 = 4
***task
$9259 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9260 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9261 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9262 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9263 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9264 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9265 = 4
***fault address
***cur register edx
edx            0x80407cc	134481868
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134481868) at memory.c:367
367	{
---in do_no_page
___pid
$9266 = 4
***address
$9267 = 134481868


Breakpoint 103, do_no_page (error_code=4, address=134479872) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$9268 = 4
***page
$9269 = 16629760
***block
$9270 = 257


Breakpoint 42, do_no_page (error_code=4, address=134479872) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$9271 = 4
***nr array$9272 = 1080
$9273 = 1081
$9274 = 1082
$9275 = 1083


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9276 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9277 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffd80	67108224


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9278 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=3, cmd=21505, arg=67108224) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$9279 = 4
***fd
$9280 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9281 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9282 = 4
***cur state
$9283 = 0
***cur counter
$9284 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9285 = 4
***task
$9286 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9287 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9288 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9289 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9290 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9291 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9292 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x46258	287320
***cur register edx
edx            0x400	1024


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9293 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=134504448) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$9294 = 4
***call stack
#0  write_verify (address=134504448) at memory.c:267
#1  0x000085cd in verify_area (addr=0x46258, size=-2472) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x46258 "", count=1024)
    at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$9295 = 134504448


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9296 = 4
***eax as return
eax            0x10a	266
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9297 = 4
***cur state
$9298 = 0
***cur counter
$9299 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9300 = 4
***task
$9301 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9302 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9303 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9304 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9305 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9306 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9307 = 4
***task
$9308 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9309 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9310 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9311 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9312 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9313 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9314 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x13	19
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0xffffff11	-239
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9315 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9316 = 4
***eax as return
eax            0x1b	27
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9317 = 4
***cur state
$9318 = 0
***cur counter
$9319 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9320 = 4
***task
$9321 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9322 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9323 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9324 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9325 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9326 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9327 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0xffffff11	-239
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9328 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$9329 = 4
***fd
$9330 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9331 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9332 = 4
***cur state
$9333 = 0
***cur counter
$9334 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9335 = 4
***task
$9336 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9337 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9338 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9339 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9340 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9341 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9342 = 4
***fault address
***cur register edx
edx            0x8008128	134250792
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134250792) at memory.c:367
367	{
---in do_no_page
___pid
$9343 = 4
***address
$9344 = 134250792


Breakpoint 103, do_no_page (error_code=4, address=134250496) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$9345 = 4
***page
$9346 = 16625664
***block
$9347 = 33


Breakpoint 42, do_no_page (error_code=4, address=134250496) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$9348 = 4
***nr array$9349 = 856
$9350 = 857
$9351 = 858
$9352 = 859


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9353 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9354 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3b	59
***cur register ebx
ebx            0x3fffdbc	67108284
***cur register ecx
ecx            0x46258	287320
***cur register edx
edx            0x49980	301440


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9355 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$9356 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fffdbc, size=-535) at fork.c:35
#2  0x00009d27 in sys_uname (name=0x3fffdbc) at sys.c:224
#3  0x0000793f in system_call () at system_call.s:94
#4  0x03fffdbc in ?? ()
***address
$9357 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9358 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9359 = 4
***cur state
$9360 = 0
***cur counter
$9361 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9362 = 4
***task
$9363 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9364 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9365 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9366 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9367 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9368 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9369 = 4
***fault address
***cur register edx
edx            0x800d380	134271872
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134271872) at memory.c:367
367	{
---in do_no_page
___pid
$9370 = 4
***address
$9371 = 134271872


Breakpoint 103, do_no_page (error_code=4, address=134270976) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$9372 = 4
***page
$9373 = 16621568
***block
$9374 = 53


Breakpoint 42, do_no_page (error_code=4, address=134270976) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$9375 = 4
***nr array$9376 = 876
$9377 = 877
$9378 = 878
$9379 = 879


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9380 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9381 = 4
***fault address
***cur register edx
edx            0x8015ee8	134307560
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134307560) at memory.c:367
367	{
---in do_no_page
___pid
$9382 = 4
***address
$9383 = 134307560


Breakpoint 103, do_no_page (error_code=4, address=134303744) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$9384 = 4
***page
$9385 = 16617472
***block
$9386 = 85


Breakpoint 42, do_no_page (error_code=4, address=134303744) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$9387 = 4
***nr array$9388 = 908
$9389 = 909
$9390 = 910
$9391 = 911


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9392 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9393 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x49c00	302080
***cur register ecx
ecx            0xc	12
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9394 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=302080) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$9395 = 4
***end_data_seg
$9396 = 302080
***cur brk
$9397 = 302080


Breakpoint 59, sys_brk (end_data_seg=302080) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$9398 = 4
***cur brk
$9399 = 302080


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9400 = 4
***eax as return
eax            0x49c00	302080
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9401 = 4
***cur state
$9402 = 0
***cur counter
$9403 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9404 = 4
***task
$9405 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9406 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9407 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9408 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9409 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9410 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9411 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4a400	304128
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9412 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=304128) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$9413 = 4
***end_data_seg
$9414 = 304128
***cur brk
$9415 = 302080


Breakpoint 59, sys_brk (end_data_seg=304128) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$9416 = 4
***cur brk
$9417 = 304128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9418 = 4
***eax as return
eax            0x4a400	304128
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9419 = 4
***cur state
$9420 = 0
***cur counter
$9421 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9422 = 4
***task
$9423 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9424 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9425 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9426 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9427 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9428 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9429 = 4
***fault address
***cur register edx
edx            0x804a000	134520832
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134520832) at memory.c:367
367	{
---in do_no_page
___pid
$9430 = 4
***address
$9431 = 134520832


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9432 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9433 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4a400	304128
***cur register ecx
ecx            0x1a8	424
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9434 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=304128) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$9435 = 4
***end_data_seg
$9436 = 304128
***cur brk
$9437 = 304128


Breakpoint 59, sys_brk (end_data_seg=304128) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$9438 = 4
***cur brk
$9439 = 304128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9440 = 4
***eax as return
eax            0x4a400	304128
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9441 = 4
***cur state
$9442 = 0
***cur counter
$9443 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9444 = 4
***task
$9445 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9446 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9447 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9448 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9449 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9450 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9451 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4ac00	306176
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9452 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=306176) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$9453 = 4
***end_data_seg
$9454 = 306176
***cur brk
$9455 = 304128


Breakpoint 59, sys_brk (end_data_seg=306176) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$9456 = 4
***cur brk
$9457 = 306176


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9458 = 4
***eax as return
eax            0x4ac00	306176
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9459 = 4
***cur state
$9460 = 0
***cur counter
$9461 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9462 = 4
***task
$9463 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9464 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9465 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9466 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9467 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9468 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9469 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x1b3a0	111520
***cur register ecx
ecx            0x3fffc40	67107904
***cur register edx
edx            0x40c	1036


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9470 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$9471 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fffc40, size=-928) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27618 <inode_table+56>, statbuf=0x3fffc40)
    at stat.c:20
#3  0x0000f85b in sys_stat (
    filename=0x1b3a0 "\016 C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", statbuf=0x3fffc40) at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x0001b3a0 in ?? ()
***address
$9472 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9473 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9474 = 4
***cur state
$9475 = 0
***cur counter
$9476 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9477 = 4
***task
$9478 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9479 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9480 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9481 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9482 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9483 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9484 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x1b3a2	111522
***cur register ecx
ecx            0x3fffc40	67107904
***cur register edx
edx            0x40c	1036


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9485 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$9486 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fffc40, size=-928) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27618 <inode_table+56>, statbuf=0x3fffc40)
    at stat.c:20
#3  0x0000f85b in sys_stat (
    filename=0x1b3a2 "C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", statbuf=0x3fffc40) at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x0001b3a2 in ?? ()
***address
$9487 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9488 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9489 = 4
***cur state
$9490 = 0
***cur counter
$9491 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9492 = 4
***task
$9493 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9494 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9495 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9496 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9497 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9498 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9499 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0xc	12
***cur register ebx
ebx            0x3fffd5e	67108190
***cur register ecx
ecx            0x3fffc40	67107904
***cur register edx
edx            0x40c	1036


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9500 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9501 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9502 = 4
***cur state
$9503 = 0
***cur counter
$9504 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9505 = 4
***task
$9506 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9507 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9508 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9509 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9510 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9511 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9512 = 4
***fault address
***cur register edx
edx            0x800e1b4	134275508
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134275508) at memory.c:367
367	{
---in do_no_page
___pid
$9513 = 4
***address
$9514 = 134275508


Breakpoint 103, do_no_page (error_code=4, address=134275072) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$9515 = 4
***page
$9516 = 16609280
***block
$9517 = 57


Breakpoint 42, do_no_page (error_code=4, address=134275072) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$9518 = 4
***nr array$9519 = 880
$9520 = 881
$9521 = 882
$9522 = 883


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9523 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9524 = 4
***fault address
***cur register edx
edx            0x8016038	134307896
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134307896) at memory.c:367
367	{
---in do_no_page
___pid
$9525 = 4
***address
$9526 = 134307896


Breakpoint 103, do_no_page (error_code=4, address=134307840) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$9527 = 4
***page
$9528 = 16605184
***block
$9529 = 89


Breakpoint 42, do_no_page (error_code=4, address=134307840) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$9530 = 4
***nr array$9531 = 912
$9532 = 913
$9533 = 914
$9534 = 915


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9535 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9536 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x14	20
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x4998c	301452
***cur register edx
edx            0x3ffffdc	67108828


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9537 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9538 = 4
***eax as return
eax            0x4	4
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9539 = 4
***cur state
$9540 = 0
***cur counter
$9541 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9542 = 4
***task
$9543 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9544 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9545 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9546 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9547 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9548 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9549 = 4
***task
$9550 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9551 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9552 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9553 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9554 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9555 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9556 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4ac00	306176
***cur register ecx
ecx            0x481ed	295405
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9557 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=306176) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$9558 = 4
***end_data_seg
$9559 = 306176
***cur brk
$9560 = 306176


Breakpoint 59, sys_brk (end_data_seg=306176) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$9561 = 4
***cur brk
$9562 = 306176


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9563 = 4
***eax as return
eax            0x4ac00	306176
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9564 = 4
***cur state
$9565 = 0
***cur counter
$9566 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9567 = 4
***task
$9568 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9569 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9570 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9571 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9572 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9573 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9574 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4b400	308224
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9575 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=308224) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$9576 = 4
***end_data_seg
$9577 = 308224
***cur brk
$9578 = 306176


Breakpoint 59, sys_brk (end_data_seg=308224) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$9579 = 4
***cur brk
$9580 = 308224


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9581 = 4
***eax as return
eax            0x4b400	308224
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9582 = 4
***cur state
$9583 = 0
***cur counter
$9584 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9585 = 4
***task
$9586 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9587 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9588 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9589 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9590 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9591 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9592 = 4
***fault address
***cur register edx
edx            0x804b000	134524928
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134524928) at memory.c:367
367	{
---in do_no_page
___pid
$9593 = 4
***address
$9594 = 134524928


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9595 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9596 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x40	64
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x2	2
***cur register edx
edx            0x48260	295520


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9597 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9598 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9599 = 4
***cur state
$9600 = 0
***cur counter
$9601 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9602 = 4
***task
$9603 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9604 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9605 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9606 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9607 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9608 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9609 = 4
***fault address
***cur register edx
edx            0x800cbcc	134269900
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134269900) at memory.c:367
367	{
---in do_no_page
___pid
$9610 = 4
***address
$9611 = 134269900


Breakpoint 103, do_no_page (error_code=4, address=134266880) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$9612 = 4
***page
$9613 = 16596992
***block
$9614 = 49


Breakpoint 42, do_no_page (error_code=4, address=134266880) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$9615 = 4
***nr array$9616 = 872
$9617 = 873
$9618 = 874
$9619 = 875


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9620 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9621 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4b400	308224
***cur register ecx
ecx            0x2f	47
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9622 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=308224) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$9623 = 4
***end_data_seg
$9624 = 308224
***cur brk
$9625 = 308224


Breakpoint 59, sys_brk (end_data_seg=308224) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$9626 = 4
***cur brk
$9627 = 308224


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9628 = 4
***eax as return
eax            0x4b400	308224
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9629 = 4
***cur state
$9630 = 0
***cur counter
$9631 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9632 = 4
***task
$9633 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9634 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9635 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9636 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9637 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9638 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9639 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4bc00	310272
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9640 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=310272) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$9641 = 4
***end_data_seg
$9642 = 310272
***cur brk
$9643 = 308224


Breakpoint 59, sys_brk (end_data_seg=310272) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$9644 = 4
***cur brk
$9645 = 310272


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9646 = 4
***eax as return
eax            0x4bc00	310272
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9647 = 4
***cur state
$9648 = 0
***cur counter
$9649 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9650 = 4
***task
$9651 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9652 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9653 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9654 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9655 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9656 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9657 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x4b40c	308236
***cur register ecx
ecx            0x3fffcf4	67108084
***cur register edx
edx            0x4b40c	308236


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9658 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$9659 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fffcf4, size=-748) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27768 <inode_table+392>, statbuf=0x3fffcf4)
    at stat.c:20
#3  0x0000f85b in sys_stat (filename=0x4b40c "", statbuf=0x3fffcf4)
    at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x0004b40c in ?? ()
***address
$9660 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9661 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9662 = 4
***cur state
$9663 = 0
***cur counter
$9664 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9665 = 4
***task
$9666 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9667 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9668 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9669 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9670 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9671 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9672 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x31	49
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x3fffcf4	67108084
***cur register edx
edx            0x4b40c	308236


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9673 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9674 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9675 = 4
***cur state
$9676 = 0
***cur counter
$9677 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9678 = 4
***task
$9679 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9680 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9681 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9682 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9683 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9684 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9685 = 4
***fault address
***cur register edx
edx            0x80378e8	134445288
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134445288) at memory.c:367
367	{
---in do_no_page
___pid
$9686 = 4
***address
$9687 = 134445288


Breakpoint 103, do_no_page (error_code=4, address=134443008) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$9688 = 4
***page
$9689 = 16592896
***block
$9690 = 221


Breakpoint 42, do_no_page (error_code=4, address=134443008) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$9691 = 4
***nr array$9692 = 1044
$9693 = 1045
$9694 = 1046
$9695 = 1047


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9696 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9697 = 4
***fault address
***cur register edx
edx            0x800f2cc	134279884
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134279884) at memory.c:367
367	{
---in do_no_page
___pid
$9698 = 4
***address
$9699 = 134279884


Breakpoint 103, do_no_page (error_code=4, address=134279168) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$9700 = 4
***page
$9701 = 16588800
***block
$9702 = 61


Breakpoint 42, do_no_page (error_code=4, address=134279168) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$9703 = 4
***nr array$9704 = 884
$9705 = 885
$9706 = 886
$9707 = 887


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9708 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9709 = 4
***task
$9710 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9711 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9712 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9713 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9714 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9715 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9716 = 4
***fault address
***cur register edx
edx            0x8012140	134291776
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134291776) at memory.c:367
367	{
---in do_no_page
___pid
$9717 = 4
***address
$9718 = 134291776


Breakpoint 103, do_no_page (error_code=4, address=134291456) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$9719 = 4
***page
$9720 = 16584704
***block
$9721 = 73


Breakpoint 42, do_no_page (error_code=4, address=134291456) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$9722 = 4
***nr array$9723 = 896
$9724 = 897
$9725 = 898
$9726 = 899


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9727 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9728 = 4
***fault address
***cur register edx
edx            0x803551c	134436124
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134436124) at memory.c:367
367	{
---in do_no_page
___pid
$9729 = 4
***address
$9730 = 134436124


Breakpoint 103, do_no_page (error_code=4, address=134434816) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$9731 = 4
***page
$9732 = 16580608
***block
$9733 = 213


Breakpoint 42, do_no_page (error_code=4, address=134434816) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$9734 = 4
***nr array$9735 = 1036
$9736 = 1037
$9737 = 1038
$9738 = 1039


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9739 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9740 = 4
***fault address
***cur register edx
edx            0x8042540	134489408
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134489408) at memory.c:367
367	{
---in do_no_page
___pid
$9741 = 4
***address
$9742 = 134489408


Breakpoint 103, do_no_page (error_code=4, address=134488064) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$9743 = 4
***page
$9744 = 16576512
***block
$9745 = 265


Breakpoint 42, do_no_page (error_code=4, address=134488064) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$9746 = 4
***nr array$9747 = 1088
$9748 = 1089
$9749 = 1090
$9750 = 1091


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9751 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9752 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x18	24
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x4af0c	306956
***cur register edx
edx            0x10	16


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9753 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9754 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9755 = 4
***cur state
$9756 = 0
***cur counter
$9757 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9758 = 4
***task
$9759 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9760 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9761 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9762 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9763 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9764 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9765 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x31	49
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x4af0c	306956
***cur register edx
edx            0x10	16


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9766 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9767 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9768 = 4
***cur state
$9769 = 0
***cur counter
$9770 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9771 = 4
***task
$9772 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9773 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9774 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9775 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9776 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9777 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9778 = 4
***fault address
***cur register edx
edx            0x801f150	134345040
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134345040) at memory.c:367
367	{
---in do_no_page
___pid
$9779 = 4
***address
$9780 = 134345040


Breakpoint 103, do_no_page (error_code=4, address=134344704) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$9781 = 4
***page
$9782 = 16572416
***block
$9783 = 125


Breakpoint 42, do_no_page (error_code=4, address=134344704) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$9784 = 4
***nr array$9785 = 948
$9786 = 949
$9787 = 950
$9788 = 951


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9789 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9790 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4bc00	310272
***cur register ecx
ecx            0xc	12
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9791 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=310272) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$9792 = 4
***end_data_seg
$9793 = 310272
***cur brk
$9794 = 310272


Breakpoint 59, sys_brk (end_data_seg=310272) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$9795 = 4
***cur brk
$9796 = 310272


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9797 = 4
***eax as return
eax            0x4bc00	310272
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9798 = 4
***cur state
$9799 = 0
***cur counter
$9800 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9801 = 4
***task
$9802 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9803 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9804 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9805 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9806 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9807 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9808 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4cc00	314368
***cur register ecx
ecx            0xc	12
***cur register edx
edx            0x1000	4096


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9809 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=314368) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$9810 = 4
***end_data_seg
$9811 = 314368
***cur brk
$9812 = 310272


Breakpoint 59, sys_brk (end_data_seg=314368) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$9813 = 4
***cur brk
$9814 = 314368


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9815 = 4
***eax as return
eax            0x4cc00	314368
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9816 = 4
***cur state
$9817 = 0
***cur counter
$9818 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9819 = 4
***task
$9820 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9821 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9822 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9823 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9824 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9825 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9826 = 4
***fault address
***cur register edx
edx            0x804c5e8	134530536
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134530536) at memory.c:367
367	{
---in do_no_page
___pid
$9827 = 4
***address
$9828 = 134530536


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9829 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9830 = 4
***task
$9831 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9832 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9833 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9834 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9835 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9836 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9837 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x10c7e	68734
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3fffdf8	67108344


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9838 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    flag=0, mode=488) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$9839 = 4
***open filename
$9840 = 64 '@'
***fd
$9841 = 3


    flag=0, mode=488) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$9842 = 4
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9843 = 4
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9844 = 4
***cur state
$9845 = 0
***cur counter
$9846 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9847 = 4
***task
$9848 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9849 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9850 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9851 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9852 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9853 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9854 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x451a8	283048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9855 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=3, cmd=21505, arg=283048) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$9856 = 4
***fd
$9857 = 3


Breakpoint 61, sys_ioctl (fd=3, cmd=21505, arg=283048) at ioctl.c:40
40		dev = filp->f_inode->i_zone[0];
---in sys_ioctl
___pid
$9858 = 4
***mode and fd right
***dev
$9859 = 3


Breakpoint 91, write_verify (address=134500352) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$9860 = 4
***call stack
#0  write_verify (address=134500352) at memory.c:267
#1  0x000085cd in verify_area (addr=0x451a8, size=-3636) at fork.c:35
#2  0x00019486 in get_termios (tty=0x234c0 <tty_table>, termios=0x451a8)
    at tty_ioctl.c:60
#3  0x0001976f in tty_ioctl (dev=0, cmd=21505, arg=283048) at tty_ioctl.c:127
#4  0x00013a54 in sys_ioctl (fd=3, cmd=21505, arg=283048) at ioctl.c:45
#5  0x0000793f in system_call () at system_call.s:94
#6  0x00000003 in startup_32 () at head.s:19
***address
$9861 = 134500352


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9862 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9863 = 4
***cur state
$9864 = 0
***cur counter
$9865 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9866 = 4
***task
$9867 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9868 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9869 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9870 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9871 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9872 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9873 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x451a8	283048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9874 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$9875 = 4
***fd
$9876 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9877 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9878 = 4
***cur state
$9879 = 0
***cur counter
$9880 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9881 = 4
***task
$9882 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9883 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9884 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9885 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9886 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9887 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9888 = 4
***fault address
***cur register edx
edx            0x8004960	134236512
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134236512) at memory.c:367
367	{
---in do_no_page
___pid
$9889 = 4
***address
$9890 = 134236512


Breakpoint 103, do_no_page (error_code=4, address=134234112) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$9891 = 4
***page
$9892 = 16564224
***block
$9893 = 17


Breakpoint 42, do_no_page (error_code=4, address=134234112) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$9894 = 4
***nr array$9895 = 840
$9896 = 841
$9897 = 842
$9898 = 843


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9899 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9900 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x4afcc	307148
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x11a	282


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9901 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 65, sys_open (filename=0x4afcc "", flag=0, mode=264) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$9902 = 4
***open filename
$9903 = 0 '\000'
***fd
$9904 = 3


Breakpoint 66, sys_open (filename=0x4afcc "", flag=0, mode=264) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$9905 = 4
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9906 = 4
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9907 = 4
***cur state
$9908 = 0
***cur counter
$9909 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9910 = 4
***task
$9911 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9912 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9913 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9914 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9915 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9916 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9917 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1c	28
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fffe90	67108496
***cur register edx
edx            0x108	264


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9918 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$9919 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fffe90, size=-336) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27650 <inode_table+112>, statbuf=0x3fffe90)
    at stat.c:20
#3  0x0000f8d4 in sys_fstat (fd=3, statbuf=0x3fffe90) at stat.c:54
#4  0x0000793f in system_call () at system_call.s:94
#5  0x00000003 in startup_32 () at head.s:19
***address
$9920 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9921 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9922 = 4
***cur state
$9923 = 0
***cur counter
$9924 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9925 = 4
***task
$9926 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9927 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9928 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9929 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9930 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9931 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9932 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x4750c	292108
***cur register edx
edx            0x93	147


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9933 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=134508544) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$9934 = 4
***call stack
#0  write_verify (address=134508544) at memory.c:267
#1  0x000085cd in verify_area (addr=0x4750c, size=-2657) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x4750c "", count=147) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$9935 = 134508544


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$9936 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2be28) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2be28) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=3520) at buffer.c:278
#5  0x0000f3ad in file_read (inode=0x27650 <inode_table+112>, 
    filp=0x29780 <file_table+32>, buf=0x4750c "", count=147) at file_dev.c:26
#6  0x0000c524 in sys_read (fd=3, buf=0x4750c "", count=147) at read_write.c:77
#7  0x0000793f in system_call () at system_call.s:94
#8  0x00000003 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$9937 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$9938 = 4
***drive
$9939 = 0
***head
$9940 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$9941 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9942 = 4
***eax as return
eax            0x93	147
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9943 = 4
***cur state
$9944 = 0
***cur counter
$9945 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9946 = 4
***task
$9947 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9948 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9949 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9950 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9951 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9952 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$9953 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x4750c	292108
***cur register edx
edx            0x16	22


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$9954 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$9955 = 4
***fd
$9956 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$9957 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$9958 = 4
***cur state
$9959 = 0
***cur counter
$9960 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$9961 = 4
***task
$9962 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$9963 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$9964 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$9965 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$9966 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$9967 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9968 = 4
***fault address
***cur register edx
edx            0x8003158	134230360
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134230360) at memory.c:367
367	{
---in do_no_page
___pid
$9969 = 4
***address
$9970 = 134230360


Breakpoint 103, do_no_page (error_code=4, address=134230016) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$9971 = 4
***page
$9972 = 16560128
***block
$9973 = 13


Breakpoint 42, do_no_page (error_code=4, address=134230016) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$9974 = 4
***nr array$9975 = 836
$9976 = 837
$9977 = 838
$9978 = 839


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9979 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9980 = 4
***fault address
***cur register edx
edx            0x800260c	134227468
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134227468) at memory.c:367
367	{
---in do_no_page
___pid
$9981 = 4
***address
$9982 = 134227468


Breakpoint 103, do_no_page (error_code=4, address=134225920) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$9983 = 4
***page
$9984 = 16556032
***block
$9985 = 9


Breakpoint 42, do_no_page (error_code=4, address=134225920) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$9986 = 4
***nr array$9987 = 832
$9988 = 833
$9989 = 834
$9990 = 835


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$9991 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$9992 = 4
***fault address
***cur register edx
edx            0x8005620	134239776
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134239776) at memory.c:367
367	{
---in do_no_page
___pid
$9993 = 4
***address
$9994 = 134239776


Breakpoint 103, do_no_page (error_code=4, address=134238208) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$9995 = 4
***page
$9996 = 16551936
***block
$9997 = 21


Breakpoint 42, do_no_page (error_code=4, address=134238208) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$9998 = 4
***nr array$9999 = 844
$10000 = 845
$10001 = 846
$10002 = 847


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10003 = 4
***task
$10004 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10005 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10006 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$10007 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$10008 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10009 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4cc00	314368
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10010 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=314368) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$10011 = 4
***end_data_seg
$10012 = 314368
***cur brk
$10013 = 314368


Breakpoint 59, sys_brk (end_data_seg=314368) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$10014 = 4
***cur brk
$10015 = 314368


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10016 = 4
***eax as return
eax            0x4cc00	314368
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10017 = 4
***cur state
$10018 = 0
***cur counter
$10019 = 5


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10020 = 4
***task
$10021 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10022 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10023 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10024 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10025 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10026 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10027 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4d400	316416
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10028 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=316416) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$10029 = 4
***end_data_seg
$10030 = 316416
***cur brk
$10031 = 314368


Breakpoint 59, sys_brk (end_data_seg=316416) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$10032 = 4
***cur brk
$10033 = 316416


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10034 = 4
***eax as return
eax            0x4d400	316416
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10035 = 4
***cur state
$10036 = 0
***cur counter
$10037 = 5


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10038 = 4
***task
$10039 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10040 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10041 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10042 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10043 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10044 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$10045 = 4
***fault address
***cur register edx
edx            0x804d000	134533120
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134533120) at memory.c:367
367	{
---in do_no_page
___pid
$10046 = 4
***address
$10047 = 134533120


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$10048 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$10049 = 4
***fault address
***cur register edx
edx            0x800656c	134243692
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134243692) at memory.c:367
367	{
---in do_no_page
___pid
$10050 = 4
***address
$10051 = 134243692


Breakpoint 103, do_no_page (error_code=4, address=134242304) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$10052 = 4
***page
$10053 = 16543744
***block
$10054 = 25


Breakpoint 42, do_no_page (error_code=4, address=134242304) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$10055 = 4
***nr array$10056 = 848
$10057 = 849
$10058 = 850
$10059 = 851


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$10060 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$10061 = 4
***fault address
***cur register edx
edx            0x8009e70	134258288
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134258288) at memory.c:367
367	{
---in do_no_page
___pid
$10062 = 4
***address
$10063 = 134258288


Breakpoint 103, do_no_page (error_code=4, address=134254592) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$10064 = 4
***page
$10065 = 16539648
***block
$10066 = 37


Breakpoint 42, do_no_page (error_code=4, address=134254592) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$10067 = 4
***nr array$10068 = 860
$10069 = 861
$10070 = 862
$10071 = 863


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$10072 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10073 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4d400	316416
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10074 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=316416) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$10075 = 4
***end_data_seg
$10076 = 316416
***cur brk
$10077 = 316416


Breakpoint 59, sys_brk (end_data_seg=316416) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$10078 = 4
***cur brk
$10079 = 316416


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10080 = 4
***eax as return
eax            0x4d400	316416
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10081 = 4
***cur state
$10082 = 0
***cur counter
$10083 = 5


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10084 = 4
***task
$10085 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10086 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10087 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10088 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10089 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10090 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10091 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4dc00	318464
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10092 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=318464) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$10093 = 4
***end_data_seg
$10094 = 318464
***cur brk
$10095 = 316416


Breakpoint 59, sys_brk (end_data_seg=318464) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$10096 = 4
***cur brk
$10097 = 318464


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10098 = 4
***eax as return
eax            0x4dc00	318464
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10099 = 4
***cur state
$10100 = 0
***cur counter
$10101 = 5


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10102 = 4
***task
$10103 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10104 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10105 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10106 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10107 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10108 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$10109 = 4
***fault address
***cur register edx
edx            0x800a0f4	134258932
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134258932) at memory.c:367
367	{
---in do_no_page
___pid
$10110 = 4
***address
$10111 = 134258932


Breakpoint 103, do_no_page (error_code=4, address=134258688) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$10112 = 4
***page
$10113 = 16535552
***block
$10114 = 41


Breakpoint 42, do_no_page (error_code=4, address=134258688) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$10115 = 4
***nr array$10116 = 864
$10117 = 865
$10118 = 866
$10119 = 867


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$10120 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$10121 = 4
***fault address
***cur register edx
edx            0x800b098	134262936
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134262936) at memory.c:367
367	{
---in do_no_page
___pid
$10122 = 4
***address
$10123 = 134262936


Breakpoint 103, do_no_page (error_code=4, address=134262784) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$10124 = 4
***page
$10125 = 16531456
***block
$10126 = 45


Breakpoint 42, do_no_page (error_code=4, address=134262784) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$10127 = 4
***nr array$10128 = 868
$10129 = 869
$10130 = 870
$10131 = 871


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$10132 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$10133 = 4
***fault address
***cur register edx
edx            0xbffe9fc	201320956
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=201320956) at memory.c:367
367	{
---in do_no_page
___pid
$10134 = 4
***address
$10135 = 201320956


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$10136 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10137 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4dc00	318464
***cur register ecx
ecx            0xc	12
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10138 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=318464) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$10139 = 4
***end_data_seg
$10140 = 318464
***cur brk
$10141 = 318464


Breakpoint 59, sys_brk (end_data_seg=318464) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$10142 = 4
***cur brk
$10143 = 318464


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10144 = 4
***eax as return
eax            0x4dc00	318464
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10145 = 4
***cur state
$10146 = 0
***cur counter
$10147 = 5


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10148 = 4
***task
$10149 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10150 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10151 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10152 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10153 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10154 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10155 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4e400	320512
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10156 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=320512) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$10157 = 4
***end_data_seg
$10158 = 320512
***cur brk
$10159 = 318464


Breakpoint 59, sys_brk (end_data_seg=320512) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$10160 = 4
***cur brk
$10161 = 320512


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10162 = 4
***eax as return
eax            0x4e400	320512
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10163 = 4
***cur state
$10164 = 0
***cur counter
$10165 = 5


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10166 = 4
***task
$10167 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10168 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10169 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10170 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10171 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10172 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$10173 = 4
***fault address
***cur register edx
edx            0x804e00c	134537228
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134537228) at memory.c:367
367	{
---in do_no_page
___pid
$10174 = 4
***address
$10175 = 134537228


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$10176 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$10177 = 4
***fault address
***cur register edx
edx            0x8011dc0	134290880
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134290880) at memory.c:367
367	{
---in do_no_page
___pid
$10178 = 4
***address
$10179 = 134290880


Breakpoint 103, do_no_page (error_code=4, address=134287360) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$10180 = 4
***page
$10181 = 16515072
***block
$10182 = 69


Breakpoint 42, do_no_page (error_code=4, address=134287360) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$10183 = 4
***nr array$10184 = 892
$10185 = 893
$10186 = 894
$10187 = 895


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$10188 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$10189 = 4
***fault address
***cur register edx
edx            0x80135b4	134297012
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134297012) at memory.c:367
367	{
---in do_no_page
___pid
$10190 = 4
***address
$10191 = 134297012


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10192 = 4
***task
$10193 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10194 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10195 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$10196 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 103, do_no_page (error_code=4, address=134295552) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$10197 = 4
***page
$10198 = 16510976
***block
$10199 = 77


Breakpoint 42, do_no_page (error_code=4, address=134295552) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$10200 = 4
***nr array$10201 = 900
$10202 = 901
$10203 = 902
$10204 = 903


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$10205 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$10206 = 4
***fault address
***cur register edx
edx            0x8014a4c	134302284
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134302284) at memory.c:367
367	{
---in do_no_page
___pid
$10207 = 4
***address
$10208 = 134302284


Breakpoint 103, do_no_page (error_code=4, address=134299648) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$10209 = 4
***page
$10210 = 16502784
***block
$10211 = 81


Breakpoint 42, do_no_page (error_code=4, address=134299648) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$10212 = 4
***nr array$10213 = 904
$10214 = 905
$10215 = 906
$10216 = 907


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$10217 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$10218 = 4
***fault address
***cur register edx
edx            0x8038a68	134449768
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134449768) at memory.c:367
367	{
---in do_no_page
___pid
$10219 = 4
***address
$10220 = 134449768


Breakpoint 103, do_no_page (error_code=4, address=134447104) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$10221 = 4
***page
$10222 = 16498688
***block
$10223 = 225


Breakpoint 42, do_no_page (error_code=4, address=134447104) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$10224 = 4
***nr array$10225 = 1048
$10226 = 1049
$10227 = 1050
$10228 = 1051


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$10229 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10230 = 4
***task
$10231 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10232 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10233 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10234 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10235 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10236 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10237 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4e400	320512
***cur register ecx
ecx            0x4accc	306380
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10238 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=320512) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$10239 = 4
***end_data_seg
$10240 = 320512
***cur brk
$10241 = 320512


Breakpoint 59, sys_brk (end_data_seg=320512) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$10242 = 4
***cur brk
$10243 = 320512


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10244 = 4
***eax as return
eax            0x4e400	320512
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10245 = 4
***cur state
$10246 = 0
***cur counter
$10247 = 3


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10248 = 4
***task
$10249 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10250 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10251 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10252 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10253 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10254 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10255 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4ec00	322560
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10256 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=322560) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$10257 = 4
***end_data_seg
$10258 = 322560
***cur brk
$10259 = 320512


Breakpoint 59, sys_brk (end_data_seg=322560) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$10260 = 4
***cur brk
$10261 = 322560


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10262 = 4
***eax as return
eax            0x4ec00	322560
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10263 = 4
***cur state
$10264 = 0
***cur counter
$10265 = 3


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10266 = 4
***task
$10267 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10268 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10269 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10270 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10271 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10272 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$10273 = 4
***fault address
***cur register edx
edx            0x801d848	134338632
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134338632) at memory.c:367
367	{
---in do_no_page
___pid
$10274 = 4
***address
$10275 = 134338632


Breakpoint 103, do_no_page (error_code=4, address=134336512) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$10276 = 4
***page
$10277 = 16494592
***block
$10278 = 117


Breakpoint 42, do_no_page (error_code=4, address=134336512) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$10279 = 4
***nr array$10280 = 940
$10281 = 941
$10282 = 942
$10283 = 943


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10284 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2be4c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2be4c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16494592, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134336512) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10285 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10286 = 4
***drive
$10287 = 0
***head
$10288 = 1


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10289 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10290 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2be70) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2be70) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16494592, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134336512) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10291 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10292 = 4
***drive
$10293 = 0
***head
$10294 = 1


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10295 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10296 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2be94) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2be94) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16494592, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134336512) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10297 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10298 = 4
***drive
$10299 = 0
***head
$10300 = 1


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10301 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10302 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2beb8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2beb8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16494592, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134336512) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10303 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10304 = 4
***drive
$10305 = 0
***head
$10306 = 1


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10307 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$10308 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10309 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0xc	12
***cur register ebx
ebx            0x4d60c	316940
***cur register ecx
ecx            0x9	9
***cur register edx
edx            0x4d60c	316940


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10310 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10311 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bedc) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bedc) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=23) at buffer.c:278
#5  0x0000d38c in read_inode (inode=0x276c0 <inode_table+224>) at inode.c:305
#6  0x0000d2e2 in iget (dev=769, nr=326) at inode.c:290
#7  0x00011870 in get_dir (pathname=0x4d611 "") at namei.c:267
#8  0x000118a6 in dir_namei (pathname=0x4d60c "", namelen=0xffdf80, 
    name=0xffdf84) at namei.c:285
#9  0x00011943 in namei (pathname=0x4d60c "") at namei.c:311
#10 0x0000bbf7 in sys_chdir (filename=0x4d60c "") at open.c:79
#11 0x0000793f in system_call () at system_call.s:94
#12 0x0004d60c in ?? ()


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10312 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10313 = 4
***drive
$10314 = 0
***head
$10315 = 1


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10316 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10317 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bf00) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bf00) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=9861) at buffer.c:278
#5  0x00011303 in find_entry (dir=0xffdf7c, name=0x4d611 "", namelen=4, 
    res_dir=0xffdf78) at namei.c:129
#6  0x00011986 in namei (pathname=0x4d60c "") at namei.c:315
#7  0x0000bbf7 in sys_chdir (filename=0x4d60c "") at open.c:79
#8  0x0000793f in system_call () at system_call.s:94
#9  0x0004d60c in ?? ()


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10318 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10319 = 4
***drive
$10320 = 0
***head
$10321 = 7


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10322 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10323 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bf24) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bf24) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=25) at buffer.c:278
#5  0x0000d38c in read_inode (inode=0x276f8 <inode_table+280>) at inode.c:305
#6  0x0000d2e2 in iget (dev=769, nr=406) at inode.c:290
#7  0x000119fa in namei (pathname=0x4d60c "") at namei.c:324
#8  0x0000bbf7 in sys_chdir (filename=0x4d60c "") at open.c:79
#9  0x0000793f in system_call () at system_call.s:94
#10 0x0004d60c in ?? ()


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10324 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10325 = 4
***drive
$10326 = 0
***head
$10327 = 1


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10328 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10329 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10330 = 4
***cur state
$10331 = 0
***cur counter
$10332 = 3


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10333 = 4
***task
$10334 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10335 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10336 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10337 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10338 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10339 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10340 = 4
***task
$10341 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10342 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10343 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10344 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10345 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10346 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10347 = 4
***task
$10348 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10349 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10350 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10351 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10352 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10353 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$10354 = 4
***fault address
***cur register edx
edx            0x8026fd0	134377424
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134377424) at memory.c:367
367	{
---in do_no_page
___pid
$10355 = 4
***address
$10356 = 134377424


Breakpoint 103, do_no_page (error_code=4, address=134373376) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$10357 = 4
***page
$10358 = 16490496
***block
$10359 = 153


Breakpoint 42, do_no_page (error_code=4, address=134373376) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$10360 = 4
***nr array$10361 = 976
$10362 = 977
$10363 = 978
$10364 = 979


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10365 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bf48) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bf48) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16490496, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134373376) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10366 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10367 = 4
***drive
$10368 = 0
***head
$10369 = 3


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10370 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10371 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bf6c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bf6c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16490496, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134373376) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10372 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10373 = 4
***drive
$10374 = 0
***head
$10375 = 3


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10376 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10377 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bf90) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bf90) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16490496, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134373376) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10378 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10379 = 4
***drive
$10380 = 0
***head
$10381 = 3


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10382 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10383 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bfb4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bfb4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16490496, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134373376) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10384 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10385 = 4
***drive
$10386 = 0
***head
$10387 = 3


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10388 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$10389 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$10390 = 4
***fault address
***cur register edx
edx            0x8027034	134377524
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134377524) at memory.c:367
367	{
---in do_no_page
___pid
$10391 = 4
***address
$10392 = 134377524


Breakpoint 103, do_no_page (error_code=4, address=134377472) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$10393 = 4
***page
$10394 = 16486400
***block
$10395 = 157


Breakpoint 42, do_no_page (error_code=4, address=134377472) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$10396 = 4
***nr array$10397 = 980
$10398 = 981
$10399 = 982
$10400 = 983


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$10401 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007538 in do_timer (cpl=3) at sched.c:336
#2  0x00007a21 in timer_interrupt () at system_call.s:195
#3  0x00000003 in startup_32 () at head.s:19


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$10402 = 1
***loop pid
$10403 = 3
***loop counter
$10404 = 9


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$10405 = 0
***loop pid
$10406 = 4
***loop counter
$10407 = 0


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$10408 = 1
***loop pid
$10409 = 1
***loop counter
$10410 = 21


Breakpoint 41, schedule () at sched.c:138
138					(*p)->counter = ((*p)->counter >> 1) +
---in schedule
***in loop3
***loop pid
$10411 = 3
***loop counter
$10412 = 9
***loop priority
$10413 = 15
***compute new counter


Breakpoint 41, schedule () at sched.c:138
138					(*p)->counter = ((*p)->counter >> 1) +
---in schedule
***in loop3
***loop pid
$10414 = 4
***loop counter
$10415 = 0
***loop priority
$10416 = 15
***compute new counter


Breakpoint 41, schedule () at sched.c:138
138					(*p)->counter = ((*p)->counter >> 1) +
---in schedule
***in loop3
***loop pid
$10417 = 1
***loop counter
$10418 = 21
***loop priority
$10419 = 15
***compute new counter


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$10420 = 1
***loop pid
$10421 = 3
***loop counter
$10422 = 19


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$10423 = 0
***loop pid
$10424 = 4
***loop counter
$10425 = 15


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$10426 = 1
***loop pid
$10427 = 1
***loop counter
$10428 = 25


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$10429 = 4


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10430 = 4
***task
$10431 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10432 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10433 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10434 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10435 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10436 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10437 = 4
***task
$10438 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10439 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10440 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10441 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10442 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10443 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$10444 = 4
***fault address
***cur register edx
edx            0x8029e2c	134389292
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134389292) at memory.c:367
367	{
---in do_no_page
___pid
$10445 = 4
***address
$10446 = 134389292


Breakpoint 103, do_no_page (error_code=4, address=134385664) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$10447 = 4
***page
$10448 = 16482304
***block
$10449 = 165


Breakpoint 42, do_no_page (error_code=4, address=134385664) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$10450 = 4
***nr array$10451 = 988
$10452 = 989
$10453 = 990
$10454 = 991


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10455 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bfd8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bfd8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16482304, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134385664) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10456 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10457 = 4
***drive
$10458 = 0
***head
$10459 = 4


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10460 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10461 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2bffc) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2bffc) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16482304, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134385664) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10462 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10463 = 4
***drive
$10464 = 0
***head
$10465 = 4


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10466 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10467 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c020) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c020) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16482304, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134385664) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10468 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10469 = 4
***drive
$10470 = 0
***head
$10471 = 4


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10472 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10473 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c044) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c044) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16482304, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134385664) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10474 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10475 = 4
***drive
$10476 = 0
***head
$10477 = 4


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10478 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$10479 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$10480 = 4
***fault address
***cur register edx
edx            0x802a00a	134389770
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134389770) at memory.c:367
367	{
---in do_no_page
___pid
$10481 = 4
***address
$10482 = 134389770


Breakpoint 103, do_no_page (error_code=4, address=134389760) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$10483 = 4
***page
$10484 = 16478208
***block
$10485 = 169


Breakpoint 42, do_no_page (error_code=4, address=134389760) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$10486 = 4
***nr array$10487 = 992
$10488 = 993
$10489 = 994
$10490 = 995


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10491 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c068) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c068) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16478208, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134389760) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10492 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10493 = 4
***drive
$10494 = 0
***head
$10495 = 4


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10496 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10497 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c08c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c08c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16478208, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134389760) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10498 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10499 = 4
***drive
$10500 = 0
***head
$10501 = 4


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10502 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10503 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c0b0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c0b0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16478208, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134389760) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10504 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10505 = 4
***drive
$10506 = 0
***head
$10507 = 4


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10508 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10509 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c0d4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c0d4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16478208, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134389760) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10510 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10511 = 4
***drive
$10512 = 0
***head
$10513 = 4


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10514 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$10515 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10516 = 4
***task
$10517 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10518 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10519 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10520 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10521 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10522 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$10523 = 4
***fault address
***cur register edx
edx            0x802b8d0	134396112
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134396112) at memory.c:367
367	{
---in do_no_page
___pid
$10524 = 4
***address
$10525 = 134396112


Breakpoint 103, do_no_page (error_code=4, address=134393856) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$10526 = 4
***page
$10527 = 16474112
***block
$10528 = 173


Breakpoint 42, do_no_page (error_code=4, address=134393856) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$10529 = 4
***nr array$10530 = 996
$10531 = 997
$10532 = 998
$10533 = 999


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10534 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c0f8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c0f8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16474112, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134393856) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10535 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10536 = 4
***drive
$10537 = 0
***head
$10538 = 4


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10539 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10540 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c11c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c11c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16474112, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134393856) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10541 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10542 = 4
***drive
$10543 = 0
***head
$10544 = 4


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10545 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10546 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c140) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c140) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16474112, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134393856) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10547 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10548 = 4
***drive
$10549 = 0
***head
$10550 = 4


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10551 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10552 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c164) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c164) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16474112, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134393856) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10553 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10554 = 4
***drive
$10555 = 0
***head
$10556 = 4


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10557 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$10558 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10559 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3c	60
***cur register ebx
ebx            0x36	54
***cur register ecx
ecx            0x36	54
***cur register edx
edx            0x36	54


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10560 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10561 = 4
***eax as return
eax            0x12	18
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10562 = 4
***cur state
$10563 = 0
***cur counter
$10564 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10565 = 4
***task
$10566 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10567 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10568 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10569 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10570 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10571 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10572 = 4
***task
$10573 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10574 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10575 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10576 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10577 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10578 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10579 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x46c8c	289932
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x135	309


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10580 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 65, sys_open (filename=0x46c8c "", flag=0, mode=257) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$10581 = 4
***open filename
$10582 = 0 '\000'
***fd
$10583 = 3


Breakpoint 66, sys_open (filename=0x46c8c "", flag=0, mode=257) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$10584 = 4
***current->filp[fd]=f


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10585 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c188) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c188) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=14045) at buffer.c:278
#5  0x00011303 in find_entry (dir=0xffdf78, name=0x46c96 "\004", namelen=13, 
    res_dir=0xffdf74) at namei.c:129
#6  0x00011b22 in open_namei (pathname=0x46c8c "", flag=0, mode=33025, 
    res_inode=0xffdfb4) at namei.c:360
#7  0x0000bf7b in sys_open (filename=0x46c8c "", flag=0, mode=257)
    at open.c:157
#8  0x0000793f in system_call () at system_call.s:94
#9  0x00046c8c in ?? ()


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10586 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10587 = 4
***drive
$10588 = 0
***head
$10589 = 3


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10590 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10591 = 4
***eax as return
eax            0xfffffffe	-2
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10592 = 4
***cur state
$10593 = 0
***cur counter
$10594 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10595 = 4
***task
$10596 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10597 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10598 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10599 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10600 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10601 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10602 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x46c8c	289932
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x143	323


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10603 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 65, sys_open (filename=0x46c8c "", flag=0, mode=321) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$10604 = 4
***open filename
$10605 = 0 '\000'
***fd
$10606 = 3


Breakpoint 66, sys_open (filename=0x46c8c "", flag=0, mode=321) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$10607 = 4
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10608 = 4
***eax as return
eax            0xfffffffe	-2
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10609 = 4
***cur state
$10610 = 0
***cur counter
$10611 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10612 = 4
***task
$10613 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10614 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10615 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10616 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10617 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10618 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10619 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x4afcc	307148
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x125	293


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10620 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 65, sys_open (filename=0x4afcc "", flag=0, mode=257) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$10621 = 4
***open filename
$10622 = 0 '\000'
***fd
$10623 = 3


Breakpoint 66, sys_open (filename=0x4afcc "", flag=0, mode=257) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$10624 = 4
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10625 = 4
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10626 = 4
***cur state
$10627 = 0
***cur counter
$10628 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10629 = 4
***task
$10630 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10631 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10632 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10633 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10634 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10635 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10636 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1c	28
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fffe90	67108496
***cur register edx
edx            0x101	257


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10637 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$10638 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fffe90, size=-336) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x278b8 <inode_table+728>, statbuf=0x3fffe90)
    at stat.c:20
#3  0x0000f8d4 in sys_fstat (fd=3, statbuf=0x3fffe90) at stat.c:54
#4  0x0000793f in system_call () at system_call.s:94
#5  0x00000003 in startup_32 () at head.s:19
***address
$10639 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10640 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10641 = 4
***cur state
$10642 = 0
***cur counter
$10643 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10644 = 4
***task
$10645 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10646 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10647 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10648 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10649 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10650 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10651 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x4b00c	307212
***cur register edx
edx            0x11	17


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10652 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=134524928) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$10653 = 4
***call stack
#0  write_verify (address=134524928) at memory.c:267
#1  0x000085cd in verify_area (addr=0x4b00c, size=-4067) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x4b00c "", count=17) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$10654 = 134524928


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10655 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c1ac) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c1ac) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=14046) at buffer.c:278
#5  0x0000f3ad in file_read (inode=0x278b8 <inode_table+728>, 
    filp=0x29780 <file_table+32>, buf=0x4b00c "", count=17) at file_dev.c:26
#6  0x0000c524 in sys_read (fd=3, buf=0x4b00c "", count=17) at read_write.c:77
#7  0x0000793f in system_call () at system_call.s:94
#8  0x00000003 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10656 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10657 = 4
***drive
$10658 = 0
***head
$10659 = 3


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10660 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10661 = 4
***eax as return
eax            0x11	17
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10662 = 4
***cur state
$10663 = 0
***cur counter
$10664 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10665 = 4
***task
$10666 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10667 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10668 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10669 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10670 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10671 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10672 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x4b00c	307212
***cur register edx
edx            0x2	2


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10673 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$10674 = 4
***fd
$10675 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10676 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10677 = 4
***cur state
$10678 = 0
***cur counter
$10679 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10680 = 4
***task
$10681 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10682 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10683 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10684 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10685 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10686 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10687 = 4
***task
$10688 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10689 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10690 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10691 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10692 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10693 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10694 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x4b98c	309644
***cur register ecx
ecx            0x3fffecc	67108556
***cur register edx
edx            0x4b9ac	309676


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10695 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10696 = 4
***eax as return
eax            0xfffffffe	-2
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10697 = 4
***cur state
$10698 = 0
***cur counter
$10699 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10700 = 4
***task
$10701 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10702 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10703 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10704 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10705 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10706 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10707 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0xd	13
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0xe	14
***cur register edx
edx            0x4b9cc	309708


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10708 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10709 = 4
***eax as return
eax            0x5fa97090	1604939920
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10710 = 4
***cur state
$10711 = 0
***cur counter
$10712 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10713 = 4
***task
$10714 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10715 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10716 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10717 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10718 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10719 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 85, write_intr () at hd.c:271
271		if (win_result()) {
---in write_intr
___pid
$10720 = 4
***sectors num to write
$10721 = 0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10722 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x4b04c	307276
***cur register ecx
ecx            0x3fffe68	67108456
***cur register edx
edx            0x4b04c	307276


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10723 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$10724 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fffe68, size=-376) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27998 <inode_table+952>, statbuf=0x3fffe68)
    at stat.c:20
#3  0x0000f85b in sys_stat (filename=0x4b04c "", statbuf=0x3fffe68)
    at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x0004b04c in ?? ()
***address
$10725 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10726 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10727 = 4
***cur state
$10728 = 0
***cur counter
$10729 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10730 = 4
***task
$10731 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10732 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10733 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10734 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10735 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10736 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10737 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x4b04c	307276
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x1b6	438


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10738 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 65, sys_open (filename=0x4b04c "", flag=0, mode=384) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$10739 = 4
***open filename
$10740 = 0 '\000'
***fd
$10741 = 3


Breakpoint 66, sys_open (filename=0x4b04c "", flag=0, mode=384) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$10742 = 4
***current->filp[fd]=f


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10743 = 4
***task
$10744 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10745 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10746 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$10747 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10748 = 4
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10749 = 4
***cur state
$10750 = 0
***cur counter
$10751 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10752 = 4
***task
$10753 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10754 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10755 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10756 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10757 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10758 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10759 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x4ec00	322560
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10760 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=322560) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$10761 = 4
***end_data_seg
$10762 = 322560
***cur brk
$10763 = 322560


Breakpoint 59, sys_brk (end_data_seg=322560) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$10764 = 4
***cur brk
$10765 = 322560


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10766 = 4
***eax as return
eax            0x4ec00	322560
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10767 = 4
***cur state
$10768 = 0
***cur counter
$10769 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10770 = 4
***task
$10771 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10772 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10773 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10774 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10775 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10776 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10777 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x50c00	330752
***cur register ecx
ecx            0xd	13
***cur register edx
edx            0x2000	8192


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10778 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=330752) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$10779 = 4
***end_data_seg
$10780 = 330752
***cur brk
$10781 = 322560


Breakpoint 59, sys_brk (end_data_seg=330752) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$10782 = 4
***cur brk
$10783 = 330752


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10784 = 4
***eax as return
eax            0x50c00	330752
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10785 = 4
***cur state
$10786 = 0
***cur counter
$10787 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10788 = 4
***task
$10789 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10790 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10791 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10792 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10793 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10794 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$10795 = 4
***fault address
***cur register edx
edx            0x804fc54	134544468
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134544468) at memory.c:367
367	{
---in do_no_page
___pid
$10796 = 4
***address
$10797 = 134544468


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$10798 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10799 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x4ec0c	322572
***cur register edx
edx            0x1047	4167


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10800 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=134537216) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$10801 = 4
***call stack
#0  write_verify (address=134537216) at memory.c:267
#1  0x000085cd in verify_area (addr=0x4ec0c, size=3155) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x4ec0c "", count=4167)
    at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$10802 = 134537216


Breakpoint 91, write_verify (address=134541312) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$10803 = 4
***call stack
#0  write_verify (address=134541312) at memory.c:267
#1  0x000085cd in verify_area (addr=0x4ec0c, size=-941) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x4ec0c "", count=4167)
    at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$10804 = 134541312


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10805 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c1d0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c1d0) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=660) at buffer.c:278
#5  0x0000f3ad in file_read (inode=0x27998 <inode_table+952>, 
    filp=0x29780 <file_table+32>, buf=0x4ec0c "", count=4167) at file_dev.c:26
#6  0x0000c524 in sys_read (fd=3, buf=0x4ec0c "", count=4167)
    at read_write.c:77
#7  0x0000793f in system_call () at system_call.s:94
#8  0x00000003 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10806 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10807 = 4
***drive
$10808 = 0
***head
$10809 = 2


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10810 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10811 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c1f4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c1f4) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=703) at buffer.c:278
#5  0x0000f3ad in file_read (inode=0x27998 <inode_table+952>, 
    filp=0x29780 <file_table+32>, buf=0x4f00c "", count=4167) at file_dev.c:26
#6  0x0000c524 in sys_read (fd=3, buf=0x4ec0c "", count=4167)
    at read_write.c:77
#7  0x0000793f in system_call () at system_call.s:94
#8  0x00000003 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10812 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10813 = 4
***drive
$10814 = 0
***head
$10815 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10816 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10817 = 4
***task
$10818 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10819 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10820 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$10821 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10822 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c218) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c218) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=704) at buffer.c:278
#5  0x0000f3ad in file_read (inode=0x27998 <inode_table+952>, 
    filp=0x29780 <file_table+32>, buf=0x4f40c "", count=4167) at file_dev.c:26
#6  0x0000c524 in sys_read (fd=3, buf=0x4ec0c "", count=4167)
    at read_write.c:77
#7  0x0000793f in system_call () at system_call.s:94
#8  0x00000003 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10823 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10824 = 4
***drive
$10825 = 0
***head
$10826 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10827 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10828 = 4
***task
$10829 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10830 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10831 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$10832 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10833 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c23c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c23c) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=705) at buffer.c:278
#5  0x0000f3ad in file_read (inode=0x27998 <inode_table+952>, 
    filp=0x29780 <file_table+32>, buf=0x4f80c "", count=4167) at file_dev.c:26
#6  0x0000c524 in sys_read (fd=3, buf=0x4ec0c "", count=4167)
    at read_write.c:77
#7  0x0000793f in system_call () at system_call.s:94
#8  0x00000003 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10834 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10835 = 4
***drive
$10836 = 0
***head
$10837 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10838 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10839 = 4
***task
$10840 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10841 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10842 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$10843 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10844 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c260) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c260) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=706) at buffer.c:278
#5  0x0000f3ad in file_read (inode=0x27998 <inode_table+952>, 
    filp=0x29780 <file_table+32>, buf=0x4fc0c "", count=4167) at file_dev.c:26
#6  0x0000c524 in sys_read (fd=3, buf=0x4ec0c "", count=4167)
    at read_write.c:77
#7  0x0000793f in system_call () at system_call.s:94
#8  0x00000003 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$10845 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$10846 = 4
***drive
$10847 = 0
***head
$10848 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$10849 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10850 = 4
***eax as return
eax            0x1047	4167
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10851 = 4
***cur state
$10852 = 0
***cur counter
$10853 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10854 = 4
***task
$10855 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10856 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10857 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10858 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10859 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10860 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10861 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x4ec0c	322572
***cur register edx
edx            0x1047	4167


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10862 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$10863 = 4
***fd
$10864 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10865 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10866 = 4
***cur state
$10867 = 0
***cur counter
$10868 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10869 = 4
***task
$10870 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10871 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10872 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10873 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10874 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10875 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10876 = 4
***task
$10877 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10878 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10879 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10880 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10881 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10882 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10883 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x4b04c	307276
***cur register ecx
ecx            0x241	577
***cur register edx
edx            0x1b6	438


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10884 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 65, sys_open (filename=0x4b04c "", flag=577, mode=384) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$10885 = 4
***open filename
$10886 = 0 '\000'
***fd
$10887 = 3


Breakpoint 66, sys_open (filename=0x4b04c "", flag=577, mode=384) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$10888 = 4
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10889 = 4
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10890 = 4
***cur state
$10891 = 0
***cur counter
$10892 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10893 = 4
***task
$10894 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10895 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10896 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10897 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10898 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10899 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10900 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x4ec0c	322572
***cur register edx
edx            0x1047	4167


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10901 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=3, buf=0x4ec0c "", count=4167) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$10902 = 4


Breakpoint 68, sys_write (fd=3, buf=0x4ec0c "", count=4167) at read_write.c:100
100			return file_write(inode,file,buf,count);
---in sys_write
___pid
$10903 = 4
***call file write


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10904 = 4
***task
$10905 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10906 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10907 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$10908 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10909 = 4
***task
$10910 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10911 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10912 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$10913 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10914 = 4
***task
$10915 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10916 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10917 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$10918 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10919 = 4
***eax as return
eax            0x1047	4167
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10920 = 4
***cur state
$10921 = 0
***cur counter
$10922 = 3


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10923 = 4
***task
$10924 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10925 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10926 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10927 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10928 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10929 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10930 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x4ec0c	322572
***cur register edx
edx            0x1047	4167


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10931 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$10932 = 4
***fd
$10933 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10934 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10935 = 4
***cur state
$10936 = 0
***cur counter
$10937 = 3


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10938 = 4
***task
$10939 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10940 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10941 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10942 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10943 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10944 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10945 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x4adcc	306636
***cur register ecx
ecx            0x3fffee4	67108580
***cur register edx
edx            0xcfe	3326


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10946 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$10947 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fffee4, size=-252) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27998 <inode_table+952>, statbuf=0x3fffee4)
    at stat.c:20
#3  0x0000f85b in sys_stat (filename=0x4adcc "", statbuf=0x3fffee4)
    at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x0004adcc in ?? ()
***address
$10948 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10949 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10950 = 4
***cur state
$10951 = 0
***cur counter
$10952 = 3


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10953 = 4
***task
$10954 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10955 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10956 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10957 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10958 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10959 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10960 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x4b04c	307276
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x1b6	438


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10961 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 65, sys_open (filename=0x4b04c "", flag=0, mode=384) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$10962 = 4
***open filename
$10963 = 0 '\000'
***fd
$10964 = 3


Breakpoint 66, sys_open (filename=0x4b04c "", flag=0, mode=384) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$10965 = 4
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10966 = 4
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10967 = 4
***cur state
$10968 = 0
***cur counter
$10969 = 3


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10970 = 4
***task
$10971 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10972 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10973 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10974 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10975 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10976 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10977 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x4b04c	307276
***cur register ecx
ecx            0x3fffe94	67108500
***cur register edx
edx            0x180	384


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10978 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10979 = 4
***task
$10980 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10981 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10982 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$10983 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$10984 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fffe94, size=-332) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27998 <inode_table+952>, statbuf=0x3fffe94)
    at stat.c:20
#3  0x0000f85b in sys_stat (filename=0x4b04c "", statbuf=0x3fffe94)
    at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x0004b04c in ?? ()
***address
$10985 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$10986 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$10987 = 4
***cur state
$10988 = 0
***cur counter
$10989 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$10990 = 4
***task
$10991 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$10992 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$10993 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$10994 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$10995 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$10996 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$10997 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x4ec0c	322572
***cur register edx
edx            0x1047	4167


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$10998 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=134537216) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$10999 = 4
***call stack
#0  write_verify (address=134537216) at memory.c:267
#1  0x000085cd in verify_area (addr=0x4ec0c, size=3155) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x4ec0c "", count=4167)
    at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$11000 = 134537216


Breakpoint 91, write_verify (address=134541312) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$11001 = 4
***call stack
#0  write_verify (address=134541312) at memory.c:267
#1  0x000085cd in verify_area (addr=0x4ec0c, size=-941) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x4ec0c "", count=4167)
    at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$11002 = 134541312


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11003 = 4
***task
$11004 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11005 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11006 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$11007 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11008 = 4
***task
$11009 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11010 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11011 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$11012 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11013 = 4
***task
$11014 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11015 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11016 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$11017 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11018 = 4
***eax as return
eax            0x1047	4167
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11019 = 4
***cur state
$11020 = 0
***cur counter
$11021 = 0


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$11022 = 4


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00001047 in pg0 () at head.s:109
#3  0x00000003 in startup_32 () at head.s:19


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$11023 = 1
***loop pid
$11024 = 3
***loop counter
$11025 = 19


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$11026 = 0
***loop pid
$11027 = 4
***loop counter
$11028 = 0


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$11029 = 1
***loop pid
$11030 = 1
***loop counter
$11031 = 25


Breakpoint 41, schedule () at sched.c:138
138					(*p)->counter = ((*p)->counter >> 1) +
---in schedule
***in loop3
***loop pid
$11032 = 3
***loop counter
$11033 = 19
***loop priority
$11034 = 15
***compute new counter


Breakpoint 41, schedule () at sched.c:138
138					(*p)->counter = ((*p)->counter >> 1) +
---in schedule
***in loop3
***loop pid
$11035 = 4
***loop counter
$11036 = 0
***loop priority
$11037 = 15
***compute new counter


Breakpoint 41, schedule () at sched.c:138
138					(*p)->counter = ((*p)->counter >> 1) +
---in schedule
***in loop3
***loop pid
$11038 = 1
***loop counter
$11039 = 25
***loop priority
$11040 = 15
***compute new counter


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$11041 = 1
***loop pid
$11042 = 3
***loop counter
$11043 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$11044 = 0
***loop pid
$11045 = 4
***loop counter
$11046 = 15


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$11047 = 1
***loop pid
$11048 = 1
***loop counter
$11049 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$11050 = 4


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11051 = 4
***task
$11052 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11053 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11054 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11055 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11056 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11057 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11058 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x4ec0c	322572
***cur register edx
edx            0x1047	4167


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11059 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$11060 = 4
***fd
$11061 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11062 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11063 = 4
***cur state
$11064 = 0
***cur counter
$11065 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11066 = 4
***task
$11067 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11068 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11069 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11070 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11071 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11072 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11073 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x50c00	330752
***cur register ecx
ecx            0x3	3
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11074 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=330752) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11075 = 4
***end_data_seg
$11076 = 330752
***cur brk
$11077 = 330752


Breakpoint 59, sys_brk (end_data_seg=330752) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11078 = 4
***cur brk
$11079 = 330752


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11080 = 4
***eax as return
eax            0x50c00	330752
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11081 = 4
***cur state
$11082 = 0
***cur counter
$11083 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11084 = 4
***task
$11085 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11086 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11087 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11088 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11089 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11090 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11091 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x51400	332800
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11092 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=332800) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11093 = 4
***end_data_seg
$11094 = 332800
***cur brk
$11095 = 330752


Breakpoint 59, sys_brk (end_data_seg=332800) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11096 = 4
***cur brk
$11097 = 332800


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11098 = 4
***eax as return
eax            0x51400	332800
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11099 = 4
***cur state
$11100 = 0
***cur counter
$11101 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11102 = 4
***task
$11103 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11104 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11105 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11106 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11107 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11108 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$11109 = 4
***fault address
***cur register edx
edx            0x8050c00	134548480
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134548480) at memory.c:367
367	{
---in do_no_page
___pid
$11110 = 4
***address
$11111 = 134548480


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$11112 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$11113 = 4
***fault address
***cur register edx
edx            0x8051000	134549504
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134549504) at memory.c:367
367	{
---in do_no_page
___pid
$11114 = 4
***address
$11115 = 134549504


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$11116 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11117 = 4
***task
$11118 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11119 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11120 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11121 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11122 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11123 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11124 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x51400	332800
***cur register ecx
ecx            0x9	9
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11125 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=332800) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11126 = 4
***end_data_seg
$11127 = 332800
***cur brk
$11128 = 332800


Breakpoint 59, sys_brk (end_data_seg=332800) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11129 = 4
***cur brk
$11130 = 332800


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11131 = 4
***eax as return
eax            0x51400	332800
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11132 = 4
***cur state
$11133 = 0
***cur counter
$11134 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11135 = 4
***task
$11136 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11137 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11138 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11139 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11140 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11141 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11142 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x51c00	334848
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11143 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=334848) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11144 = 4
***end_data_seg
$11145 = 334848
***cur brk
$11146 = 332800


Breakpoint 59, sys_brk (end_data_seg=334848) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11147 = 4
***cur brk
$11148 = 334848


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11149 = 4
***eax as return
eax            0x51c00	334848
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11150 = 4
***cur state
$11151 = 0
***cur counter
$11152 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11153 = 4
***task
$11154 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11155 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11156 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11157 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11158 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11159 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11160 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x51c00	334848
***cur register ecx
ecx            0x17	23
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11161 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=334848) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11162 = 4
***end_data_seg
$11163 = 334848
***cur brk
$11164 = 334848


Breakpoint 59, sys_brk (end_data_seg=334848) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11165 = 4
***cur brk
$11166 = 334848


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11167 = 4
***eax as return
eax            0x51c00	334848
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11168 = 4
***cur state
$11169 = 0
***cur counter
$11170 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11171 = 4
***task
$11172 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11173 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11174 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11175 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11176 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11177 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11178 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x52400	336896
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11179 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=336896) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11180 = 4
***end_data_seg
$11181 = 336896
***cur brk
$11182 = 334848


Breakpoint 59, sys_brk (end_data_seg=336896) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11183 = 4
***cur brk
$11184 = 336896


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11185 = 4
***eax as return
eax            0x52400	336896
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11186 = 4
***cur state
$11187 = 0
***cur counter
$11188 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11189 = 4
***task
$11190 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11191 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11192 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11193 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11194 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11195 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$11196 = 4
***fault address
***cur register edx
edx            0x8052000	134553600
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134553600) at memory.c:367
367	{
---in do_no_page
___pid
$11197 = 4
***address
$11198 = 134553600


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$11199 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11200 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x52400	336896
***cur register ecx
ecx            0x2	2
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11201 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=336896) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11202 = 4
***end_data_seg
$11203 = 336896
***cur brk
$11204 = 336896


Breakpoint 59, sys_brk (end_data_seg=336896) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11205 = 4
***cur brk
$11206 = 336896


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11207 = 4
***eax as return
eax            0x52400	336896
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11208 = 4
***cur state
$11209 = 0
***cur counter
$11210 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11211 = 4
***task
$11212 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11213 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11214 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11215 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11216 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11217 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11218 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x52c00	338944
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11219 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=338944) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11220 = 4
***end_data_seg
$11221 = 338944
***cur brk
$11222 = 336896


Breakpoint 59, sys_brk (end_data_seg=338944) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11223 = 4
***cur brk
$11224 = 338944


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11225 = 4
***eax as return
eax            0x52c00	338944
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11226 = 4
***cur state
$11227 = 0
***cur counter
$11228 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11229 = 4
***task
$11230 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11231 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11232 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11233 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11234 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11235 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11236 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x52c00	338944
***cur register ecx
ecx            0x5	5
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11237 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=338944) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11238 = 4
***end_data_seg
$11239 = 338944
***cur brk
$11240 = 338944


Breakpoint 59, sys_brk (end_data_seg=338944) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11241 = 4
***cur brk
$11242 = 338944


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11243 = 4
***eax as return
eax            0x52c00	338944
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11244 = 4
***cur state
$11245 = 0
***cur counter
$11246 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11247 = 4
***task
$11248 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11249 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11250 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11251 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11252 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11253 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11254 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x53400	340992
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11255 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=340992) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11256 = 4
***end_data_seg
$11257 = 340992
***cur brk
$11258 = 338944


Breakpoint 59, sys_brk (end_data_seg=340992) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11259 = 4
***cur brk
$11260 = 340992


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11261 = 4
***eax as return
eax            0x53400	340992
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11262 = 4
***cur state
$11263 = 0
***cur counter
$11264 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11265 = 4
***task
$11266 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11267 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11268 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11269 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11270 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11271 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$11272 = 4
***fault address
***cur register edx
edx            0x8053000	134557696
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134557696) at memory.c:367
367	{
---in do_no_page
___pid
$11273 = 4
***address
$11274 = 134557696


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$11275 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11276 = 4
***task
$11277 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11278 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11279 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11280 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11281 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11282 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11283 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x53400	340992
***cur register ecx
ecx            0x11	17
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11284 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=340992) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11285 = 4
***end_data_seg
$11286 = 340992
***cur brk
$11287 = 340992


Breakpoint 59, sys_brk (end_data_seg=340992) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11288 = 4
***cur brk
$11289 = 340992


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11290 = 4
***eax as return
eax            0x53400	340992
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11291 = 4
***cur state
$11292 = 0
***cur counter
$11293 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11294 = 4
***task
$11295 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11296 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11297 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11298 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11299 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11300 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11301 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x53c00	343040
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11302 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=343040) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11303 = 4
***end_data_seg
$11304 = 343040
***cur brk
$11305 = 340992


Breakpoint 59, sys_brk (end_data_seg=343040) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11306 = 4
***cur brk
$11307 = 343040


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11308 = 4
***eax as return
eax            0x53c00	343040
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11309 = 4
***cur state
$11310 = 0
***cur counter
$11311 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11312 = 4
***task
$11313 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11314 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11315 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11316 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11317 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11318 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11319 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x53c00	343040
***cur register ecx
ecx            0x9	9
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11320 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=343040) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11321 = 4
***end_data_seg
$11322 = 343040
***cur brk
$11323 = 343040


Breakpoint 59, sys_brk (end_data_seg=343040) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11324 = 4
***cur brk
$11325 = 343040


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11326 = 4
***eax as return
eax            0x53c00	343040
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11327 = 4
***cur state
$11328 = 0
***cur counter
$11329 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11330 = 4
***task
$11331 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11332 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11333 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11334 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11335 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11336 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11337 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x54400	345088
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11338 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=345088) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11339 = 4
***end_data_seg
$11340 = 345088
***cur brk
$11341 = 343040


Breakpoint 59, sys_brk (end_data_seg=345088) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11342 = 4
***cur brk
$11343 = 345088


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11344 = 4
***eax as return
eax            0x54400	345088
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11345 = 4
***cur state
$11346 = 0
***cur counter
$11347 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11348 = 4
***task
$11349 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11350 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11351 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11352 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11353 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11354 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$11355 = 4
***fault address
***cur register edx
edx            0x8054000	134561792
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134561792) at memory.c:367
367	{
---in do_no_page
___pid
$11356 = 4
***address
$11357 = 134561792


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$11358 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11359 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x54400	345088
***cur register ecx
ecx            0x5	5
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11360 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=345088) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11361 = 4
***end_data_seg
$11362 = 345088
***cur brk
$11363 = 345088


Breakpoint 59, sys_brk (end_data_seg=345088) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11364 = 4
***cur brk
$11365 = 345088


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11366 = 4
***eax as return
eax            0x54400	345088
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11367 = 4
***cur state
$11368 = 0
***cur counter
$11369 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11370 = 4
***task
$11371 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11372 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11373 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11374 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11375 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11376 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11377 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x54c00	347136
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11378 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=347136) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11379 = 4
***end_data_seg
$11380 = 347136
***cur brk
$11381 = 345088


Breakpoint 59, sys_brk (end_data_seg=347136) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11382 = 4
***cur brk
$11383 = 347136


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11384 = 4
***eax as return
eax            0x54c00	347136
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11385 = 4
***cur state
$11386 = 0
***cur counter
$11387 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11388 = 4
***task
$11389 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11390 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11391 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11392 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11393 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11394 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11395 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x54c00	347136
***cur register ecx
ecx            0x14	20
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11396 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=347136) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11397 = 4
***end_data_seg
$11398 = 347136
***cur brk
$11399 = 347136


Breakpoint 59, sys_brk (end_data_seg=347136) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11400 = 4
***cur brk
$11401 = 347136


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11402 = 4
***eax as return
eax            0x54c00	347136
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11403 = 4
***cur state
$11404 = 0
***cur counter
$11405 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11406 = 4
***task
$11407 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11408 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11409 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11410 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11411 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11412 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11413 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x55400	349184
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11414 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=349184) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11415 = 4
***end_data_seg
$11416 = 349184
***cur brk
$11417 = 347136


Breakpoint 59, sys_brk (end_data_seg=349184) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11418 = 4
***cur brk
$11419 = 349184


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11420 = 4
***eax as return
eax            0x55400	349184
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11421 = 4
***cur state
$11422 = 0
***cur counter
$11423 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11424 = 4
***task
$11425 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11426 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11427 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11428 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11429 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11430 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$11431 = 4
***fault address
***cur register edx
edx            0x8055000	134565888
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134565888) at memory.c:367
367	{
---in do_no_page
___pid
$11432 = 4
***address
$11433 = 134565888


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11434 = 4
***task
$11435 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11436 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11437 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$11438 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$11439 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11440 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x55400	349184
***cur register ecx
ecx            0x7	7
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11441 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=349184) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11442 = 4
***end_data_seg
$11443 = 349184
***cur brk
$11444 = 349184


Breakpoint 59, sys_brk (end_data_seg=349184) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11445 = 4
***cur brk
$11446 = 349184


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11447 = 4
***eax as return
eax            0x55400	349184
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11448 = 4
***cur state
$11449 = 0
***cur counter
$11450 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11451 = 4
***task
$11452 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11453 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11454 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11455 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11456 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11457 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11458 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x55c00	351232
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11459 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=351232) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11460 = 4
***end_data_seg
$11461 = 351232
***cur brk
$11462 = 349184


Breakpoint 59, sys_brk (end_data_seg=351232) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11463 = 4
***cur brk
$11464 = 351232


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11465 = 4
***eax as return
eax            0x55c00	351232
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11466 = 4
***cur state
$11467 = 0
***cur counter
$11468 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11469 = 4
***task
$11470 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11471 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11472 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11473 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11474 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11475 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11476 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x55c00	351232
***cur register ecx
ecx            0x6	6
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11477 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=351232) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11478 = 4
***end_data_seg
$11479 = 351232
***cur brk
$11480 = 351232


Breakpoint 59, sys_brk (end_data_seg=351232) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11481 = 4
***cur brk
$11482 = 351232


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11483 = 4
***eax as return
eax            0x55c00	351232
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11484 = 4
***cur state
$11485 = 0
***cur counter
$11486 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11487 = 4
***task
$11488 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11489 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11490 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11491 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11492 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11493 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11494 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x56400	353280
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11495 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=353280) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11496 = 4
***end_data_seg
$11497 = 353280
***cur brk
$11498 = 351232


Breakpoint 59, sys_brk (end_data_seg=353280) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11499 = 4
***cur brk
$11500 = 353280


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11501 = 4
***eax as return
eax            0x56400	353280
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11502 = 4
***cur state
$11503 = 0
***cur counter
$11504 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11505 = 4
***task
$11506 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11507 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11508 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11509 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11510 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11511 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$11512 = 4
***fault address
***cur register edx
edx            0x8056000	134569984
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134569984) at memory.c:367
367	{
---in do_no_page
___pid
$11513 = 4
***address
$11514 = 134569984


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$11515 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11516 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x56400	353280
***cur register ecx
ecx            0x2	2
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11517 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=353280) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11518 = 4
***end_data_seg
$11519 = 353280
***cur brk
$11520 = 353280


Breakpoint 59, sys_brk (end_data_seg=353280) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11521 = 4
***cur brk
$11522 = 353280


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11523 = 4
***eax as return
eax            0x56400	353280
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11524 = 4
***cur state
$11525 = 0
***cur counter
$11526 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11527 = 4
***task
$11528 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11529 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11530 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11531 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11532 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11533 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11534 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x56c00	355328
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11535 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=355328) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11536 = 4
***end_data_seg
$11537 = 355328
***cur brk
$11538 = 353280


Breakpoint 59, sys_brk (end_data_seg=355328) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11539 = 4
***cur brk
$11540 = 355328


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11541 = 4
***eax as return
eax            0x56c00	355328
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11542 = 4
***cur state
$11543 = 0
***cur counter
$11544 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11545 = 4
***task
$11546 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11547 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11548 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11549 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11550 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11551 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11552 = 4
***task
$11553 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11554 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11555 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11556 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11557 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11558 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11559 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x56c00	355328
***cur register ecx
ecx            0x3	3
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11560 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=355328) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11561 = 4
***end_data_seg
$11562 = 355328
***cur brk
$11563 = 355328


Breakpoint 59, sys_brk (end_data_seg=355328) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11564 = 4
***cur brk
$11565 = 355328


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11566 = 4
***eax as return
eax            0x56c00	355328
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11567 = 4
***cur state
$11568 = 0
***cur counter
$11569 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11570 = 4
***task
$11571 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11572 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11573 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11574 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11575 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11576 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11577 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x57400	357376
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11578 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=357376) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11579 = 4
***end_data_seg
$11580 = 357376
***cur brk
$11581 = 355328


Breakpoint 59, sys_brk (end_data_seg=357376) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11582 = 4
***cur brk
$11583 = 357376


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11584 = 4
***eax as return
eax            0x57400	357376
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11585 = 4
***cur state
$11586 = 0
***cur counter
$11587 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11588 = 4
***task
$11589 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11590 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11591 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11592 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11593 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11594 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$11595 = 4
***fault address
***cur register edx
edx            0x8057000	134574080
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134574080) at memory.c:367
367	{
---in do_no_page
___pid
$11596 = 4
***address
$11597 = 134574080


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$11598 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11599 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x57400	357376
***cur register ecx
ecx            0x2	2
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11600 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=357376) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11601 = 4
***end_data_seg
$11602 = 357376
***cur brk
$11603 = 357376


Breakpoint 59, sys_brk (end_data_seg=357376) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11604 = 4
***cur brk
$11605 = 357376


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11606 = 4
***eax as return
eax            0x57400	357376
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11607 = 4
***cur state
$11608 = 0
***cur counter
$11609 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11610 = 4
***task
$11611 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11612 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11613 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11614 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11615 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11616 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11617 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x57c00	359424
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11618 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=359424) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11619 = 4
***end_data_seg
$11620 = 359424
***cur brk
$11621 = 357376


Breakpoint 59, sys_brk (end_data_seg=359424) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11622 = 4
***cur brk
$11623 = 359424


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11624 = 4
***eax as return
eax            0x57c00	359424
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11625 = 4
***cur state
$11626 = 0
***cur counter
$11627 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11628 = 4
***task
$11629 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11630 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11631 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11632 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11633 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11634 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11635 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x57c00	359424
***cur register ecx
ecx            0x3	3
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11636 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=359424) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11637 = 4
***end_data_seg
$11638 = 359424
***cur brk
$11639 = 359424


Breakpoint 59, sys_brk (end_data_seg=359424) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11640 = 4
***cur brk
$11641 = 359424


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11642 = 4
***eax as return
eax            0x57c00	359424
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11643 = 4
***cur state
$11644 = 0
***cur counter
$11645 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11646 = 4
***task
$11647 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11648 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11649 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11650 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11651 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11652 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11653 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x58400	361472
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11654 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=361472) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11655 = 4
***end_data_seg
$11656 = 361472
***cur brk
$11657 = 359424


Breakpoint 59, sys_brk (end_data_seg=361472) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11658 = 4
***cur brk
$11659 = 361472


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11660 = 4
***eax as return
eax            0x58400	361472
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11661 = 4
***cur state
$11662 = 0
***cur counter
$11663 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11664 = 4
***task
$11665 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11666 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11667 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11668 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11669 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11670 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$11671 = 4
***fault address
***cur register edx
edx            0x8058000	134578176
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134578176) at memory.c:367
367	{
---in do_no_page
___pid
$11672 = 4
***address
$11673 = 134578176


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$11674 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11675 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x58400	361472
***cur register ecx
ecx            0x12	18
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11676 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=361472) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11677 = 4
***end_data_seg
$11678 = 361472
***cur brk
$11679 = 361472


Breakpoint 59, sys_brk (end_data_seg=361472) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11680 = 4
***cur brk
$11681 = 361472


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11682 = 4
***eax as return
eax            0x58400	361472
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11683 = 4
***cur state
$11684 = 0
***cur counter
$11685 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11686 = 4
***task
$11687 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11688 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11689 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11690 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11691 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11692 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11693 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x58c00	363520
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11694 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=363520) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11695 = 4
***end_data_seg
$11696 = 363520
***cur brk
$11697 = 361472


Breakpoint 59, sys_brk (end_data_seg=363520) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11698 = 4
***cur brk
$11699 = 363520


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11700 = 4
***eax as return
eax            0x58c00	363520
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11701 = 4
***cur state
$11702 = 0
***cur counter
$11703 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11704 = 4
***task
$11705 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11706 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11707 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11708 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11709 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11710 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11711 = 4
***task
$11712 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11713 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11714 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11715 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11716 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11717 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11718 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x58c00	363520
***cur register ecx
ecx            0x2	2
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11719 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=363520) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11720 = 4
***end_data_seg
$11721 = 363520
***cur brk
$11722 = 363520


Breakpoint 59, sys_brk (end_data_seg=363520) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11723 = 4
***cur brk
$11724 = 363520


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11725 = 4
***eax as return
eax            0x58c00	363520
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11726 = 4
***cur state
$11727 = 0
***cur counter
$11728 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11729 = 4
***task
$11730 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11731 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11732 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11733 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11734 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11735 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11736 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x59400	365568
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11737 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=365568) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11738 = 4
***end_data_seg
$11739 = 365568
***cur brk
$11740 = 363520


Breakpoint 59, sys_brk (end_data_seg=365568) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11741 = 4
***cur brk
$11742 = 365568


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11743 = 4
***eax as return
eax            0x59400	365568
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11744 = 4
***cur state
$11745 = 0
***cur counter
$11746 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11747 = 4
***task
$11748 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11749 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11750 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11751 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11752 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11753 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$11754 = 4
***fault address
***cur register edx
edx            0x8059000	134582272
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134582272) at memory.c:367
367	{
---in do_no_page
___pid
$11755 = 4
***address
$11756 = 134582272


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$11757 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11758 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x59400	365568
***cur register ecx
ecx            0x4	4
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11759 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=365568) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11760 = 4
***end_data_seg
$11761 = 365568
***cur brk
$11762 = 365568


Breakpoint 59, sys_brk (end_data_seg=365568) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11763 = 4
***cur brk
$11764 = 365568


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11765 = 4
***eax as return
eax            0x59400	365568
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11766 = 4
***cur state
$11767 = 0
***cur counter
$11768 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11769 = 4
***task
$11770 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11771 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11772 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11773 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11774 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11775 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11776 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x59c00	367616
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11777 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=367616) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$11778 = 4
***end_data_seg
$11779 = 367616
***cur brk
$11780 = 365568


Breakpoint 59, sys_brk (end_data_seg=367616) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$11781 = 4
***cur brk
$11782 = 367616


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11783 = 4
***eax as return
eax            0x59c00	367616
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11784 = 4
***cur state
$11785 = 0
***cur counter
$11786 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11787 = 4
***task
$11788 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11789 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11790 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11791 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11792 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11793 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11794 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x10c7e	68734
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x4adcc	306636


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11795 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    flag=0, mode=456) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$11796 = 4
***open filename
$11797 = 64 '@'
***fd
$11798 = 3


    flag=0, mode=456) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$11799 = 4
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11800 = 4
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11801 = 4
***cur state
$11802 = 0
***cur counter
$11803 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11804 = 4
***task
$11805 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11806 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11807 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11808 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11809 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11810 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11811 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x451a8	283048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11812 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=3, cmd=21505, arg=283048) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$11813 = 4
***fd
$11814 = 3


Breakpoint 61, sys_ioctl (fd=3, cmd=21505, arg=283048) at ioctl.c:40
40		dev = filp->f_inode->i_zone[0];
---in sys_ioctl
___pid
$11815 = 4
***mode and fd right
***dev
$11816 = 3


Breakpoint 91, write_verify (address=134500352) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$11817 = 4
***call stack
#0  write_verify (address=134500352) at memory.c:267
#1  0x000085cd in verify_area (addr=0x451a8, size=-3636) at fork.c:35
#2  0x00019486 in get_termios (tty=0x234c0 <tty_table>, termios=0x451a8)
    at tty_ioctl.c:60
#3  0x0001976f in tty_ioctl (dev=0, cmd=21505, arg=283048) at tty_ioctl.c:127
#4  0x00013a54 in sys_ioctl (fd=3, cmd=21505, arg=283048) at ioctl.c:45
#5  0x0000793f in system_call () at system_call.s:94
#6  0x00000003 in startup_32 () at head.s:19
***address
$11818 = 134500352


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11819 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11820 = 4
***cur state
$11821 = 0
***cur counter
$11822 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11823 = 4
***task
$11824 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11825 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11826 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11827 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11828 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11829 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11830 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x451a8	283048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11831 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$11832 = 4
***fd
$11833 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11834 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11835 = 4
***cur state
$11836 = 0
***cur counter
$11837 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11838 = 4
***task
$11839 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11840 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11841 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11842 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11843 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11844 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11845 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x37	55
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3	3
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11846 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11847 = 4
***eax as return
eax            0x2	2
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11848 = 4
***cur state
$11849 = 0
***cur counter
$11850 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11851 = 4
***task
$11852 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11853 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11854 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11855 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11856 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11857 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11858 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x3fffeec	67108588
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11859 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11860 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11861 = 4
***cur state
$11862 = 0
***cur counter
$11863 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11864 = 4
***task
$11865 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11866 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11867 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11868 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11869 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11870 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11871 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0xd	13
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x4814d	295245
***cur register edx
edx            0x161f8	90616


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11872 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11873 = 4
***eax as return
eax            0x5fa97091	1604939921
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11874 = 4
***cur state
$11875 = 0
***cur counter
$11876 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11877 = 4
***task
$11878 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11879 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11880 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11881 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11882 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11883 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11884 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2a	42
***cur register ebx
ebx            0x3fff0f0	67105008
***cur register ecx
ecx            0x3	3
***cur register edx
edx            0x3	3


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11885 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$11886 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11887 = 4
***cur state
$11888 = 0
***cur counter
$11889 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11890 = 4
***task
$11891 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$11892 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11893 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11894 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11895 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11896 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$11897 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2	2
***cur register ebx
ebx            0x5976c	366444
***cur register ecx
ecx            0x12aae	76462
***cur register edx
edx            0x58680	362112


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$11898 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 10, sys_fork () at system_call.s:217
217		call copy_process
---in sys_fork
___pid
$11899 = 4
***cur register gs
gs             0x17	23
***push gs
***cur register esi
esi            0x12ac3	76483
***push esi
***cur register edi
edi            0x58661	362081
***push edi
***cur register ebp
ebp            0x3fff0c0	0x3fff0c0
***push ebp
***cur register eax
eax            0x4	4
;;;eax to nr


    eip=235695, cs=15, eflags=582, esp=67104948, ss=23) at fork.c:79
79		p = (struct task_struct *) get_free_page();
---in copy_process
***father pid
$11900 = 4
***new pid
$11901 = 5
***task number
$11902 = 4
***before free page
***cur register ecx
ecx            0x4	4
***cur register edi
edi            0x58661	362081


    eip=235695, cs=15, eflags=582, esp=67104948, ss=23) at fork.c:80
80		if (!p)
---in copy_process
___pid
$11903 = 4
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0x58661	362081
***eax:physical address
eax            0xfa9000	16420864


    eip=235695, cs=15, eflags=582, esp=67104948, ss=23) at fork.c:86
86		*p = *current;	/* NOTE! this doesn't copy the supervisor stack */
---in copy_process
___pid
$11904 = 4
***copy task struct


    eip=235695, cs=15, eflags=582, esp=67104948, ss=23) at fork.c:116
116		p->tss.ldt = _LDT(nr);
---in copy_process
___pid
$11905 = 4
***new process state
$11906 = 2
***new process tss.esp0
$11907 = 16424960


    eip=235695, cs=15, eflags=582, esp=67104948, ss=23) at fork.c:117
117		p->tss.trace_bitmap = 0x80000000;
---in copy_process
___pid
$11908 = 4
***new LDT index in GDT
$11909 = 104
***new cs in LDT
$11910 = {a = 64, b = 146864896}
***new ds in LDT
$11911 = {a = 16383, b = 146862848}


Breakpoint 16, copy_mem (nr=4, p=0xfa9000) at fork.c:54
54		p->start_code = new_code_base;
---in copy_mem
___pid
$11912 = 4
***new_data_base
$11913 = 268435456
***old_data_base
$11914 = 134217728


    at memory.c:163
163		for( ; size-->0 ; from_dir++,to_dir++) {
---in copy_page_tables
___pid
$11915 = 4
***from_dir
$11916 = (unsigned long *) 0x80 <setup_idt+15>
***to_dir
$11917 = (unsigned long *) 0x100 <setup_gdt+95>
size
$11918 = 16


    at memory.c:169
169			if (!(to_page_table = (unsigned long *) get_free_page()))
---in copy_page_tables
___pid
$11919 = 4
***before free page
***cur register ecx
ecx            0xfa92e2	16421602
***cur register edi
edi            0xfa92e7	16421607


    at memory.c:171
171			*to_dir = ((unsigned long) to_page_table) | 7;
---in copy_page_tables
___pid
$11920 = 4
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0xfa92e7	16421607
***from_page_table
$11921 = (unsigned long *) 0xff3000
***to_page_table
$11922 = (unsigned long *) 0xfa8000


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11923 = 4
***task
$11924 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$11925 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11926 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$11927 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


    at memory.c:169
169			if (!(to_page_table = (unsigned long *) get_free_page()))
---in copy_page_tables
___pid
$11928 = 4
***before free page
***cur register ecx
ecx            0x266e0	157408
***cur register edi
edi            0xfa92e7	16421607


    at memory.c:171
171			*to_dir = ((unsigned long) to_page_table) | 7;
---in copy_page_tables
___pid
$11929 = 4
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0xfa92e7	16421607
***from_page_table
$11930 = (unsigned long *) 0xffb000
***to_page_table
$11931 = (unsigned long *) 0xfa7000


    eip=235695, cs=15, eflags=582, esp=67104948, ss=23) at fork.c:134
134		set_tss_desc(gdt+(nr<<1)+FIRST_TSS_ENTRY,&(p->tss));
---in copy_process
___pid
$11932 = 4
tss in GDT
$11933 = 12
***tss address
$11934 = (struct tss_struct *) 0xfa92e8
ldt in GDT
$11935 = 13
***ldt address
$11936 = (struct desc_struct (*)[3]) 0xfa92d0


    eip=235695, cs=15, eflags=582, esp=67104948, ss=23) at fork.c:137
137		return last_pid;
---in copy_process
___pid
$11937 = 4
***new process state
$11938 = 0


Breakpoint 19, sys_fork () at system_call.s:219
219	1:	ret
---in sys_fork
***cur register esp
esp            0xffdfd0	0xffdfd0


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$11939 = 4
***cur state
$11940 = 0
***cur counter
$11941 = 9


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11942 = 4
***task
$11943 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$11944 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11945 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$11946 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$11947 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$11948 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$11949 = 4
***fault address
***cur register edx
edx            0xbfff0bc	201322684
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=201322684) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$11950 = 4


Breakpoint 98, un_wp_page (table_entry=0xffbffc) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$11951 = 4
***table entry
$11952 = (unsigned long *) 0xffbffc


Breakpoint 99, un_wp_page (table_entry=0xffbffc) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$11953 = 4
***physical page address
$11954 = 16728064


Breakpoint 100, un_wp_page (table_entry=0xffbffc) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$11955 = 4
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xffbffc) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$11956 = 4
***new page
$11957 = 16408576


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$11958 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$11959 = 4
***fault address
***cur register edx
edx            0x80413f4	134484980
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134484980) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$11960 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3104) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$11961 = 4
***table entry
$11962 = (unsigned long *) 0xff3104


Breakpoint 99, un_wp_page (table_entry=0xff3104) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$11963 = 4
***physical page address
$11964 = 16719872


Breakpoint 100, un_wp_page (table_entry=0xff3104) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$11965 = 4
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xff3104) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$11966 = 4
***new page
$11967 = 16404480


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$11968 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$11969 = 4
***fault address
***cur register edx
edx            0x8046658	134506072
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134506072) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$11970 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3118) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$11971 = 4
***table entry
$11972 = (unsigned long *) 0xff3118


Breakpoint 99, un_wp_page (table_entry=0xff3118) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$11973 = 4
***physical page address
$11974 = 16711680


Breakpoint 100, un_wp_page (table_entry=0xff3118) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$11975 = 4
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xff3118) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$11976 = 4
***new page
$11977 = 16400384


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$11978 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$11979 = 4
***fault address
***cur register edx
edx            0x804435c	134497116
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134497116) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$11980 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3110) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$11981 = 4
***table entry
$11982 = (unsigned long *) 0xff3110


Breakpoint 99, un_wp_page (table_entry=0xff3110) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$11983 = 4
***physical page address
$11984 = 16691200


Breakpoint 100, un_wp_page (table_entry=0xff3110) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$11985 = 4
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xff3110) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$11986 = 4
***new page
$11987 = 16396288


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$11988 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$11989 = 4
***fault address
***cur register edx
edx            0x804522f	134500911
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134500911) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$11990 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3114) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$11991 = 4
***table entry
$11992 = (unsigned long *) 0xff3114


Breakpoint 99, un_wp_page (table_entry=0xff3114) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$11993 = 4
***physical page address
$11994 = 16695296


Breakpoint 100, un_wp_page (table_entry=0xff3114) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$11995 = 4
***need copy page


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$11996 = 4
***task
$11997 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$11998 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$11999 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$12000 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 101, un_wp_page (table_entry=0xff3114) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$12001 = 4
***new page
$12002 = 16392192


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12003 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12004 = 4
***fault address
***cur register edx
edx            0x8058640	134579776
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134579776) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$12005 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3160) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$12006 = 4
***table entry
$12007 = (unsigned long *) 0xff3160


Breakpoint 99, un_wp_page (table_entry=0xff3160) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$12008 = 4
***physical page address
$12009 = 16433152


Breakpoint 100, un_wp_page (table_entry=0xff3160) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$12010 = 4
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xff3160) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$12011 = 4
***new page
$12012 = 16388096


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12013 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12014 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fff05c	67104860


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12015 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=3, cmd=21505, arg=67104860) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$12016 = 4
***fd
$12017 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12018 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12019 = 4
***cur state
$12020 = 0
***cur counter
$12021 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12022 = 4
***task
$12023 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12024 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12025 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12026 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12027 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12028 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12029 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x4	4
***cur register ecx
ecx            0x46258	287320
***cur register edx
edx            0x3b17c	242044


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12030 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=4) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$12031 = 4
***fd
$12032 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12033 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12034 = 4
***cur state
$12035 = 0
***cur counter
$12036 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12037 = 4
***task
$12038 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12039 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12040 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12041 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12042 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12043 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12044 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12045 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12046 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$12047 = 201322496


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f96 in sleep_on (p=0x277c0 <inode_table+480>) at sched.c:162
#2  0x00010b2b in read_pipe (inode=0x277a0 <inode_table+448>, 
    buf=0x3fff0bc "\336\n\001", count=1) at pipe.c:22
#3  0x0000c410 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:67
#4  0x0000793f in system_call () at system_call.s:94
#5  0x00000003 in startup_32 () at head.s:19


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$12048 = 0
***loop pid
$12049 = 5
***loop counter
$12050 = 15


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$12051 = 1
***loop pid
$12052 = 3
***loop counter
$12053 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$12054 = 2
***loop pid
$12055 = 4
***loop counter
$12056 = 8


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$12057 = 1
***loop pid
$12058 = 1
***loop counter
$12059 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$12060 = 5


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12061 = 5
***fault address
***cur register edx
edx            0x13fff0bc	335540412
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=335540412) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$12062 = 5


Breakpoint 98, un_wp_page (table_entry=0xfa7ffc) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$12063 = 5
***table entry
$12064 = (unsigned long *) 0xfa7ffc


Breakpoint 99, un_wp_page (table_entry=0xfa7ffc) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$12065 = 5
***physical page address
$12066 = 16728064


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12067 = 5
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12068 = 5
***fault address
***cur register edx
edx            0x100469d0	268724688
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268724688) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$12069 = 5


Breakpoint 98, un_wp_page (table_entry=0xfa8118) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$12070 = 5
***table entry
$12071 = (unsigned long *) 0xfa8118


Breakpoint 99, un_wp_page (table_entry=0xfa8118) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$12072 = 5
***physical page address
$12073 = 16711680


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12074 = 5
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12075 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12076 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=3, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$12077 = 5
***signum
$12078 = 3


Breakpoint 32, sys_signal (signum=3, handler=1, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$12079 = 5
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12080 = 5
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12081 = 5
***cur state
$12082 = 0
***cur counter
$12083 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12084 = 5
***task
$12085 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12086 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12087 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12088 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12089 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12090 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12091 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xf	15
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12092 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$12093 = 5
***signum
$12094 = 15


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$12095 = 5
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12096 = 5
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12097 = 5
***cur state
$12098 = 0
***cur counter
$12099 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12100 = 5
***task
$12101 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12102 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12103 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12104 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12105 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12106 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12107 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12108 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$12109 = 5
***signum
$12110 = 20


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$12111 = 5
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12112 = 5
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12113 = 5
***cur state
$12114 = 0
***cur counter
$12115 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12116 = 5
***task
$12117 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12118 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12119 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12120 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12121 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12122 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12123 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x15	21
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12124 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$12125 = 5
***signum
$12126 = 21


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$12127 = 5
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12128 = 5
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12129 = 5
***cur state
$12130 = 0
***cur counter
$12131 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12132 = 5
***task
$12133 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12134 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12135 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12136 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12137 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12138 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12139 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x16	22
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12140 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$12141 = 5
***signum
$12142 = 22


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$12143 = 5
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12144 = 5
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12145 = 5
***cur state
$12146 = 0
***cur counter
$12147 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12148 = 5
***task
$12149 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12150 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12151 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12152 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12153 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12154 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12155 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3f	63
***cur register ebx
ebx            0x4	4
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12156 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=1) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$12157 = 5
***fd
$12158 = 1


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12159 = 5
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12160 = 5
***cur state
$12161 = 0
***cur counter
$12162 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12163 = 5
***task
$12164 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12165 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12166 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12167 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12168 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12169 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12170 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x4	4
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12171 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=4) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$12172 = 5
***fd
$12173 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12174 = 5
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12175 = 5
***cur state
$12176 = 0
***cur counter
$12177 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12178 = 5
***task
$12179 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12180 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12181 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12182 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12183 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12184 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12185 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12186 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$12187 = 5
***fd
$12188 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12189 = 5
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12190 = 5
***cur state
$12191 = 0
***cur counter
$12192 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12193 = 5
***task
$12194 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12195 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12196 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12197 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12198 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12199 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12200 = 5
***fault address
***cur register edx
edx            0x10041028	268701736
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268701736) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$12201 = 5


Breakpoint 98, un_wp_page (table_entry=0xfa8104) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$12202 = 5
***table entry
$12203 = (unsigned long *) 0xfa8104


Breakpoint 99, un_wp_page (table_entry=0xfa8104) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$12204 = 5
***physical page address
$12205 = 16719872


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12206 = 5
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12207 = 5
***fault address
***cur register edx
edx            0x1004522e	268718638
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268718638) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$12208 = 5


Breakpoint 98, un_wp_page (table_entry=0xfa8114) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$12209 = 5
***table entry
$12210 = (unsigned long *) 0xfa8114


Breakpoint 99, un_wp_page (table_entry=0xfa8114) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$12211 = 5
***physical page address
$12212 = 16695296


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12213 = 5
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12214 = 5
***fault address
***cur register edx
edx            0x100597a0	268801952
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268801952) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$12215 = 5


Breakpoint 98, un_wp_page (table_entry=0xfa8164) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$12216 = 5
***table entry
$12217 = (unsigned long *) 0xfa8164


Breakpoint 99, un_wp_page (table_entry=0xfa8164) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$12218 = 5
***physical page address
$12219 = 16429056


Breakpoint 100, un_wp_page (table_entry=0xfa8164) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$12220 = 5
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xfa8164) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$12221 = 5
***new page
$12222 = 16384000


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12223 = 5
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12224 = 5
***fault address
***cur register edx
edx            0x1004e480	268756096
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268756096) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$12225 = 5


Breakpoint 98, un_wp_page (table_entry=0xfa8138) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$12226 = 5
***table entry
$12227 = (unsigned long *) 0xfa8138


Breakpoint 99, un_wp_page (table_entry=0xfa8138) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$12228 = 5
***physical page address
$12229 = 16523264


Breakpoint 100, un_wp_page (table_entry=0xfa8138) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$12230 = 5
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xfa8138) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$12231 = 5
***new page
$12232 = 16379904


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12233 = 5
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12234 = 5
***fault address
***cur register edx
edx            0x13ffeffc	335540220
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=335540220) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$12235 = 5


Breakpoint 98, un_wp_page (table_entry=0xfa7ff8) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$12236 = 5
***table entry
$12237 = (unsigned long *) 0xfa7ff8


Breakpoint 99, un_wp_page (table_entry=0xfa7ff8) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$12238 = 5
***physical page address
$12239 = 16527360


Breakpoint 100, un_wp_page (table_entry=0xfa7ff8) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$12240 = 5
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xfa7ff8) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$12241 = 5
***new page
$12242 = 16375808


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12243 = 5
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12244 = 5
***fault address
***cur register edx
edx            0x10058640	268797504
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268797504) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$12245 = 5


Breakpoint 98, un_wp_page (table_entry=0xfa8160) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$12246 = 5
***table entry
$12247 = (unsigned long *) 0xfa8160


Breakpoint 99, un_wp_page (table_entry=0xfa8160) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$12248 = 5
***physical page address
$12249 = 16433152


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12250 = 5
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12251 = 5
***fault address
***cur register edx
edx            0x1004435c	268714844
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268714844) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$12252 = 5


Breakpoint 98, un_wp_page (table_entry=0xfa8110) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$12253 = 5
***table entry
$12254 = (unsigned long *) 0xfa8110


Breakpoint 99, un_wp_page (table_entry=0xfa8110) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$12255 = 5
***physical page address
$12256 = 16691200


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12257 = 5
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12258 = 5
***fault address
***cur register edx
edx            0x10049e0c	268738060
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268738060) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$12259 = 5


Breakpoint 98, un_wp_page (table_entry=0xfa8124) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$12260 = 5
***table entry
$12261 = (unsigned long *) 0xfa8124


Breakpoint 99, un_wp_page (table_entry=0xfa8124) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$12262 = 5
***physical page address
$12263 = 16666624


Breakpoint 100, un_wp_page (table_entry=0xfa8124) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$12264 = 5
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xfa8124) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$12265 = 5
***new page
$12266 = 16371712


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12267 = 5
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12268 = 5
***fault address
***cur register edx
edx            0x1004cc0c	268749836
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268749836) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$12269 = 5


Breakpoint 98, un_wp_page (table_entry=0xfa8130) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$12270 = 5
***table entry
$12271 = (unsigned long *) 0xfa8130


Breakpoint 99, un_wp_page (table_entry=0xfa8130) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$12272 = 5
***physical page address
$12273 = 16568320


Breakpoint 100, un_wp_page (table_entry=0xfa8130) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$12274 = 5
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xfa8130) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$12275 = 5
***new page
$12276 = 16367616


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12277 = 5
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12278 = 5
***fault address
***cur register edx
edx            0x13ffdc40	335535168
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=335535168) at memory.c:367
367	{
---in do_no_page
___pid
$12279 = 5
***address
$12280 = 335535168


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12281 = 5
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12282 = 5
***fault address
***cur register edx
edx            0x1004dc0c	268753932
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268753932) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$12283 = 5


Breakpoint 98, un_wp_page (table_entry=0xfa8134) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$12284 = 5
***table entry
$12285 = (unsigned long *) 0xfa8134


Breakpoint 99, un_wp_page (table_entry=0xfa8134) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$12286 = 5
***physical page address
$12287 = 16547840


Breakpoint 100, un_wp_page (table_entry=0xfa8134) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$12288 = 5
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xfa8134) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$12289 = 5
***new page
$12290 = 16359424


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12291 = 5
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12292 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x59c00	367616
***cur register ecx
ecx            0x7e	126
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12293 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=367616) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$12294 = 5
***end_data_seg
$12295 = 367616
***cur brk
$12296 = 367616


Breakpoint 59, sys_brk (end_data_seg=367616) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$12297 = 5
***cur brk
$12298 = 367616


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12299 = 5
***eax as return
eax            0x59c00	367616
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12300 = 5
***cur state
$12301 = 0
***cur counter
$12302 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12303 = 5
***task
$12304 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12305 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12306 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12307 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12308 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12309 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12310 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5a400	369664
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12311 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=369664) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$12312 = 5
***end_data_seg
$12313 = 369664
***cur brk
$12314 = 367616


Breakpoint 59, sys_brk (end_data_seg=369664) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$12315 = 5
***cur brk
$12316 = 369664


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12317 = 5
***eax as return
eax            0x5a400	369664
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12318 = 5
***cur state
$12319 = 0
***cur counter
$12320 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12321 = 5
***task
$12322 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12323 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12324 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12325 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12326 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12327 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12328 = 5
***fault address
***cur register edx
edx            0x1005a000	268804096
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=268804096) at memory.c:367
367	{
---in do_no_page
___pid
$12329 = 5
***address
$12330 = 268804096


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12331 = 5
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12332 = 5
***fault address
***cur register edx
edx            0x1004b170	268743024
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268743024) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$12333 = 5


Breakpoint 98, un_wp_page (table_entry=0xfa812c) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$12334 = 5
***table entry
$12335 = (unsigned long *) 0xfa812c


Breakpoint 99, un_wp_page (table_entry=0xfa812c) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$12336 = 5
***physical page address
$12337 = 16601088


Breakpoint 100, un_wp_page (table_entry=0xfa812c) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$12338 = 5
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xfa812c) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$12339 = 5
***new page
$12340 = 16351232


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12341 = 5
***task
$12342 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12343 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12344 = 5
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$12345 = 5
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12346 = 5
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12347 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5a400	369664
***cur register ecx
ecx            0xc	12
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12348 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=369664) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$12349 = 5
***end_data_seg
$12350 = 369664
***cur brk
$12351 = 369664


Breakpoint 59, sys_brk (end_data_seg=369664) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$12352 = 5
***cur brk
$12353 = 369664


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12354 = 5
***eax as return
eax            0x5a400	369664
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12355 = 5
***cur state
$12356 = 0
***cur counter
$12357 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12358 = 5
***task
$12359 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12360 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12361 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12362 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12363 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12364 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12365 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5ac00	371712
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12366 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=371712) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$12367 = 5
***end_data_seg
$12368 = 371712
***cur brk
$12369 = 369664


Breakpoint 59, sys_brk (end_data_seg=371712) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$12370 = 5
***cur brk
$12371 = 371712


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12372 = 5
***eax as return
eax            0x5ac00	371712
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12373 = 5
***cur state
$12374 = 0
***cur counter
$12375 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12376 = 5
***task
$12377 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12378 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12379 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12380 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12381 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12382 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12383 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x1b3a0	111520
***cur register ecx
ecx            0x3ffee54	67104340
***cur register edx
edx            0x40c	1036


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12384 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=335536128) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12385 = 5
***call stack
#0  write_verify (address=335536128) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3ffee54, size=-396) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x276f8 <inode_table+280>, statbuf=0x3ffee54)
    at stat.c:20
#3  0x0000f85b in sys_stat (
    filename=0x1b3a0 "\016 C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", statbuf=0x3ffee54) at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x0001b3a0 in ?? ()
***address
$12386 = 335536128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12387 = 5
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12388 = 5
***cur state
$12389 = 0
***cur counter
$12390 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12391 = 5
***task
$12392 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12393 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12394 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12395 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12396 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12397 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12398 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x1b3a2	111522
***cur register ecx
ecx            0x3ffee54	67104340
***cur register edx
edx            0x40c	1036


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12399 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=335536128) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12400 = 5
***call stack
#0  write_verify (address=335536128) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3ffee54, size=-396) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27618 <inode_table+56>, statbuf=0x3ffee54)
    at stat.c:20
#3  0x0000f85b in sys_stat (
    filename=0x1b3a2 "C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", statbuf=0x3ffee54) at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x0001b3a2 in ?? ()
***address
$12401 = 335536128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12402 = 5
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12403 = 5
***cur state
$12404 = 0
***cur counter
$12405 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12406 = 5
***task
$12407 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12408 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12409 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12410 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12411 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12412 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12413 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0xc	12
***cur register ebx
ebx            0x1b3a4	111524
***cur register ecx
ecx            0x3ffee54	67104340
***cur register edx
edx            0x40c	1036


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12414 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12415 = 5
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12416 = 5
***cur state
$12417 = 0
***cur counter
$12418 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12419 = 5
***task
$12420 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12421 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12422 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12423 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12424 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12425 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12426 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x1b3a0	111520
***cur register ecx
ecx            0x3ffee54	67104340
***cur register edx
edx            0x40c	1036


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12427 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=335536128) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12428 = 5
***call stack
#0  write_verify (address=335536128) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3ffee54, size=-396) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27810 <inode_table+560>, statbuf=0x3ffee54)
    at stat.c:20
#3  0x0000f85b in sys_stat (
    filename=0x1b3a0 "\016 C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", statbuf=0x3ffee54) at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x0001b3a0 in ?? ()
***address
$12429 = 335536128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12430 = 5
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12431 = 5
***cur state
$12432 = 0
***cur counter
$12433 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12434 = 5
***task
$12435 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12436 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12437 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12438 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12439 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12440 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12441 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x1b3a0	111520
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3ffef73	67104627


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12442 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    filename=0x1b3a0 "\016 C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", flag=0, mode=321) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$12443 = 5
***open filename
$12444 = 14 '\016'
***fd
$12445 = 3


    filename=0x1b3a0 "\016 C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", flag=0, mode=321) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$12446 = 5
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12447 = 5
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12448 = 5
***cur state
$12449 = 0
***cur counter
$12450 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12451 = 5
***task
$12452 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12453 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12454 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12455 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12456 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12457 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12458 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1c	28
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3ffede4	67104228
***cur register edx
edx            0x141	321


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12459 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=335536128) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12460 = 5
***call stack
#0  write_verify (address=335536128) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3ffede4, size=-508) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27810 <inode_table+560>, statbuf=0x3ffede4)
    at stat.c:20
#3  0x0000f8d4 in sys_fstat (fd=3, statbuf=0x3ffede4) at stat.c:54
#4  0x0000793f in system_call () at system_call.s:94
#5  0x00000003 in startup_32 () at head.s:19
***address
$12461 = 335536128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12462 = 5
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12463 = 5
***cur state
$12464 = 0
***cur counter
$12465 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12466 = 5
***task
$12467 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12468 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12469 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12470 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12471 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12472 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12473 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5ac00	371712
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12474 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=371712) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$12475 = 5
***end_data_seg
$12476 = 371712
***cur brk
$12477 = 371712


Breakpoint 59, sys_brk (end_data_seg=371712) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$12478 = 5
***cur brk
$12479 = 371712


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12480 = 5
***eax as return
eax            0x5ac00	371712
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12481 = 5
***cur state
$12482 = 0
***cur counter
$12483 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12484 = 5
***task
$12485 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12486 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12487 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12488 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12489 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12490 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12491 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5ec00	388096
***cur register ecx
ecx            0xe	14
***cur register edx
edx            0x4000	16384


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12492 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=388096) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$12493 = 5
***end_data_seg
$12494 = 388096
***cur brk
$12495 = 371712


Breakpoint 59, sys_brk (end_data_seg=388096) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$12496 = 5
***cur brk
$12497 = 388096


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12498 = 5
***eax as return
eax            0x5ec00	388096
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12499 = 5
***cur state
$12500 = 0
***cur counter
$12501 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12502 = 5
***task
$12503 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12504 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12505 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12506 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12507 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12508 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12509 = 5
***fault address
***cur register edx
edx            0x1005cc0c	268815372
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=268815372) at memory.c:367
367	{
---in do_no_page
___pid
$12510 = 5
***address
$12511 = 268815372


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12512 = 5
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12513 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5ac0c	371724
***cur register edx
edx            0x2000	8192


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12514 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=268804096) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12515 = 5
***call stack
#0  write_verify (address=268804096) at memory.c:267
#1  0x000085cd in verify_area (addr=0x5ac0c, size=7180) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x5ac0c "", count=8192)
    at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$12516 = 268804096


Breakpoint 91, write_verify (address=268808192) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12517 = 5
***call stack
#0  write_verify (address=268808192) at memory.c:267
#1  0x000085cd in verify_area (addr=0x5ac0c, size=3084) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x5ac0c "", count=8192)
    at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$12518 = 268808192


Breakpoint 91, write_verify (address=268812288) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12519 = 5
***call stack
#0  write_verify (address=268812288) at memory.c:267
#1  0x000085cd in verify_area (addr=0x5ac0c, size=-1012) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x5ac0c "", count=8192)
    at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$12520 = 268812288


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12521 = 5
***eax as return
eax            0xa0	160
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12522 = 5
***cur state
$12523 = 0
***cur counter
$12524 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12525 = 5
***task
$12526 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12527 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12528 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12529 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12530 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12531 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12532 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x46666	288358
***cur register ecx
ecx            0x3ffee54	67104340
***cur register edx
edx            0x5ac5e	371806


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12533 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=335536128) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12534 = 5
***call stack
#0  write_verify (address=335536128) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3ffee54, size=-396) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x276f8 <inode_table+280>, statbuf=0x3ffee54)
    at stat.c:20
#3  0x0000f85b in sys_stat (filename=0x46666 "\004", statbuf=0x3ffee54)
    at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x00046666 in ?? ()
***address
$12535 = 335536128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12536 = 5
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12537 = 5
***cur state
$12538 = 0
***cur counter
$12539 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12540 = 5
***task
$12541 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12542 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12543 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12544 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12545 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12546 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12547 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x59ac0	367296


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12548 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$12549 = 5
***fd
$12550 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12551 = 5
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12552 = 5
***cur state
$12553 = 0
***cur counter
$12554 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12555 = 5
***task
$12556 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12557 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12558 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12559 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12560 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12561 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12562 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0xc	12
***cur register ebx
ebx            0x1b3a4	111524
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x59ac0	367296


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12563 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12564 = 5
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12565 = 5
***cur state
$12566 = 0
***cur counter
$12567 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12568 = 5
***task
$12569 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12570 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12571 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12572 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12573 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12574 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12575 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x1b3a0	111520
***cur register ecx
ecx            0x3ffee54	67104340
***cur register edx
edx            0x59ac0	367296


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12576 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=335536128) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12577 = 5
***call stack
#0  write_verify (address=335536128) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3ffee54, size=-396) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27618 <inode_table+56>, statbuf=0x3ffee54)
    at stat.c:20
#3  0x0000f85b in sys_stat (
    filename=0x1b3a0 "\016 C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", statbuf=0x3ffee54) at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x0001b3a0 in ?? ()
***address
$12578 = 335536128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12579 = 5
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12580 = 5
***cur state
$12581 = 0
***cur counter
$12582 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12583 = 5
***task
$12584 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12585 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12586 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12587 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12588 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12589 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12590 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x1b3a0	111520
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3ffef6e	67104622


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12591 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    filename=0x1b3a0 "\016 C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", flag=0, mode=328) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$12592 = 5
***open filename
$12593 = 14 '\016'
***fd
$12594 = 3


    filename=0x1b3a0 "\016 C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", flag=0, mode=328) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$12595 = 5
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12596 = 5
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12597 = 5
***cur state
$12598 = 0
***cur counter
$12599 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12600 = 5
***task
$12601 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12602 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12603 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12604 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12605 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12606 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12607 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1c	28
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3ffede4	67104228
***cur register edx
edx            0x148	328


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12608 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=335536128) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12609 = 5
***call stack
#0  write_verify (address=335536128) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3ffede4, size=-508) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27618 <inode_table+56>, statbuf=0x3ffede4)
    at stat.c:20
#3  0x0000f8d4 in sys_fstat (fd=3, statbuf=0x3ffede4) at stat.c:54
#4  0x0000793f in system_call () at system_call.s:94
#5  0x00000003 in startup_32 () at head.s:19
***address
$12610 = 335536128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12611 = 5
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12612 = 5
***cur state
$12613 = 0
***cur counter
$12614 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12615 = 5
***task
$12616 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12617 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12618 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12619 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12620 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12621 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12622 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5ac0c	371724
***cur register edx
edx            0x2000	8192


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12623 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=268804096) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12624 = 5
***call stack
#0  write_verify (address=268804096) at memory.c:267
#1  0x000085cd in verify_area (addr=0x5ac0c, size=7180) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x5ac0c "", count=8192)
    at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$12625 = 268804096


Breakpoint 91, write_verify (address=268808192) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12626 = 5
***call stack
#0  write_verify (address=268808192) at memory.c:267
#1  0x000085cd in verify_area (addr=0x5ac0c, size=3084) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x5ac0c "", count=8192)
    at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$12627 = 268808192


Breakpoint 91, write_verify (address=268812288) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12628 = 5
***call stack
#0  write_verify (address=268812288) at memory.c:267
#1  0x000085cd in verify_area (addr=0x5ac0c, size=-1012) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x5ac0c "", count=8192)
    at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$12629 = 268812288


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12630 = 5
***eax as return
eax            0xc0	192
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12631 = 5
***cur state
$12632 = 0
***cur counter
$12633 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12634 = 5
***task
$12635 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12636 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12637 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12638 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12639 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12640 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12641 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x46666	288358
***cur register ecx
ecx            0x3ffee54	67104340
***cur register edx
edx            0x5acae	371886


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12642 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=335536128) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12643 = 5
***call stack
#0  write_verify (address=335536128) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3ffee54, size=-396) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27810 <inode_table+560>, statbuf=0x3ffee54)
    at stat.c:20
#3  0x0000f85b in sys_stat (filename=0x46666 "\004", statbuf=0x3ffee54)
    at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x00046666 in ?? ()
***address
$12644 = 335536128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12645 = 5
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12646 = 5
***cur state
$12647 = 0
***cur counter
$12648 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12649 = 5
***task
$12650 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12651 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12652 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12653 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12654 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12655 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12656 = 5
***task
$12657 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12658 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12659 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12660 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12661 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12662 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12663 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x59ac0	367296


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12664 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$12665 = 5
***fd
$12666 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12667 = 5
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12668 = 5
***cur state
$12669 = 0
***cur counter
$12670 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12671 = 5
***task
$12672 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12673 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12674 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12675 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12676 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12677 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12678 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0xc	12
***cur register ebx
ebx            0x3ffef6a	67104618
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x59ac0	367296


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12679 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12680 = 5
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12681 = 5
***cur state
$12682 = 0
***cur counter
$12683 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12684 = 5
***task
$12685 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12686 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12687 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12688 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12689 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12690 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12691 = 5
***fault address
***cur register edx
edx            0x10048c0c	268733452
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268733452) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$12692 = 5


Breakpoint 98, un_wp_page (table_entry=0xfa8120) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$12693 = 5
***table entry
$12694 = (unsigned long *) 0xfa8120


Breakpoint 99, un_wp_page (table_entry=0xfa8120) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$12695 = 5
***physical page address
$12696 = 16683008


Breakpoint 100, un_wp_page (table_entry=0xfa8120) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$12697 = 5
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xfa8120) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$12698 = 5
***new page
$12699 = 16343040


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12700 = 5
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12701 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x48c0c	297996
***cur register edx
edx            0xa	10


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12702 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=1, buf=0x48c0c "", count=10) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$12703 = 5


Breakpoint 70, sys_write (fd=1, buf=0x48c0c "", count=10) at read_write.c:94
94			return (file->f_mode&2)?write_pipe(inode,buf,count):-EIO;
---in sys_write
___pid
$12704 = 5
***write pipe


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12705 = 5
***eax as return
eax            0xa	10
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12706 = 5
***cur state
$12707 = 0
***cur counter
$12708 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12709 = 5
***task
$12710 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12711 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12712 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12713 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12714 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12715 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12716 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x48c0c	297996
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12717 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=1, buf=0x48c0c "", count=0) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$12718 = 5


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12719 = 5
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12720 = 5
***cur state
$12721 = 0
***cur counter
$12722 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12723 = 5
***task
$12724 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12725 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12726 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12727 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12728 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12729 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12730 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x48c0c	297996
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12731 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=1, buf=0x48c0c "", count=0) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$12732 = 5


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12733 = 5
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12734 = 5
***cur state
$12735 = 0
***cur counter
$12736 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12737 = 5
***task
$12738 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12739 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12740 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12741 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12742 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12743 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12744 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12745 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=1) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$12746 = 5
***fd
$12747 = 1


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12748 = 5
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12749 = 5
***cur state
$12750 = 0
***cur counter
$12751 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12752 = 5
***task
$12753 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12754 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12755 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12756 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12757 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12758 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12759 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12760 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=2) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$12761 = 5
***fd
$12762 = 2


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12763 = 5
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12764 = 5
***cur state
$12765 = 0
***cur counter
$12766 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12767 = 5
***task
$12768 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12769 = (struct task_struct *) 0xfa9000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12770 = 5
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12771 = 5
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12772 = 5
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12773 = 5
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12774 = 5
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xfa9fec	0xfa9fec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1	1
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12775 = 5
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 6, do_exit (code=0) at exit.c:105
105		free_page_tables(get_base(current->ldt[1]),get_limit(0x0f));
---in do_exit
***pid
$12776 = 5
***father pid
$12777 = 4


Breakpoint 94, free_page_tables (from=268435456, size=1) at memory.c:116
116		for ( ; size-->0 ; dir++) {
---in free_page_tables
___pid
$12778 = 5
***from
$12779 = 268435456
***size
$12780 = 1
***dir
$12781 = (unsigned long *) 0x100 <setup_gdt+95>


Breakpoint 94, free_page_tables (from=268435456, size=16) at memory.c:116
116		for ( ; size-->0 ; dir++) {
---in free_page_tables
___pid
$12782 = 5
***from
$12783 = 268435456
***size
$12784 = 16
***dir
$12785 = (unsigned long *) 0x100 <setup_gdt+95>


Breakpoint 64, sys_close (fd=0) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$12786 = 5
***fd
$12787 = 0


Breakpoint 77, do_exit (code=0) at exit.c:131
131		tell_father(current->father);
---in do_exit
***cur state
$12788 = 3
***exit code
$12789 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x0000a49b in do_exit (code=0) at exit.c:132
#2  0x0000a4c6 in sys_exit (error_code=0) at exit.c:138
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$12790 = 3
***loop pid
$12791 = 5
***loop counter
$12792 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$12793 = 1
***loop pid
$12794 = 3
***loop counter
$12795 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$12796 = 0
***loop pid
$12797 = 4
***loop counter
$12798 = 8


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$12799 = 1
***loop pid
$12800 = 1
***loop counter
$12801 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$12802 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12803 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12804 = 4
***cur state
$12805 = 0
***cur counter
$12806 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12807 = 4
***task
$12808 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12809 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12810 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12811 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12812 = 4
***signal map
***cur register ebx
ebx            0x10000	65536
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12813 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x10	16


Breakpoint 28, ret_from_sys_call () at system_call.s:118
118		pushl %ecx
---in ret_from_sys_call
___pid
$12814 = 4
***btr ecx ebx
***ebx to signal(eax)
***inc ecx
***signal value
***cur register ecxecx            0x11	17


    ss=23) at signal.c:93
93		sa_handler = (unsigned long) sa->sa_handler;
---in do_signal
___pid
$12815 = 4


    ss=23) at signal.c:98
98				return;
---in do_signal
___pid
$12816 = 4
***be SIGCHILD


Breakpoint 29, ret_from_sys_call () at system_call.s:120
120		popl %eax
---in ret_from_sys_call
___pid
$12817 = 4
***pop eax


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12818 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x59c00	367616
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12819 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=367616) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$12820 = 4
***end_data_seg
$12821 = 367616
***cur brk
$12822 = 367616


Breakpoint 59, sys_brk (end_data_seg=367616) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$12823 = 4
***cur brk
$12824 = 367616


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12825 = 4
***eax as return
eax            0x59c00	367616
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12826 = 4
***cur state
$12827 = 0
***cur counter
$12828 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12829 = 4
***task
$12830 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12831 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12832 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12833 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12834 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12835 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12836 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5a400	369664
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12837 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=369664) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$12838 = 4
***end_data_seg
$12839 = 369664
***cur brk
$12840 = 367616


Breakpoint 59, sys_brk (end_data_seg=369664) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$12841 = 4
***cur brk
$12842 = 369664


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12843 = 4
***eax as return
eax            0x5a400	369664
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12844 = 4
***cur state
$12845 = 0
***cur counter
$12846 = 8


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12847 = 4
***task
$12848 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12849 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12850 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12851 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12852 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12853 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12854 = 4
***fault address
***cur register edx
edx            0x8059c00	134585344
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134585344) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$12855 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3164) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$12856 = 4
***table entry
$12857 = (unsigned long *) 0xff3164


Breakpoint 99, un_wp_page (table_entry=0xff3164) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$12858 = 4
***physical page address
$12859 = 16429056


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12860 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12861 = 4
***task
$12862 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12863 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12864 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$12865 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$12866 = 4
***fault address
***cur register edx
edx            0x805a000	134586368
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134586368) at memory.c:367
367	{
---in do_no_page
___pid
$12867 = 4
***address
$12868 = 134586368


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$12869 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12870 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12871 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12872 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$12873 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12874 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12875 = 4
***cur state
$12876 = 0
***cur counter
$12877 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12878 = 4
***task
$12879 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12880 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12881 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12882 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12883 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12884 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12885 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12886 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12887 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$12888 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12889 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12890 = 4
***cur state
$12891 = 0
***cur counter
$12892 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12893 = 4
***task
$12894 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12895 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12896 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12897 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12898 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12899 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12900 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12901 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12902 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$12903 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12904 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12905 = 4
***cur state
$12906 = 0
***cur counter
$12907 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12908 = 4
***task
$12909 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12910 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12911 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12912 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12913 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12914 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12915 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12916 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12917 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$12918 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12919 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12920 = 4
***cur state
$12921 = 0
***cur counter
$12922 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12923 = 4
***task
$12924 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12925 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12926 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12927 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12928 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12929 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12930 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12931 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12932 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$12933 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12934 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12935 = 4
***cur state
$12936 = 0
***cur counter
$12937 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12938 = 4
***task
$12939 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12940 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12941 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12942 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12943 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12944 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12945 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12946 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12947 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$12948 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12949 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12950 = 4
***cur state
$12951 = 0
***cur counter
$12952 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12953 = 4
***task
$12954 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12955 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12956 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12957 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12958 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12959 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12960 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12961 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12962 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$12963 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12964 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12965 = 4
***cur state
$12966 = 0
***cur counter
$12967 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12968 = 4
***task
$12969 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12970 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12971 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12972 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12973 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12974 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12975 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12976 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12977 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bc "\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^"..., count=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$12978 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12979 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12980 = 4
***cur state
$12981 = 0
***cur counter
$12982 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12983 = 4
***task
$12984 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$12985 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$12986 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$12987 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$12988 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$12989 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$12990 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$12991 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$12992 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$12993 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$12994 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$12995 = 4
***cur state
$12996 = 0
***cur counter
$12997 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$12998 = 4
***task
$12999 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$13000 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13001 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13002 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13003 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13004 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13005 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13006 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$13007 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$13008 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13009 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13010 = 4
***cur state
$13011 = 0
***cur counter
$13012 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13013 = 4
***task
$13014 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$13015 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13016 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13017 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13018 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13019 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13020 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13021 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$13022 = 4
***fd
$13023 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13024 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13025 = 4
***cur state
$13026 = 0
***cur counter
$13027 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13028 = 4
***task
$13029 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$13030 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13031 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13032 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13033 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13034 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13035 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x46258	287320
***cur register edx
edx            0x58680	362112


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13036 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$13037 = 4
***fd
$13038 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13039 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13040 = 4
***cur state
$13041 = 0
***cur counter
$13042 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13043 = 4
***task
$13044 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xfa9000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$13045 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13046 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13047 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13048 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13049 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13050 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x7	7
***cur register ebx
ebx            0x5	5
***cur register ecx
ecx            0x3fff0b0	67104944
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13051 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 7, sys_waitpid (pid=5, stat_addr=0x3fff0b0, options=0) at exit.c:146
146		verify_area(stat_addr,4);
---in sys_waitpid
___pid
$13052 = 4


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$13053 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0b0, size=-3916) at fork.c:35
#2  0x0000a4ea in sys_waitpid (pid=5, stat_addr=0x3fff0b0, options=0)
    at exit.c:146
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000005 in startup_32 () at head.s:19
***address
$13054 = 201322496


Breakpoint 78, release (p=0xfa9000) at exit.c:28
28				free_page((long)p);
---in release
___pid
$13055 = 4
***call free_page
***release pid
$13056 = 5


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00009e90 in release (p=0xfa9000) at exit.c:29
#2  0x0000a683 in sys_waitpid (pid=5, stat_addr=0x3fff0b0, options=0)
    at exit.c:175
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000005 in startup_32 () at head.s:19


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$13057 = 1
***loop pid
$13058 = 3
***loop counter
$13059 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$13060 = 0
***loop pid
$13061 = 4
***loop counter
$13062 = 7


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$13063 = 1
***loop pid
$13064 = 1
***loop counter
$13065 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$13066 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13067 = 4
***eax as return
eax            0x5	5
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13068 = 4
***cur state
$13069 = 0
***cur counter
$13070 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13071 = 4
***task
$13072 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13073 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13074 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13075 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13076 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13077 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13078 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x10c7e	68734
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x5	5


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13079 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    flag=0, mode=1) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$13080 = 4
***open filename
$13081 = 64 '@'
***fd
$13082 = 3


    flag=0, mode=1) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$13083 = 4
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13084 = 4
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13085 = 4
***cur state
$13086 = 0
***cur counter
$13087 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13088 = 4
***task
$13089 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13090 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13091 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13092 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13093 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13094 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13095 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x451a8	283048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13096 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=3, cmd=21505, arg=283048) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$13097 = 4
***fd
$13098 = 3


Breakpoint 61, sys_ioctl (fd=3, cmd=21505, arg=283048) at ioctl.c:40
40		dev = filp->f_inode->i_zone[0];
---in sys_ioctl
___pid
$13099 = 4
***mode and fd right
***dev
$13100 = 3


Breakpoint 91, write_verify (address=134500352) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$13101 = 4
***call stack
#0  write_verify (address=134500352) at memory.c:267
#1  0x000085cd in verify_area (addr=0x451a8, size=-3636) at fork.c:35
#2  0x00019486 in get_termios (tty=0x234c0 <tty_table>, termios=0x451a8)
    at tty_ioctl.c:60
#3  0x0001976f in tty_ioctl (dev=0, cmd=21505, arg=283048) at tty_ioctl.c:127
#4  0x00013a54 in sys_ioctl (fd=3, cmd=21505, arg=283048) at ioctl.c:45
#5  0x0000793f in system_call () at system_call.s:94
#6  0x00000003 in startup_32 () at head.s:19
***address
$13102 = 134500352


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13103 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13104 = 4
***cur state
$13105 = 0
***cur counter
$13106 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13107 = 4
***task
$13108 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13109 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13110 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13111 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13112 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13113 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13114 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x451a8	283048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13115 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$13116 = 4
***fd
$13117 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13118 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13119 = 4
***cur state
$13120 = 0
***cur counter
$13121 = 7


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13122 = 4
***task
$13123 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13124 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13125 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13126 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13127 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13128 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$13129 = 4
***fault address
***cur register edx
edx            0x804d00d	134533133
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134533133) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$13130 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3134) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$13131 = 4
***table entry
$13132 = (unsigned long *) 0xff3134


Breakpoint 99, un_wp_page (table_entry=0xff3134) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$13133 = 4
***physical page address
$13134 = 16547840


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$13135 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$13136 = 4
***fault address
***cur register edx
edx            0x8048038	134512696
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134512696) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$13137 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3120) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$13138 = 4
***table entry
$13139 = (unsigned long *) 0xff3120


Breakpoint 99, un_wp_page (table_entry=0xff3120) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$13140 = 4
***physical page address
$13141 = 16683008


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$13142 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$13143 = 4
***fault address
***cur register edx
edx            0x8047eb8	134512312
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134512312) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$13144 = 4


Breakpoint 98, un_wp_page (table_entry=0xff311c) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$13145 = 4
***table entry
$13146 = (unsigned long *) 0xff311c


Breakpoint 99, un_wp_page (table_entry=0xff311c) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$13147 = 4
***physical page address
$13148 = 16687104


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$13149 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$13150 = 4
***fault address
***cur register edx
edx            0x804238c	134488972
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134488972) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$13151 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3108) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$13152 = 4
***table entry
$13153 = (unsigned long *) 0xff3108


Breakpoint 99, un_wp_page (table_entry=0xff3108) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$13154 = 4
***physical page address
$13155 = 16576512


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$13156 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$13157 = 4
***fault address
***cur register edx
edx            0x80315e8	134419944
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134419944) at memory.c:367
367	{
---in do_no_page
___pid
$13158 = 4
***address
$13159 = 134419944


Breakpoint 103, do_no_page (error_code=4, address=134418432) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$13160 = 4
***page
$13161 = 16719872
***block
$13162 = 197


Breakpoint 42, do_no_page (error_code=4, address=134418432) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$13163 = 4
***nr array$13164 = 1020
$13165 = 1021
$13166 = 1022
$13167 = 1023


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13168 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c284) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c284) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16719872, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134418432) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13169 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13170 = 4
***drive
$13171 = 0
***head
$13172 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13173 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13174 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c2a8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c2a8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16719872, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134418432) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13175 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13176 = 4
***drive
$13177 = 0
***head
$13178 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13179 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13180 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c2cc) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c2cc) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16719872, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134418432) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13181 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13182 = 4
***drive
$13183 = 0
***head
$13184 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13185 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13186 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c2f0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c2f0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16719872, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134418432) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13187 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13188 = 4
***drive
$13189 = 0
***head
$13190 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13191 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$13192 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$13193 = 4
***fault address
***cur register edx
edx            0x804a000	134520832
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134520832) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$13194 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3128) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$13195 = 4
***table entry
$13196 = (unsigned long *) 0xff3128


Breakpoint 99, un_wp_page (table_entry=0xff3128) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$13197 = 4
***physical page address
$13198 = 16613376


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$13199 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$13200 = 4
***fault address
***cur register edx
edx            0x80430f4	134492404
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134492404) at memory.c:367
367	{
---in do_no_page
___pid
$13201 = 4
***address
$13202 = 134492404


Breakpoint 103, do_no_page (error_code=6, address=134492160) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$13203 = 4
***page
$13204 = 16711680
***block
$13205 = 269


Breakpoint 42, do_no_page (error_code=6, address=134492160) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$13206 = 4
***nr array$13207 = 1092
$13208 = 1093
$13209 = 1094
$13210 = 1095


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13211 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c314) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c314) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16711680, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=6, address=134492160) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000006 in startup_32 () at head.s:20


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13212 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13213 = 4
***drive
$13214 = 0
***head
$13215 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13216 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13217 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c338) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c338) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16711680, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=6, address=134492160) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000006 in startup_32 () at head.s:20


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13218 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13219 = 4
***drive
$13220 = 0
***head
$13221 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13222 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13223 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c35c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c35c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16711680, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=6, address=134492160) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000006 in startup_32 () at head.s:20


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13224 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13225 = 4
***drive
$13226 = 0
***head
$13227 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13228 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13229 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c380) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c380) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16711680, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=6, address=134492160) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000006 in startup_32 () at head.s:20


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13230 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13231 = 4
***drive
$13232 = 0
***head
$13233 = 9


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13234 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$13235 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13236 = 4
***task
$13237 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13238 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13239 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13240 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13241 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13242 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13243 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x1730	5936
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13244 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$13245 = 4
***signum
$13246 = 2


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$13247 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13248 = 4
***eax as return
eax            0x1730	5936
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13249 = 4
***cur state
$13250 = 0
***cur counter
$13251 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13252 = 4
***task
$13253 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13254 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13255 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13256 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13257 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13258 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$13259 = 4
***fault address
***cur register edx
edx            0x802cb58	134400856
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134400856) at memory.c:367
367	{
---in do_no_page
___pid
$13260 = 4
***address
$13261 = 134400856


Breakpoint 103, do_no_page (error_code=4, address=134397952) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$13262 = 4
***page
$13263 = 16695296
***block
$13264 = 177


Breakpoint 42, do_no_page (error_code=4, address=134397952) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$13265 = 4
***nr array$13266 = 1000
$13267 = 1001
$13268 = 1002
$13269 = 1003


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13270 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c3a4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c3a4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16695296, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134397952) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13271 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13272 = 4
***drive
$13273 = 0
***head
$13274 = 4


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13275 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13276 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c3c8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c3c8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16695296, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134397952) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13277 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13278 = 4
***drive
$13279 = 0
***head
$13280 = 4


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13281 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13282 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c3ec) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c3ec) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16695296, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134397952) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13283 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13284 = 4
***drive
$13285 = 0
***head
$13286 = 4


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13287 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13288 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c410) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c410) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16695296, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134397952) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13289 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13290 = 4
***drive
$13291 = 0
***head
$13292 = 4


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13293 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$13294 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$13295 = 4
***fault address
***cur register edx
edx            0x802db34	134404916
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134404916) at memory.c:367
367	{
---in do_no_page
___pid
$13296 = 4
***address
$13297 = 134404916


Breakpoint 103, do_no_page (error_code=4, address=134402048) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$13298 = 4
***page
$13299 = 16691200
***block
$13300 = 181


Breakpoint 42, do_no_page (error_code=4, address=134402048) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$13301 = 4
***nr array$13302 = 1004
$13303 = 1005
$13304 = 1006
$13305 = 1007


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13306 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c434) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c434) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16691200, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134402048) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13307 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13308 = 4
***drive
$13309 = 0
***head
$13310 = 4


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13311 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13312 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c458) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c458) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16691200, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134402048) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13313 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13314 = 4
***drive
$13315 = 0
***head
$13316 = 4


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13317 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13318 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c47c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c47c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16691200, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134402048) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13319 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13320 = 4
***drive
$13321 = 0
***head
$13322 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13323 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13324 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c4a0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c4a0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16691200, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134402048) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13325 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13326 = 4
***drive
$13327 = 0
***head
$13328 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13329 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$13330 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13331 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5a400	369664
***cur register ecx
ecx            0x47e54	294484
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13332 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=369664) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$13333 = 4
***end_data_seg
$13334 = 369664
***cur brk
$13335 = 369664


Breakpoint 59, sys_brk (end_data_seg=369664) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$13336 = 4
***cur brk
$13337 = 369664


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13338 = 4
***eax as return
eax            0x5a400	369664
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13339 = 4
***cur state
$13340 = 0
***cur counter
$13341 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13342 = 4
***task
$13343 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13344 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13345 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13346 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13347 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13348 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13349 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5b400	373760
***cur register ecx
ecx            0xc	12
***cur register edx
edx            0x1000	4096


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13350 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=373760) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$13351 = 4
***end_data_seg
$13352 = 373760
***cur brk
$13353 = 369664


Breakpoint 59, sys_brk (end_data_seg=373760) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$13354 = 4
***cur brk
$13355 = 373760


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13356 = 4
***eax as return
eax            0x5b400	373760
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13357 = 4
***cur state
$13358 = 0
***cur counter
$13359 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13360 = 4
***task
$13361 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13362 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13363 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13364 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13365 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13366 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13367 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5b400	373760
***cur register ecx
ecx            0x800	2048
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13368 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=373760) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$13369 = 4
***end_data_seg
$13370 = 373760
***cur brk
$13371 = 373760


Breakpoint 59, sys_brk (end_data_seg=373760) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$13372 = 4
***cur brk
$13373 = 373760


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13374 = 4
***eax as return
eax            0x5b400	373760
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13375 = 4
***cur state
$13376 = 0
***cur counter
$13377 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13378 = 4
***task
$13379 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13380 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13381 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13382 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13383 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13384 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13385 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5c400	377856
***cur register ecx
ecx            0xc	12
***cur register edx
edx            0x1000	4096


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13386 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=377856) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$13387 = 4
***end_data_seg
$13388 = 377856
***cur brk
$13389 = 373760


Breakpoint 59, sys_brk (end_data_seg=377856) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$13390 = 4
***cur brk
$13391 = 377856


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13392 = 4
***eax as return
eax            0x5c400	377856
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13393 = 4
***cur state
$13394 = 0
***cur counter
$13395 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13396 = 4
***task
$13397 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13398 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13399 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13400 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13401 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13402 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$13403 = 4
***fault address
***cur register edx
edx            0x805b400	134591488
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134591488) at memory.c:367
367	{
---in do_no_page
___pid
$13404 = 4
***address
$13405 = 134591488


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$13406 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13407 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x37fb0	229296
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13408 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 65, sys_open (filename=0x37fb0 "", flag=0, mode=0) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$13409 = 4
***open filename
$13410 = 0 '\000'
***fd
$13411 = 3


Breakpoint 66, sys_open (filename=0x37fb0 "", flag=0, mode=0) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$13412 = 4
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13413 = 4
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13414 = 4
***cur state
$13415 = 0
***cur counter
$13416 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13417 = 4
***task
$13418 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13419 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13420 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13421 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13422 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13423 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13424 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5c400	377856
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13425 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=377856) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$13426 = 4
***end_data_seg
$13427 = 377856
***cur brk
$13428 = 377856


Breakpoint 59, sys_brk (end_data_seg=377856) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$13429 = 4
***cur brk
$13430 = 377856


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13431 = 4
***eax as return
eax            0x5c400	377856
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13432 = 4
***cur state
$13433 = 0
***cur counter
$13434 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13435 = 4
***task
$13436 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13437 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13438 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13439 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13440 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13441 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13442 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5d400	381952
***cur register ecx
ecx            0xc	12
***cur register edx
edx            0x1000	4096


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13443 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=381952) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$13444 = 4
***end_data_seg
$13445 = 381952
***cur brk
$13446 = 377856


Breakpoint 59, sys_brk (end_data_seg=381952) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$13447 = 4
***cur brk
$13448 = 381952


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13449 = 4
***eax as return
eax            0x5d400	381952
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13450 = 4
***cur state
$13451 = 0
***cur counter
$13452 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13453 = 4
***task
$13454 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13455 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13456 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13457 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13458 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13459 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$13460 = 4
***fault address
***cur register edx
edx            0x805c400	134595584
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134595584) at memory.c:367
367	{
---in do_no_page
___pid
$13461 = 4
***address
$13462 = 134595584


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$13463 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13464 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x13	19
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13465 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13466 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13467 = 4
***cur state
$13468 = 0
***cur counter
$13469 = 6


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13470 = 4
***task
$13471 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13472 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13473 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13474 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13475 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13476 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13477 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5c40c	377868
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13478 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=134594560) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$13479 = 4
***call stack
#0  write_verify (address=134594560) at memory.c:267
#1  0x000085cd in verify_area (addr=0x5c40c, size=-1012) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x5c40c "", count=2048)
    at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$13480 = 134594560


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13481 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c4c4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c4c4) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=3454) at buffer.c:278
#5  0x0000f3ad in file_read (inode=0x27b20 <inode_table+1344>, 
    filp=0x29780 <file_table+32>, buf=0x5c40c "", count=1034) at file_dev.c:26
#6  0x0000c524 in sys_read (fd=3, buf=0x5c40c "", count=1034)
    at read_write.c:77
#7  0x0000793f in system_call () at system_call.s:94
#8  0x00000003 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13482 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13483 = 4
***drive
$13484 = 0
***head
$13485 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13486 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13487 = 4
***task
$13488 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13489 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13490 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$13491 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13492 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c4e8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c4e8) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=3455) at buffer.c:278
#5  0x0000f3ad in file_read (inode=0x27b20 <inode_table+1344>, 
    filp=0x29780 <file_table+32>, buf=0x5c80c "", count=1034) at file_dev.c:26
#6  0x0000c524 in sys_read (fd=3, buf=0x5c40c "", count=1034)
    at read_write.c:77
#7  0x0000793f in system_call () at system_call.s:94
#8  0x00000003 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13493 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13494 = 4
***drive
$13495 = 0
***head
$13496 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13497 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13498 = 4
***eax as return
eax            0x40a	1034
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13499 = 4
***cur state
$13500 = 0
***cur counter
$13501 = 5


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13502 = 4
***task
$13503 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13504 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13505 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13506 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13507 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13508 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13509 = 4
***task
$13510 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13511 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13512 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13513 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13514 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13515 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13516 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5b40a	373770
***cur register edx
edx            0x37fad	229293


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13517 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$13518 = 4
***fd
$13519 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13520 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13521 = 4
***cur state
$13522 = 0
***cur counter
$13523 = 4


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13524 = 4
***task
$13525 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13526 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13527 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13528 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13529 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13530 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13531 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x5413	21523
***cur register edx
edx            0x3fff5b8	67106232


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13532 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=0, cmd=21523, arg=67106232) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$13533 = 4
***fd
$13534 = 0


Breakpoint 61, sys_ioctl (fd=0, cmd=21523, arg=67106232) at ioctl.c:40
40		dev = filp->f_inode->i_zone[0];
---in sys_ioctl
___pid
$13535 = 4
***mode and fd right
***dev
$13536 = 376832


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13537 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13538 = 4
***cur state
$13539 = 0
***cur counter
$13540 = 4


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13541 = 4
***task
$13542 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13543 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13544 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13545 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13546 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13547 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13548 = 4
***task
$13549 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13550 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13551 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13552 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13553 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13554 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13555 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fff5a4	67106212


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13556 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=0, cmd=21505, arg=67106212) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$13557 = 4
***fd
$13558 = 0


Breakpoint 61, sys_ioctl (fd=0, cmd=21505, arg=67106212) at ioctl.c:40
40		dev = filp->f_inode->i_zone[0];
---in sys_ioctl
___pid
$13559 = 4
***mode and fd right
***dev
$13560 = 1024


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$13561 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5a4, size=-2616) at fork.c:35
#2  0x00019486 in get_termios (tty=0x234c0 <tty_table>, termios=0x3fff5a4)
    at tty_ioctl.c:60
#3  0x0001976f in tty_ioctl (dev=0, cmd=21505, arg=67106212) at tty_ioctl.c:127
#4  0x00013a54 in sys_ioctl (fd=0, cmd=21505, arg=67106212) at ioctl.c:45
#5  0x0000793f in system_call () at system_call.s:94
#6  0x00000000 in ?? ()
***address
$13562 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13563 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13564 = 4
***cur state
$13565 = 0
***cur counter
$13566 = 3


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13567 = 4
***task
$13568 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13569 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13570 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13571 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13572 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13573 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13574 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5d400	381952
***cur register ecx
ecx            0x4a00c	303116
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13575 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=381952) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$13576 = 4
***end_data_seg
$13577 = 381952
***cur brk
$13578 = 381952


Breakpoint 59, sys_brk (end_data_seg=381952) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$13579 = 4
***cur brk
$13580 = 381952


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13581 = 4
***eax as return
eax            0x5d400	381952
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13582 = 4
***cur state
$13583 = 0
***cur counter
$13584 = 3


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13585 = 4
***task
$13586 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13587 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13588 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13589 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13590 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13591 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13592 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5dc00	384000
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13593 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=384000) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$13594 = 4
***end_data_seg
$13595 = 384000
***cur brk
$13596 = 381952


Breakpoint 59, sys_brk (end_data_seg=384000) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$13597 = 4
***cur brk
$13598 = 384000


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13599 = 4
***eax as return
eax            0x5dc00	384000
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13600 = 4
***cur state
$13601 = 0
***cur counter
$13602 = 3


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13603 = 4
***task
$13604 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13605 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13606 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13607 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13608 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13609 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$13610 = 4
***fault address
***cur register edx
edx            0x805d400	134599680
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134599680) at memory.c:367
367	{
---in do_no_page
___pid
$13611 = 4
***address
$13612 = 134599680


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$13613 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13614 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5dc00	384000
***cur register ecx
ecx            0x4d00c	315404
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13615 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=384000) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$13616 = 4
***end_data_seg
$13617 = 384000
***cur brk
$13618 = 384000


Breakpoint 59, sys_brk (end_data_seg=384000) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$13619 = 4
***cur brk
$13620 = 384000


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13621 = 4
***eax as return
eax            0x5dc00	384000
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13622 = 4
***cur state
$13623 = 0
***cur counter
$13624 = 3


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13625 = 4
***task
$13626 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13627 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13628 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13629 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13630 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13631 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13632 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5e400	386048
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13633 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=386048) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$13634 = 4
***end_data_seg
$13635 = 386048
***cur brk
$13636 = 384000


Breakpoint 59, sys_brk (end_data_seg=386048) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$13637 = 4
***cur brk
$13638 = 386048


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13639 = 4
***eax as return
eax            0x5e400	386048
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13640 = 4
***cur state
$13641 = 0
***cur counter
$13642 = 3


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13643 = 4
***task
$13644 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13645 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13646 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13647 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13648 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13649 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$13650 = 4
***fault address
***cur register edx
edx            0x805e000	134602752
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134602752) at memory.c:367
367	{
---in do_no_page
___pid
$13651 = 4
***address
$13652 = 134602752


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$13653 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13654 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x5864c	362060
***cur register ecx
ecx            0x3fff594	67106196
***cur register edx
edx            0x47c8c	294028


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13655 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13656 = 4
***eax as return
eax            0xfffffffe	-2
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13657 = 4
***cur state
$13658 = 0
***cur counter
$13659 = 3


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13660 = 4
***task
$13661 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13662 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13663 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13664 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13665 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13666 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$13667 = 4
***fault address
***cur register edx
edx            0x80301c0	134414784
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134414784) at memory.c:367
367	{
---in do_no_page
___pid
$13668 = 4
***address
$13669 = 134414784


Breakpoint 103, do_no_page (error_code=4, address=134414336) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$13670 = 4
***page
$13671 = 16412672
***block
$13672 = 193


Breakpoint 42, do_no_page (error_code=4, address=134414336) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$13673 = 4
***nr array$13674 = 1016
$13675 = 1017
$13676 = 1018
$13677 = 1019


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13678 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c50c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c50c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16412672, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134414336) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13679 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13680 = 4
***drive
$13681 = 0
***head
$13682 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13683 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13684 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c530) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c530) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16412672, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134414336) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13685 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13686 = 4
***drive
$13687 = 0
***head
$13688 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13689 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13690 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c554) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c554) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16412672, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134414336) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13691 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13692 = 4
***drive
$13693 = 0
***head
$13694 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13695 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13696 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c578) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c578) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16412672, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134414336) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13697 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13698 = 4
***drive
$13699 = 0
***head
$13700 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13701 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$13702 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$13703 = 4
***fault address
***cur register edx
edx            0x802e1ec	134406636
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134406636) at memory.c:367
367	{
---in do_no_page
___pid
$13704 = 4
***address
$13705 = 134406636


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13706 = 4
***task
$13707 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13708 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13709 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$13710 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 103, do_no_page (error_code=4, address=134406144) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$13711 = 4
***page
$13712 = 16384000
***block
$13713 = 185


Breakpoint 42, do_no_page (error_code=4, address=134406144) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$13714 = 4
***nr array$13715 = 1008
$13716 = 1009
$13717 = 1010
$13718 = 1011


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13719 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c59c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c59c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16384000, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134406144) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13720 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13721 = 4
***drive
$13722 = 0
***head
$13723 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13724 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13725 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c5c0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c5c0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16384000, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134406144) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13726 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13727 = 4
***drive
$13728 = 0
***head
$13729 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13730 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13731 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c5e4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c5e4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16384000, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134406144) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13732 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13733 = 4
***drive
$13734 = 0
***head
$13735 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13736 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13737 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c608) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c608) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16384000, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134406144) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$13738 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$13739 = 4
***drive
$13740 = 0
***head
$13741 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$13742 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$13743 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13744 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fff5b4	67106228


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13745 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=0, cmd=21505, arg=67106228) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$13746 = 4
***fd
$13747 = 0


Breakpoint 61, sys_ioctl (fd=0, cmd=21505, arg=67106228) at ioctl.c:40
40		dev = filp->f_inode->i_zone[0];
---in sys_ioctl
___pid
$13748 = 4
***mode and fd right
***dev
$13749 = 16388096


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$13750 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5b4, size=-2600) at fork.c:35
#2  0x00019486 in get_termios (tty=0x234c0 <tty_table>, termios=0x3fff5b4)
    at tty_ioctl.c:60
#3  0x0001976f in tty_ioctl (dev=0, cmd=21505, arg=67106228) at tty_ioctl.c:127
#4  0x00013a54 in sys_ioctl (fd=0, cmd=21505, arg=67106228) at ioctl.c:45
#5  0x0000793f in system_call () at system_call.s:94
#6  0x00000000 in ?? ()
***address
$13751 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13752 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13753 = 4
***cur state
$13754 = 0
***cur counter
$13755 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13756 = 4
***task
$13757 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13758 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13759 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13760 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13761 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13762 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13763 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x5403	21507
***cur register edx
edx            0x3fff5b4	67106228


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13764 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=0, cmd=21507, arg=67106228) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$13765 = 4
***fd
$13766 = 0


Breakpoint 61, sys_ioctl (fd=0, cmd=21507, arg=67106228) at ioctl.c:40
40		dev = filp->f_inode->i_zone[0];
---in sys_ioctl
___pid
$13767 = 4
***mode and fd right
***dev
$13768 = 1024


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13769 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13770 = 4
***cur state
$13771 = 0
***cur counter
$13772 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13773 = 4
***task
$13774 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13775 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13776 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13777 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13778 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13779 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13780 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x540a	21514
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13781 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=0, cmd=21514, arg=1) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$13782 = 4
***fd
$13783 = 0


Breakpoint 61, sys_ioctl (fd=0, cmd=21514, arg=1) at ioctl.c:40
40		dev = filp->f_inode->i_zone[0];
---in sys_ioctl
___pid
$13784 = 4
***mode and fd right
***dev
$13785 = 1024


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13786 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13787 = 4
***cur state
$13788 = 0
***cur counter
$13789 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13790 = 4
***task
$13791 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13792 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13793 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13794 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13795 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13796 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13797 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x2c264	180836
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13798 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$13799 = 4
***signum
$13800 = 2


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$13801 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13802 = 4
***eax as return
eax            0x1730	5936
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13803 = 4
***cur state
$13804 = 0
***cur counter
$13805 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13806 = 4
***task
$13807 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13808 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13809 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13810 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13811 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13812 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13813 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xe	14
***cur register ecx
ecx            0x2c264	180836
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13814 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$13815 = 4
***signum
$13816 = 14


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$13817 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13818 = 4
***eax as return
eax            0x1534	5428
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13819 = 4
***cur state
$13820 = 0
***cur counter
$13821 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13822 = 4
***task
$13823 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13824 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13825 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13826 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13827 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13828 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13829 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x2c264	180836
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13830 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$13831 = 4
***signum
$13832 = 20


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$13833 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13834 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13835 = 4
***cur state
$13836 = 0
***cur counter
$13837 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13838 = 4
***task
$13839 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13840 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13841 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13842 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13843 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13844 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13845 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13846 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$13847 = 4
***signum
$13848 = 20


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$13849 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13850 = 4
***eax as return
eax            0x2c264	180836
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13851 = 4
***cur state
$13852 = 0
***cur counter
$13853 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13854 = 4
***task
$13855 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13856 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13857 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13858 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13859 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13860 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13861 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x16	22
***cur register ecx
ecx            0x2c264	180836
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13862 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$13863 = 4
***signum
$13864 = 22


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$13865 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13866 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13867 = 4
***cur state
$13868 = 0
***cur counter
$13869 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13870 = 4
***task
$13871 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13872 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13873 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13874 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13875 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13876 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13877 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x15	21
***cur register ecx
ecx            0x2c264	180836
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13878 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$13879 = 4
***signum
$13880 = 21


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$13881 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13882 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13883 = 4
***cur state
$13884 = 0
***cur counter
$13885 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13886 = 4
***task
$13887 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13888 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13889 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13890 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13891 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13892 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13893 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x16	22
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13894 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$13895 = 4
***signum
$13896 = 22


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$13897 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13898 = 4
***eax as return
eax            0x2c264	180836
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13899 = 4
***cur state
$13900 = 0
***cur counter
$13901 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13902 = 4
***task
$13903 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13904 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13905 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13906 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13907 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13908 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13909 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x15	21
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13910 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$13911 = 4
***signum
$13912 = 21


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$13913 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13914 = 4
***eax as return
eax            0x2c264	180836
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13915 = 4
***cur state
$13916 = 0
***cur counter
$13917 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13918 = 4
***task
$13919 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13920 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13921 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13922 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13923 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13924 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13925 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5e400	386048
***cur register ecx
ecx            0x2c264	180836
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13926 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=386048) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$13927 = 4
***end_data_seg
$13928 = 386048
***cur brk
$13929 = 386048


Breakpoint 59, sys_brk (end_data_seg=386048) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$13930 = 4
***cur brk
$13931 = 386048


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13932 = 4
***eax as return
eax            0x5e400	386048
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13933 = 4
***cur state
$13934 = 0
***cur counter
$13935 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13936 = 4
***task
$13937 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13938 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13939 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13940 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13941 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13942 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13943 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5ec00	388096
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13944 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=388096) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$13945 = 4
***end_data_seg
$13946 = 388096
***cur brk
$13947 = 386048


Breakpoint 59, sys_brk (end_data_seg=388096) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$13948 = 4
***cur brk
$13949 = 388096


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13950 = 4
***eax as return
eax            0x5ec00	388096
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13951 = 4
***cur state
$13952 = 0
***cur counter
$13953 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13954 = 4
***task
$13955 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13956 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13957 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13958 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13959 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13960 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13961 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5ec00	388096
***cur register ecx
ecx            0x400	1024
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13962 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=388096) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$13963 = 4
***end_data_seg
$13964 = 388096
***cur brk
$13965 = 388096


Breakpoint 59, sys_brk (end_data_seg=388096) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$13966 = 4
***cur brk
$13967 = 388096


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13968 = 4
***eax as return
eax            0x5ec00	388096
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13969 = 4
***cur state
$13970 = 0
***cur counter
$13971 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13972 = 4
***task
$13973 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13974 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13975 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13976 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13977 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13978 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$13979 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5f400	390144
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$13980 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=390144) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$13981 = 4
***end_data_seg
$13982 = 390144
***cur brk
$13983 = 388096


Breakpoint 59, sys_brk (end_data_seg=390144) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$13984 = 4
***cur brk
$13985 = 390144


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$13986 = 4
***eax as return
eax            0x5f400	390144
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$13987 = 4
***cur state
$13988 = 0
***cur counter
$13989 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$13990 = 4
***task
$13991 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$13992 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$13993 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$13994 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$13995 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$13996 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$13997 = 4
***fault address
***cur register edx
edx            0x805f00c	134606860
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=134606860) at memory.c:367
367	{
---in do_no_page
___pid
$13998 = 4
***address
$13999 = 134606860


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$14000 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14001 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x4840c	295948
***cur register edx
edx            0xd	13


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14002 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=2, buf=0x4840c "", count=13) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$14003 = 4


Breakpoint 71, sys_write (fd=2, buf=0x4840c "", count=13) at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$14004 = 4
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$14005 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14006 = 4
***eax as return
eax            0xd	13
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14007 = 4
***cur state
$14008 = 0
***cur counter
$14009 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14010 = 4
***task
$14011 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14012 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$14013 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$14014 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$14015 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$14016 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$14017 = 4
***fault address
***cur register edx
edx            0x8032ef0	134426352
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134426352) at memory.c:367
367	{
---in do_no_page
___pid
$14018 = 4
***address
$14019 = 134426352


Breakpoint 103, do_no_page (error_code=4, address=134422528) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$14020 = 4
***page
$14021 = 16375808
***block
$14022 = 201


Breakpoint 42, do_no_page (error_code=4, address=134422528) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$14023 = 4
***nr array$14024 = 1024
$14025 = 1025
$14026 = 1026
$14027 = 1027


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$14028 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c62c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c62c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16375808, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134422528) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$14029 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$14030 = 4
***drive
$14031 = 0
***head
$14032 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$14033 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$14034 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c650) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c650) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16375808, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134422528) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$14035 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$14036 = 4
***drive
$14037 = 0
***head
$14038 = 6


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$14039 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$14040 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c674) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c674) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16375808, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134422528) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$14041 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$14042 = 4
***drive
$14043 = 0
***head
$14044 = 6


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$14045 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$14046 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c698) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c698) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16375808, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134422528) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$14047 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$14048 = 4
***drive
$14049 = 0
***head
$14050 = 6


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$14051 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$14052 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14053 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5a0	67106208
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14054 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$14055 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5a0, size=-2655) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5acount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$14056 = 201322496


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x0000701c in interruptible_sleep_on (p=0x23d1c <tty_table+2140>)
    at sched.c:179
#2  0x00016672 in sleep_if_empty (queue=0x23d10 <tty_table+2128>)
    at tty_io.c:126
#3  0x00016f24 in tty_read (channel=0, buf=0x3fff5a0 "qm\001", nr=1)
    at tty_io.c:258
#4  0x0000f0a0 in rw_ttyx (rw=0, minor=0, 
    buf=0x3fff5a0 <incomplete sequence \360>, count=1, 
    pos=0x2977c <file_table+28>) at char_dev.c:23
#5  0x0000f2f6 in rw_char (rw=0, dev=1024, 
    buf=0x3fff5a0 <incomplete sequence \360>, count=1, 
    pos=0x2977c <file_table+28>) at char_dev.c:103
#6  0x0000c45e in sys_read (fd=0, 
    buf=0x3fff5acount=1) at read_write.c:69
#7  0x0000793f in system_call () at system_call.s:94
#8  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14057 = 1
***loop pid
$14058 = 3
***loop counter
$14059 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14060 = 1
***loop pid
$14061 = 4
***loop counter
$14062 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14063 = 1
***loop pid
$14064 = 1
***loop counter
$14065 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14066 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14067 = 0
***task
$14068 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14069 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14070 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14071 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14072 = 0
***cur state
$14073 = 1
***cur counter
$14074 = 13


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14075 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14076 = 1
***loop pid
$14077 = 3
***loop counter
$14078 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14079 = 1
***loop pid
$14080 = 4
***loop counter
$14081 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14082 = 1
***loop pid
$14083 = 1
***loop counter
$14084 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14085 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14086 = 0
***task
$14087 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14088 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14089 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14090 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14091 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14092 = 1
***loop pid
$14093 = 3
***loop counter
$14094 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14095 = 1
***loop pid
$14096 = 4
***loop counter
$14097 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14098 = 1
***loop pid
$14099 = 1
***loop counter
$14100 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14101 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14102 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14103 = 0
***cur state
$14104 = 1
***cur counter
$14105 = 13


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14106 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14107 = 1
***loop pid
$14108 = 3
***loop counter
$14109 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14110 = 1
***loop pid
$14111 = 4
***loop counter
$14112 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14113 = 1
***loop pid
$14114 = 1
***loop counter
$14115 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14116 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14117 = 0
***task
$14118 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14119 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14120 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14121 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14122 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14123 = 1
***loop pid
$14124 = 3
***loop counter
$14125 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14126 = 1
***loop pid
$14127 = 4
***loop counter
$14128 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14129 = 1
***loop pid
$14130 = 1
***loop counter
$14131 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14132 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14133 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14134 = 0
***cur state
$14135 = 1
***cur counter
$14136 = 13


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14137 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14138 = 1
***loop pid
$14139 = 3
***loop counter
$14140 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14141 = 1
***loop pid
$14142 = 4
***loop counter
$14143 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14144 = 1
***loop pid
$14145 = 1
***loop counter
$14146 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14147 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14148 = 0
***task
$14149 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14150 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14151 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14152 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14153 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14154 = 1
***loop pid
$14155 = 3
***loop counter
$14156 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14157 = 1
***loop pid
$14158 = 4
***loop counter
$14159 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14160 = 1
***loop pid
$14161 = 1
***loop counter
$14162 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14163 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14164 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14165 = 0
***cur state
$14166 = 1
***cur counter
$14167 = 13


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14168 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14169 = 1
***loop pid
$14170 = 3
***loop counter
$14171 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14172 = 1
***loop pid
$14173 = 4
***loop counter
$14174 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14175 = 1
***loop pid
$14176 = 1
***loop counter
$14177 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14178 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14179 = 0
***task
$14180 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14181 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14182 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14183 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14184 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14185 = 1
***loop pid
$14186 = 3
***loop counter
$14187 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14188 = 1
***loop pid
$14189 = 4
***loop counter
$14190 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14191 = 1
***loop pid
$14192 = 1
***loop counter
$14193 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14194 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14195 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14196 = 0
***cur state
$14197 = 1
***cur counter
$14198 = 13


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14199 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14200 = 1
***loop pid
$14201 = 3
***loop counter
$14202 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14203 = 1
***loop pid
$14204 = 4
***loop counter
$14205 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14206 = 1
***loop pid
$14207 = 1
***loop counter
$14208 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14209 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14210 = 0
***task
$14211 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14212 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14213 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14214 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14215 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14216 = 1
***loop pid
$14217 = 3
***loop counter
$14218 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14219 = 1
***loop pid
$14220 = 4
***loop counter
$14221 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14222 = 1
***loop pid
$14223 = 1
***loop counter
$14224 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14225 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14226 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14227 = 0
***cur state
$14228 = 1
***cur counter
$14229 = 13


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14230 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14231 = 1
***loop pid
$14232 = 3
***loop counter
$14233 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14234 = 1
***loop pid
$14235 = 4
***loop counter
$14236 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14237 = 1
***loop pid
$14238 = 1
***loop counter
$14239 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14240 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14241 = 0
***task
$14242 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14243 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14244 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14245 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14246 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14247 = 1
***loop pid
$14248 = 3
***loop counter
$14249 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14250 = 1
***loop pid
$14251 = 4
***loop counter
$14252 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14253 = 1
***loop pid
$14254 = 1
***loop counter
$14255 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14256 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14257 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14258 = 0
***cur state
$14259 = 1
***cur counter
$14260 = 13


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14261 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14262 = 1
***loop pid
$14263 = 3
***loop counter
$14264 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14265 = 1
***loop pid
$14266 = 4
***loop counter
$14267 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14268 = 1
***loop pid
$14269 = 1
***loop counter
$14270 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14271 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14272 = 0
***task
$14273 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14274 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14275 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14276 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14277 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14278 = 1
***loop pid
$14279 = 3
***loop counter
$14280 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14281 = 1
***loop pid
$14282 = 4
***loop counter
$14283 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14284 = 1
***loop pid
$14285 = 1
***loop counter
$14286 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14287 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14288 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14289 = 0
***cur state
$14290 = 1
***cur counter
$14291 = 13


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14292 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14293 = 1
***loop pid
$14294 = 3
***loop counter
$14295 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14296 = 1
***loop pid
$14297 = 4
***loop counter
$14298 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14299 = 1
***loop pid
$14300 = 1
***loop counter
$14301 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14302 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14303 = 0
***task
$14304 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14305 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14306 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14307 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14308 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14309 = 1
***loop pid
$14310 = 3
***loop counter
$14311 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14312 = 1
***loop pid
$14313 = 4
***loop counter
$14314 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14315 = 1
***loop pid
$14316 = 1
***loop counter
$14317 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14318 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14319 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14320 = 0
***cur state
$14321 = 1
***cur counter
$14322 = 13


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14323 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14324 = 1
***loop pid
$14325 = 3
***loop counter
$14326 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14327 = 1
***loop pid
$14328 = 4
***loop counter
$14329 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14330 = 1
***loop pid
$14331 = 1
***loop counter
$14332 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14333 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14334 = 0
***task
$14335 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14336 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14337 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14338 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14339 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14340 = 1
***loop pid
$14341 = 3
***loop counter
$14342 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14343 = 1
***loop pid
$14344 = 4
***loop counter
$14345 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14346 = 1
***loop pid
$14347 = 1
***loop counter
$14348 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14349 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14350 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14351 = 0
***cur state
$14352 = 1
***cur counter
$14353 = 13


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14354 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14355 = 1
***loop pid
$14356 = 3
***loop counter
$14357 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14358 = 1
***loop pid
$14359 = 4
***loop counter
$14360 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14361 = 1
***loop pid
$14362 = 1
***loop counter
$14363 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14364 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14365 = 0
***task
$14366 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14367 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14368 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14369 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14370 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14371 = 1
***loop pid
$14372 = 3
***loop counter
$14373 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14374 = 1
***loop pid
$14375 = 4
***loop counter
$14376 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14377 = 1
***loop pid
$14378 = 1
***loop counter
$14379 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14380 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14381 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14382 = 0
***cur state
$14383 = 1
***cur counter
$14384 = 13


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14385 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14386 = 1
***loop pid
$14387 = 3
***loop counter
$14388 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14389 = 1
***loop pid
$14390 = 4
***loop counter
$14391 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14392 = 1
***loop pid
$14393 = 1
***loop counter
$14394 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14395 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14396 = 0
***task
$14397 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14398 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14399 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14400 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14401 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14402 = 1
***loop pid
$14403 = 3
***loop counter
$14404 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14405 = 1
***loop pid
$14406 = 4
***loop counter
$14407 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14408 = 1
***loop pid
$14409 = 1
***loop counter
$14410 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14411 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14412 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14413 = 0
***cur state
$14414 = 1
***cur counter
$14415 = 13


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14416 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14417 = 1
***loop pid
$14418 = 3
***loop counter
$14419 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14420 = 1
***loop pid
$14421 = 4
***loop counter
$14422 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14423 = 1
***loop pid
$14424 = 1
***loop counter
$14425 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14426 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14427 = 0
***task
$14428 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14429 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14430 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14431 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14432 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14433 = 1
***loop pid
$14434 = 3
***loop counter
$14435 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14436 = 1
***loop pid
$14437 = 4
***loop counter
$14438 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14439 = 1
***loop pid
$14440 = 1
***loop counter
$14441 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14442 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14443 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14444 = 0
***cur state
$14445 = 1
***cur counter
$14446 = 13


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14447 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14448 = 1
***loop pid
$14449 = 3
***loop counter
$14450 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14451 = 1
***loop pid
$14452 = 4
***loop counter
$14453 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14454 = 1
***loop pid
$14455 = 1
***loop counter
$14456 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14457 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14458 = 0
***task
$14459 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14460 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14461 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14462 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14463 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14464 = 1
***loop pid
$14465 = 3
***loop counter
$14466 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14467 = 1
***loop pid
$14468 = 4
***loop counter
$14469 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14470 = 1
***loop pid
$14471 = 1
***loop counter
$14472 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14473 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14474 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14475 = 0
***cur state
$14476 = 1
***cur counter
$14477 = 13


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14478 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14479 = 1
***loop pid
$14480 = 3
***loop counter
$14481 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14482 = 1
***loop pid
$14483 = 4
***loop counter
$14484 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14485 = 1
***loop pid
$14486 = 1
***loop counter
$14487 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14488 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14489 = 0
***task
$14490 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14491 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14492 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14493 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14494 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14495 = 1
***loop pid
$14496 = 3
***loop counter
$14497 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14498 = 1
***loop pid
$14499 = 4
***loop counter
$14500 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14501 = 1
***loop pid
$14502 = 1
***loop counter
$14503 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14504 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14505 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14506 = 0
***cur state
$14507 = 1
***cur counter
$14508 = 13


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14509 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14510 = 1
***loop pid
$14511 = 3
***loop counter
$14512 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14513 = 1
***loop pid
$14514 = 4
***loop counter
$14515 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14516 = 1
***loop pid
$14517 = 1
***loop counter
$14518 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14519 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14520 = 0
***task
$14521 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14522 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14523 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14524 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14525 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14526 = 1
***loop pid
$14527 = 3
***loop counter
$14528 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14529 = 1
***loop pid
$14530 = 4
***loop counter
$14531 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14532 = 1
***loop pid
$14533 = 1
***loop counter
$14534 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14535 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14536 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14537 = 0
***cur state
$14538 = 1
***cur counter
$14539 = 13


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14540 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14541 = 1
***loop pid
$14542 = 3
***loop counter
$14543 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14544 = 1
***loop pid
$14545 = 4
***loop counter
$14546 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14547 = 1
***loop pid
$14548 = 1
***loop counter
$14549 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14550 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14551 = 0
***task
$14552 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14553 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14554 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14555 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14556 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14557 = 1
***loop pid
$14558 = 3
***loop counter
$14559 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14560 = 1
***loop pid
$14561 = 4
***loop counter
$14562 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14563 = 1
***loop pid
$14564 = 1
***loop counter
$14565 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14566 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14567 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14568 = 0
***cur state
$14569 = 1
***cur counter
$14570 = 13


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14571 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14572 = 1
***loop pid
$14573 = 3
***loop counter
$14574 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14575 = 1
***loop pid
$14576 = 4
***loop counter
$14577 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14578 = 1
***loop pid
$14579 = 1
***loop counter
$14580 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14581 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14582 = 0
***task
$14583 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14584 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14585 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14586 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14587 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14588 = 0
***task
$14589 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14590 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14591 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14592 = 1
***loop pid
$14593 = 3
***loop counter
$14594 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14595 = 1
***loop pid
$14596 = 4
***loop counter
$14597 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14598 = 1
***loop pid
$14599 = 1
***loop counter
$14600 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14601 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14602 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14603 = 0
***cur state
$14604 = 1
***cur counter
$14605 = 12


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14606 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14607 = 1
***loop pid
$14608 = 3
***loop counter
$14609 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14610 = 1
***loop pid
$14611 = 4
***loop counter
$14612 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14613 = 1
***loop pid
$14614 = 1
***loop counter
$14615 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14616 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14617 = 0
***task
$14618 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14619 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14620 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14621 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14622 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14623 = 1
***loop pid
$14624 = 3
***loop counter
$14625 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14626 = 1
***loop pid
$14627 = 4
***loop counter
$14628 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14629 = 1
***loop pid
$14630 = 1
***loop counter
$14631 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14632 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14633 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14634 = 0
***cur state
$14635 = 1
***cur counter
$14636 = 12


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14637 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14638 = 1
***loop pid
$14639 = 3
***loop counter
$14640 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14641 = 1
***loop pid
$14642 = 4
***loop counter
$14643 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14644 = 1
***loop pid
$14645 = 1
***loop counter
$14646 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14647 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14648 = 0
***task
$14649 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14650 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14651 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14652 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14653 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14654 = 1
***loop pid
$14655 = 3
***loop counter
$14656 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14657 = 1
***loop pid
$14658 = 4
***loop counter
$14659 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14660 = 1
***loop pid
$14661 = 1
***loop counter
$14662 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14663 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14664 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14665 = 0
***cur state
$14666 = 1
***cur counter
$14667 = 12


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14668 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14669 = 1
***loop pid
$14670 = 3
***loop counter
$14671 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14672 = 0
***loop pid
$14673 = 4
***loop counter
$14674 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14675 = 1
***loop pid
$14676 = 1
***loop counter
$14677 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14678 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14679 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14680 = 4
***cur state
$14681 = 0
***cur counter
$14682 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14683 = 4
***task
$14684 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14685 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$14686 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$14687 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$14688 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$14689 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$14690 = 4
***fault address
***cur register edx
edx            0x802ff30	134414128
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134414128) at memory.c:367
367	{
---in do_no_page
___pid
$14691 = 4
***address
$14692 = 134414128


Breakpoint 103, do_no_page (error_code=4, address=134410240) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$14693 = 4
***page
$14694 = 16371712
***block
$14695 = 189


Breakpoint 42, do_no_page (error_code=4, address=134410240) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$14696 = 4
***nr array$14697 = 1012
$14698 = 1013
$14699 = 1014
$14700 = 1015


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$14701 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c6bc) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c6bc) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16371712, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134410240) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$14702 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$14703 = 4
***drive
$14704 = 0
***head
$14705 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$14706 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$14707 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c6e0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c6e0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16371712, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134410240) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$14708 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$14709 = 4
***drive
$14710 = 0
***head
$14711 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$14712 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$14713 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c704) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c704) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16371712, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134410240) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$14714 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$14715 = 4
***drive
$14716 = 0
***head
$14717 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$14718 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$14719 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c728) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c728) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16371712, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134410240) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$14720 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$14721 = 4
***drive
$14722 = 0
***head
$14723 = 5


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$14724 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$14725 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14726 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x4840c	295948
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14727 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=2, buf=0x4840c "", count=1) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$14728 = 4


Breakpoint 71, sys_write (fd=2, buf=0x4840c "", count=1) at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$14729 = 4
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$14730 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14731 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14732 = 4
***cur state
$14733 = 0
***cur counter
$14734 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14735 = 4
***task
$14736 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14737 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$14738 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$14739 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$14740 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$14741 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14742 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5a0	67106208
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14743 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$14744 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5a0, size=-2655) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5acount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$14745 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14746 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14747 = 4
***cur state
$14748 = 0
***cur counter
$14749 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14750 = 4
***task
$14751 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14752 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$14753 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$14754 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$14755 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$14756 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14757 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x4840c	295948
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14758 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=2, buf=0x4840c "", count=1) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$14759 = 4


Breakpoint 71, sys_write (fd=2, buf=0x4840c "", count=1) at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$14760 = 4
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$14761 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14762 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14763 = 4
***cur state
$14764 = 0
***cur counter
$14765 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14766 = 4
***task
$14767 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14768 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$14769 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$14770 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$14771 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$14772 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14773 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5a0	67106208
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14774 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$14775 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5a0, size=-2655) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5acount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$14776 = 201322496


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x0000701c in interruptible_sleep_on (p=0x23d1c <tty_table+2140>)
    at sched.c:179
#2  0x00016672 in sleep_if_empty (queue=0x23d10 <tty_table+2128>)
    at tty_io.c:126
#3  0x00016f24 in tty_read (channel=0, buf=0x3fff5a0 "qm\001", nr=1)
    at tty_io.c:258
#4  0x0000f0a0 in rw_ttyx (rw=0, minor=0, 
    buf=0x3fff5a0 <incomplete sequence \360>, count=1, 
    pos=0x2977c <file_table+28>) at char_dev.c:23
#5  0x0000f2f6 in rw_char (rw=0, dev=1024, 
    buf=0x3fff5a0 <incomplete sequence \360>, count=1, 
    pos=0x2977c <file_table+28>) at char_dev.c:103
#6  0x0000c45e in sys_read (fd=0, 
    buf=0x3fff5acount=1) at read_write.c:69
#7  0x0000793f in system_call () at system_call.s:94
#8  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14777 = 1
***loop pid
$14778 = 3
***loop counter
$14779 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14780 = 1
***loop pid
$14781 = 4
***loop counter
$14782 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14783 = 1
***loop pid
$14784 = 1
***loop counter
$14785 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14786 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14787 = 0
***task
$14788 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14789 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14790 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14791 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14792 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14793 = 1
***loop pid
$14794 = 3
***loop counter
$14795 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14796 = 1
***loop pid
$14797 = 4
***loop counter
$14798 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14799 = 1
***loop pid
$14800 = 1
***loop counter
$14801 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14802 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14803 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14804 = 0
***cur state
$14805 = 1
***cur counter
$14806 = 12


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14807 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14808 = 1
***loop pid
$14809 = 3
***loop counter
$14810 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14811 = 1
***loop pid
$14812 = 4
***loop counter
$14813 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14814 = 1
***loop pid
$14815 = 1
***loop counter
$14816 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14817 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14818 = 0
***task
$14819 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14820 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14821 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14822 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14823 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14824 = 1
***loop pid
$14825 = 3
***loop counter
$14826 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14827 = 0
***loop pid
$14828 = 4
***loop counter
$14829 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14830 = 1
***loop pid
$14831 = 1
***loop counter
$14832 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14833 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14834 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14835 = 4
***cur state
$14836 = 0
***cur counter
$14837 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14838 = 4
***task
$14839 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14840 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$14841 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$14842 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$14843 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$14844 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14845 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x4840c	295948
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14846 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=2, buf=0x4840c "", count=1) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$14847 = 4


Breakpoint 71, sys_write (fd=2, buf=0x4840c "", count=1) at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$14848 = 4
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$14849 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14850 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14851 = 4
***cur state
$14852 = 0
***cur counter
$14853 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14854 = 4
***task
$14855 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14856 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$14857 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$14858 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$14859 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$14860 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14861 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5a0	67106208
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14862 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$14863 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5a0, size=-2655) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5acount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$14864 = 201322496


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x0000701c in interruptible_sleep_on (p=0x23d1c <tty_table+2140>)
    at sched.c:179
#2  0x00016672 in sleep_if_empty (queue=0x23d10 <tty_table+2128>)
    at tty_io.c:126
#3  0x00016f24 in tty_read (channel=0, buf=0x3fff5a0 "qm\001", nr=1)
    at tty_io.c:258
#4  0x0000f0a0 in rw_ttyx (rw=0, minor=0, 
    buf=0x3fff5a0 <incomplete sequence \360>, count=1, 
    pos=0x2977c <file_table+28>) at char_dev.c:23
#5  0x0000f2f6 in rw_char (rw=0, dev=1024, 
    buf=0x3fff5a0 <incomplete sequence \360>, count=1, 
    pos=0x2977c <file_table+28>) at char_dev.c:103
#6  0x0000c45e in sys_read (fd=0, 
    buf=0x3fff5a0 "\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^"..., count=1) at read_write.c:69
#7  0x0000793f in system_call () at system_call.s:94
#8  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14865 = 1
***loop pid
$14866 = 3
***loop counter
$14867 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14868 = 1
***loop pid
$14869 = 4
***loop counter
$14870 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14871 = 1
***loop pid
$14872 = 1
***loop counter
$14873 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14874 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14875 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14876 = 0
***cur state
$14877 = 1
***cur counter
$14878 = 12


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14879 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14880 = 1
***loop pid
$14881 = 3
***loop counter
$14882 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14883 = 0
***loop pid
$14884 = 4
***loop counter
$14885 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14886 = 1
***loop pid
$14887 = 1
***loop counter
$14888 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14889 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14890 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14891 = 4
***cur state
$14892 = 0
***cur counter
$14893 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14894 = 4
***task
$14895 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14896 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$14897 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$14898 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$14899 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$14900 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14901 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x4840c	295948
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14902 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=2, buf=0x4840c "", count=1) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$14903 = 4


Breakpoint 71, sys_write (fd=2, buf=0x4840c "", count=1) at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$14904 = 4
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$14905 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14906 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14907 = 4
***cur state
$14908 = 0
***cur counter
$14909 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14910 = 4
***task
$14911 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14912 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$14913 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$14914 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$14915 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$14916 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14917 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5a0	67106208
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14918 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$14919 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5a0, size=-2655) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5acount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$14920 = 201322496


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x0000701c in interruptible_sleep_on (p=0x23d1c <tty_table+2140>)
    at sched.c:179
#2  0x00016672 in sleep_if_empty (queue=0x23d10 <tty_table+2128>)
    at tty_io.c:126
#3  0x00016f24 in tty_read (channel=0, buf=0x3fff5a0 "qm\001", nr=1)
    at tty_io.c:258
#4  0x0000f0a0 in rw_ttyx (rw=0, minor=0, 
    buf=0x3fff5a0 <incomplete sequence \360>, count=1, 
    pos=0x2977c <file_table+28>) at char_dev.c:23
#5  0x0000f2f6 in rw_char (rw=0, dev=1024, 
    buf=0x3fff5a0 <incomplete sequence \360>, count=1, 
    pos=0x2977c <file_table+28>) at char_dev.c:103
#6  0x0000c45e in sys_read (fd=0, 
    buf=0x3fff5acount=1) at read_write.c:69
#7  0x0000793f in system_call () at system_call.s:94
#8  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14921 = 1
***loop pid
$14922 = 3
***loop counter
$14923 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14924 = 1
***loop pid
$14925 = 4
***loop counter
$14926 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14927 = 1
***loop pid
$14928 = 1
***loop counter
$14929 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14930 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14931 = 0
***task
$14932 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14933 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14934 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14935 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14936 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14937 = 1
***loop pid
$14938 = 3
***loop counter
$14939 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14940 = 0
***loop pid
$14941 = 4
***loop counter
$14942 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14943 = 1
***loop pid
$14944 = 1
***loop counter
$14945 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14946 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14947 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14948 = 4
***cur state
$14949 = 0
***cur counter
$14950 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14951 = 4
***task
$14952 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14953 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$14954 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$14955 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$14956 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$14957 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14958 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x4840c	295948
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14959 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=2, buf=0x4840c "", count=1) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$14960 = 4


Breakpoint 71, sys_write (fd=2, buf=0x4840c "", count=1) at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$14961 = 4
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$14962 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14963 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14964 = 4
***cur state
$14965 = 0
***cur counter
$14966 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14967 = 4
***task
$14968 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14969 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$14970 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$14971 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$14972 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$14973 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$14974 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff5a0	67106208
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$14975 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$14976 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5a0, size=-2655) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff5acount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$14977 = 201322496


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x0000701c in interruptible_sleep_on (p=0x23d1c <tty_table+2140>)
    at sched.c:179
#2  0x00016672 in sleep_if_empty (queue=0x23d10 <tty_table+2128>)
    at tty_io.c:126
#3  0x00016f24 in tty_read (channel=0, buf=0x3fff5a0 "qm\001", nr=1)
    at tty_io.c:258
#4  0x0000f0a0 in rw_ttyx (rw=0, minor=0, 
    buf=0x3fff5a0 <incomplete sequence \360>, count=1, 
    pos=0x2977c <file_table+28>) at char_dev.c:23
#5  0x0000f2f6 in rw_char (rw=0, dev=1024, 
    buf=0x3fff5a0 <incomplete sequence \360>, count=1, 
    pos=0x2977c <file_table+28>) at char_dev.c:103
#6  0x0000c45e in sys_read (fd=0, 
    buf=0x3fff5acount=1) at read_write.c:69
#7  0x0000793f in system_call () at system_call.s:94
#8  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14978 = 1
***loop pid
$14979 = 3
***loop counter
$14980 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14981 = 1
***loop pid
$14982 = 4
***loop counter
$14983 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14984 = 1
***loop pid
$14985 = 1
***loop counter
$14986 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$14987 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$14988 = 0
***task
$14989 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$14990 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$14991 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$14992 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$14993 = 0
***cur state
$14994 = 1
***cur counter
$14995 = 11


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$14996 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$14997 = 1
***loop pid
$14998 = 3
***loop counter
$14999 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15000 = 1
***loop pid
$15001 = 4
***loop counter
$15002 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15003 = 1
***loop pid
$15004 = 1
***loop counter
$15005 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$15006 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15007 = 0
***task
$15008 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$15009 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$15010 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15011 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15012 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15013 = 1
***loop pid
$15014 = 3
***loop counter
$15015 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15016 = 1
***loop pid
$15017 = 4
***loop counter
$15018 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15019 = 1
***loop pid
$15020 = 1
***loop counter
$15021 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$15022 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15023 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15024 = 0
***cur state
$15025 = 1
***cur counter
$15026 = 11


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$15027 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15028 = 1
***loop pid
$15029 = 3
***loop counter
$15030 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15031 = 1
***loop pid
$15032 = 4
***loop counter
$15033 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15034 = 1
***loop pid
$15035 = 1
***loop counter
$15036 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$15037 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15038 = 0
***task
$15039 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$15040 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$15041 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15042 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15043 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15044 = 1
***loop pid
$15045 = 3
***loop counter
$15046 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15047 = 1
***loop pid
$15048 = 4
***loop counter
$15049 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15050 = 1
***loop pid
$15051 = 1
***loop counter
$15052 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$15053 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15054 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15055 = 0
***cur state
$15056 = 1
***cur counter
$15057 = 11


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$15058 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15059 = 1
***loop pid
$15060 = 3
***loop counter
$15061 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15062 = 1
***loop pid
$15063 = 4
***loop counter
$15064 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15065 = 1
***loop pid
$15066 = 1
***loop counter
$15067 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$15068 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15069 = 0
***task
$15070 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$15071 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$15072 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15073 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15074 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15075 = 1
***loop pid
$15076 = 3
***loop counter
$15077 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15078 = 1
***loop pid
$15079 = 4
***loop counter
$15080 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15081 = 1
***loop pid
$15082 = 1
***loop counter
$15083 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$15084 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15085 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15086 = 0
***cur state
$15087 = 1
***cur counter
$15088 = 11


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$15089 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15090 = 1
***loop pid
$15091 = 3
***loop counter
$15092 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15093 = 1
***loop pid
$15094 = 4
***loop counter
$15095 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15096 = 1
***loop pid
$15097 = 1
***loop counter
$15098 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$15099 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15100 = 0
***task
$15101 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$15102 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$15103 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15104 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15105 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15106 = 1
***loop pid
$15107 = 3
***loop counter
$15108 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15109 = 1
***loop pid
$15110 = 4
***loop counter
$15111 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15112 = 1
***loop pid
$15113 = 1
***loop counter
$15114 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$15115 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15116 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15117 = 0
***cur state
$15118 = 1
***cur counter
$15119 = 11


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$15120 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15121 = 1
***loop pid
$15122 = 3
***loop counter
$15123 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15124 = 0
***loop pid
$15125 = 4
***loop counter
$15126 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15127 = 1
***loop pid
$15128 = 1
***loop counter
$15129 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$15130 = 4


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x0000701c in interruptible_sleep_on (p=0x23d1c <tty_table+2140>)
    at sched.c:179
#2  0x00016672 in sleep_if_empty (queue=0x23d10 <tty_table+2128>)
    at tty_io.c:126
#3  0x00016f24 in tty_read (channel=0, buf=0x3fff5a0 "qm\001", nr=1)
    at tty_io.c:258
#4  0x0000f0a0 in rw_ttyx (rw=0, minor=0, 
    buf=0x3fff5a0 <incomplete sequence \360>, count=1, 
    pos=0x2977c <file_table+28>) at char_dev.c:23
#5  0x0000f2f6 in rw_char (rw=0, dev=1024, 
    buf=0x3fff5a0 <incomplete sequence \360>, count=1, 
    pos=0x2977c <file_table+28>) at char_dev.c:103
#6  0x0000c45e in sys_read (fd=0, 
    buf=0x3fff5acount=1) at read_write.c:69
#7  0x0000793f in system_call () at system_call.s:94
#8  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15131 = 1
***loop pid
$15132 = 3
***loop counter
$15133 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15134 = 1
***loop pid
$15135 = 4
***loop counter
$15136 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15137 = 1
***loop pid
$15138 = 1
***loop counter
$15139 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$15140 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15141 = 0
***task
$15142 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$15143 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$15144 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15145 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15146 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15147 = 1
***loop pid
$15148 = 3
***loop counter
$15149 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15150 = 0
***loop pid
$15151 = 4
***loop counter
$15152 = 2


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15153 = 1
***loop pid
$15154 = 1
***loop counter
$15155 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$15156 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15157 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15158 = 4
***cur state
$15159 = 0
***cur counter
$15160 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15161 = 4
***task
$15162 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$15163 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15164 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15165 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15166 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15167 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15168 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x4840c	295948
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15169 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=2, buf=0x4840c "", count=1) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$15170 = 4


Breakpoint 71, sys_write (fd=2, buf=0x4840c "", count=1) at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$15171 = 4
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$15172 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15173 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15174 = 4
***cur state
$15175 = 0
***cur counter
$15176 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15177 = 4
***task
$15178 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$15179 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15180 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15181 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15182 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15183 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15184 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x4840c	295948
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15185 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=2, buf=0x4840c "", count=0) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$15186 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15187 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15188 = 4
***cur state
$15189 = 0
***cur counter
$15190 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15191 = 4
***task
$15192 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$15193 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15194 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15195 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15196 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15197 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15198 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x5403	21507
***cur register edx
edx            0x4532c	283436


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15199 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=0, cmd=21507, arg=283436) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$15200 = 4
***fd
$15201 = 0


Breakpoint 61, sys_ioctl (fd=0, cmd=21507, arg=283436) at ioctl.c:40
40		dev = filp->f_inode->i_zone[0];
---in sys_ioctl
___pid
$15202 = 4
***mode and fd right
***dev
$15203 = 16375808


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15204 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15205 = 4
***cur state
$15206 = 0
***cur counter
$15207 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15208 = 4
***task
$15209 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$15210 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15211 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15212 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15213 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15214 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15215 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x540a	21514
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15216 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=0, cmd=21514, arg=1) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$15217 = 4
***fd
$15218 = 0


Breakpoint 61, sys_ioctl (fd=0, cmd=21514, arg=1) at ioctl.c:40
40		dev = filp->f_inode->i_zone[0];
---in sys_ioctl
___pid
$15219 = 4
***mode and fd right
***dev
$15220 = 1024


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15221 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15222 = 4
***cur state
$15223 = 0
***cur counter
$15224 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15225 = 4
***task
$15226 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$15227 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15228 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15229 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15230 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15231 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15232 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x1730	5936
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15233 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$15234 = 4
***signum
$15235 = 2


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$15236 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15237 = 4
***eax as return
eax            0x2c264	180836
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15238 = 4
***cur state
$15239 = 0
***cur counter
$15240 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15241 = 4
***task
$15242 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$15243 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15244 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15245 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15246 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15247 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15248 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xe	14
***cur register ecx
ecx            0x1534	5428
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15249 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$15250 = 4
***signum
$15251 = 14


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$15252 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15253 = 4
***eax as return
eax            0x2c264	180836
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15254 = 4
***cur state
$15255 = 0
***cur counter
$15256 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15257 = 4
***task
$15258 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$15259 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15260 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15261 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15262 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15263 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15264 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15265 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$15266 = 4
***signum
$15267 = 20


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$15268 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15269 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15270 = 4
***cur state
$15271 = 0
***cur counter
$15272 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15273 = 4
***task
$15274 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$15275 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15276 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15277 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15278 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15279 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15280 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x16	22
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15281 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$15282 = 4
***signum
$15283 = 22


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$15284 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15285 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15286 = 4
***cur state
$15287 = 0
***cur counter
$15288 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15289 = 4
***task
$15290 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$15291 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15292 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15293 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15294 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15295 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15296 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x15	21
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15297 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$15298 = 4
***signum
$15299 = 21


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$15300 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15301 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15302 = 4
***cur state
$15303 = 0
***cur counter
$15304 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15305 = 4
***task
$15306 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$15307 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15308 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15309 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15310 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15311 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15312 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x1730	5936
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15313 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$15314 = 4
***signum
$15315 = 2


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$15316 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15317 = 4
***eax as return
eax            0x1730	5936
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15318 = 4
***cur state
$15319 = 0
***cur counter
$15320 = 2


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15321 = 4
***task
$15322 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$15323 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15324 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15325 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15326 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15327 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$15328 = 4
***fault address
***cur register edx
edx            0x8049e0c	134520332
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134520332) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$15329 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3124) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$15330 = 4
***table entry
$15331 = (unsigned long *) 0xff3124


Breakpoint 99, un_wp_page (table_entry=0xff3124) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$15332 = 4
***physical page address
$15333 = 16666624


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$15334 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$15335 = 4
***fault address
***cur register edx
edx            0x803603c	134438972
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=134438972) at memory.c:367
367	{
---in do_no_page
___pid
$15336 = 4
***address
$15337 = 134438972


Breakpoint 103, do_no_page (error_code=4, address=134438912) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$15338 = 4
***page
$15339 = 16367616
***block
$15340 = 217


Breakpoint 42, do_no_page (error_code=4, address=134438912) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$15341 = 4
***nr array$15342 = 1040
$15343 = 1041
$15344 = 1042
$15345 = 1043


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15346 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c74c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c74c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16367616, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134438912) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15347 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15348 = 4
***drive
$15349 = 0
***head
$15350 = 6


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15351 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15352 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c770) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c770) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16367616, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134438912) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15353 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15354 = 4
***drive
$15355 = 0
***head
$15356 = 6


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15357 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15358 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c794) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c794) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16367616, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134438912) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15359 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15360 = 4
***drive
$15361 = 0
***head
$15362 = 6


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15363 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15364 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c7b8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c7b8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16367616, dev=769, b=0xffdf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=134438912) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15365 = 4
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15366 = 4
***drive
$15367 = 0
***head
$15368 = 6


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15369 = 4
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$15370 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$15371 = 4
***fault address
***cur register edx
edx            0x8055bd8	134568920
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134568920) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$15372 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3154) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$15373 = 4
***table entry
$15374 = (unsigned long *) 0xff3154


Breakpoint 99, un_wp_page (table_entry=0xff3154) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$15375 = 4
***physical page address
$15376 = 16445440


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$15377 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$15378 = 4
***fault address
***cur register edx
edx            0x804cc0c	134532108
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134532108) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$15379 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3130) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$15380 = 4
***table entry
$15381 = (unsigned long *) 0xff3130


Breakpoint 99, un_wp_page (table_entry=0xff3130) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$15382 = 4
***physical page address
$15383 = 16568320


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$15384 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$15385 = 4
***fault address
***cur register edx
edx            0xbffea6c	201321068
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=201321068) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$15386 = 4


Breakpoint 98, un_wp_page (table_entry=0xffbff8) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$15387 = 4
***table entry
$15388 = (unsigned long *) 0xffbff8


Breakpoint 99, un_wp_page (table_entry=0xffbff8) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$15389 = 4
***physical page address
$15390 = 16527360


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$15391 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15392 = 4
***task
$15393 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$15394 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15395 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15396 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15397 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15398 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 91, write_verify (address=3155155233) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$15399 = 4
***call stack
#0  write_verify (address=3155155233) at memory.c:267
#1  0xd1f70000 in ?? ()
***address
$15400 = 3155155233


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$15401 = 4
***fault address
***cur register edx
edx            0x12	18
***error code
***cur register eax
eax            0x5ddec	384492


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$15402 = 4
***fault address
***cur register edx
edx            0x804b170	134525296
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134525296) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$15403 = 4


Breakpoint 98, un_wp_page (table_entry=0xff312c) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$15404 = 4
***table entry
$15405 = (unsigned long *) 0xff312c


Breakpoint 99, un_wp_page (table_entry=0xff312c) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$15406 = 4
***physical page address
$15407 = 16601088


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$15408 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss

--------------------------------------------------------begin
Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15409 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2	2
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x6	6
***cur register edx
edx            0x5dd80	384384


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15410 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 10, sys_fork () at system_call.s:217
217		call copy_process
---in sys_fork
___pid
$15411 = 4
***cur register gs
gs             0x17	23
***push gs
***cur register esi
esi            0x1	1
***push esi
***cur register edi
edi            0xffc	4092
***push edi
***cur register ebp
ebp            0x3fffde4	0x3fffde4
***push ebp
***cur register eax
eax            0x4	4
;;;eax to nr


    eip=235695, cs=15, eflags=582, esp=67108312, ss=23) at fork.c:79
79		p = (struct task_struct *) get_free_page();
---in copy_process
***father pid
$15412 = 4
***new pid
$15413 = 6
***task number
$15414 = 4
***before free page
***cur register ecx
ecx            0x4	4
***cur register edi
edi            0xffc	4092


    eip=235695, cs=15, eflags=582, esp=67108312, ss=23) at fork.c:80
80		if (!p)
---in copy_process
___pid
$15415 = 4
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0xffc	4092
***eax:physical address
eax            0xf9b000	16363520


    eip=235695, cs=15, eflags=582, esp=67108312, ss=23) at fork.c:86
86		*p = *current;	/* NOTE! this doesn't copy the supervisor stack */
---in copy_process
___pid
$15416 = 4
***copy task struct


    eip=235695, cs=15, eflags=582, esp=67108312, ss=23) at fork.c:116
116		p->tss.ldt = _LDT(nr);
---in copy_process
___pid
$15417 = 4
***new process state
$15418 = 2
***new process tss.esp0
$15419 = 16367616


    eip=235695, cs=15, eflags=582, esp=67108312, ss=23) at fork.c:117
117		p->tss.trace_bitmap = 0x80000000;
---in copy_process
___pid
$15420 = 4
***new LDT index in GDT
$15421 = 104
***new cs in LDT
$15422 = {a = 64, b = 146864896}
***new ds in LDT
$15423 = {a = 16383, b = 146862848}


Breakpoint 16, copy_mem (nr=4, p=0xf9b000) at fork.c:54
54		p->start_code = new_code_base;
---in copy_mem
___pid
$15424 = 4
***new_data_base
$15425 = 268435456
***old_data_base
$15426 = 134217728


    at memory.c:163
163		for( ; size-->0 ; from_dir++,to_dir++) {
---in copy_page_tables
___pid
$15427 = 4
***from_dir
$15428 = (unsigned long *) 0x80 <setup_idt+15>
***to_dir
$15429 = (unsigned long *) 0x100 <setup_gdt+95>
size
$15430 = 16


    at memory.c:169
169			if (!(to_page_table = (unsigned long *) get_free_page()))
---in copy_page_tables
___pid
$15431 = 4
***before free page
***cur register ecx
ecx            0xf9b2e2	16364258
***cur register edi
edi            0xf9b2e7	16364263


    at memory.c:171
171			*to_dir = ((unsigned long) to_page_table) | 7;
---in copy_page_tables
___pid
$15432 = 4
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0xf9b2e7	16364263
***from_page_table
$15433 = (unsigned long *) 0xff3000
***to_page_table
$15434 = (unsigned long *) 0xf9a000


    at memory.c:169
169			if (!(to_page_table = (unsigned long *) get_free_page()))
---in copy_page_tables
___pid
$15435 = 4
***before free page
***cur register ecx
ecx            0x266e0	157408
***cur register edi
edi            0xf9b2e7	16364263


    at memory.c:171
171			*to_dir = ((unsigned long) to_page_table) | 7;
---in copy_page_tables
___pid
$15436 = 4
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0xf9b2e7	16364263
***from_page_table
$15437 = (unsigned long *) 0xffb000
***to_page_table
$15438 = (unsigned long *) 0xf99000


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15439 = 4
***task
$15440 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$15441 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15442 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$15443 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


    eip=235695, cs=15, eflags=582, esp=67108312, ss=23) at fork.c:134
134		set_tss_desc(gdt+(nr<<1)+FIRST_TSS_ENTRY,&(p->tss));
---in copy_process
___pid
$15444 = 4
tss in GDT
$15445 = 12
***tss address
$15446 = (struct tss_struct *) 0xf9b2e8
ldt in GDT
$15447 = 13
***ldt address
$15448 = (struct desc_struct (*)[3]) 0xf9b2d0


    eip=235695, cs=15, eflags=582, esp=67108312, ss=23) at fork.c:137
137		return last_pid;
---in copy_process
___pid
$15449 = 4
***new process state
$15450 = 0


Breakpoint 19, sys_fork () at system_call.s:219
219	1:	ret
---in sys_fork
***cur register esp
esp            0xffdfd0	0xffdfd0


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15451 = 4
***cur state
$15452 = 0
***cur counter
$15453 = 0


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$15454 = 4


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000006 in startup_32 () at head.s:20


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15455 = 0
***loop pid
$15456 = 6
***loop counter
$15457 = 15


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15458 = 1
***loop pid
$15459 = 3
***loop counter
$15460 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15461 = 0
***loop pid
$15462 = 4
***loop counter
$15463 = 0


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$15464 = 1
***loop pid
$15465 = 1
***loop counter
$15466 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$15467 = 6


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$15468 = 6
***fault address
***cur register edx
edx            0x13fffde0	335543776
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=335543776) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$15469 = 6


Breakpoint 98, un_wp_page (table_entry=0xf99ffc) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$15470 = 6
***table entry
$15471 = (unsigned long *) 0xf99ffc


Breakpoint 99, un_wp_page (table_entry=0xf99ffc) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$15472 = 6
***physical page address
$15473 = 16408576


Breakpoint 100, un_wp_page (table_entry=0xf99ffc) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$15474 = 6
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf99ffc) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$15475 = 6
***new page
$15476 = 16351232


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$15477 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$15478 = 6
***fault address
***cur register edx
edx            0x100469d0	268724688
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268724688) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$15479 = 6


Breakpoint 98, un_wp_page (table_entry=0xf9a118) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$15480 = 6
***table entry
$15481 = (unsigned long *) 0xf9a118


Breakpoint 99, un_wp_page (table_entry=0xf9a118) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$15482 = 6
***physical page address
$15483 = 16400384


Breakpoint 100, un_wp_page (table_entry=0xf9a118) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$15484 = 6
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf9a118) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$15485 = 6
***new page
$15486 = 16347136


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$15487 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15488 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15489 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=3, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$15490 = 6
***signum
$15491 = 3


Breakpoint 32, sys_signal (signum=3, handler=1, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$15492 = 6
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15493 = 6
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15494 = 6
***cur state
$15495 = 0
***cur counter
$15496 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15497 = 6
***task
$15498 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$15499 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15500 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15501 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15502 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15503 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15504 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xf	15
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15505 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$15506 = 6
***signum
$15507 = 15


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$15508 = 6
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15509 = 6
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15510 = 6
***cur state
$15511 = 0
***cur counter
$15512 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15513 = 6
***task
$15514 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$15515 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15516 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15517 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15518 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15519 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15520 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15521 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$15522 = 6
***signum
$15523 = 20


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$15524 = 6
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15525 = 6
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15526 = 6
***cur state
$15527 = 0
***cur counter
$15528 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15529 = 6
***task
$15530 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$15531 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15532 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15533 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15534 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15535 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15536 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x15	21
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15537 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$15538 = 6
***signum
$15539 = 21


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$15540 = 6
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15541 = 6
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15542 = 6
***cur state
$15543 = 0
***cur counter
$15544 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15545 = 6
***task
$15546 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$15547 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15548 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15549 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15550 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15551 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15552 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x16	22
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15553 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$15554 = 6
***signum
$15555 = 22


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$15556 = 6
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15557 = 6
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15558 = 6
***cur state
$15559 = 0
***cur counter
$15560 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15561 = 6
***task
$15562 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$15563 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15564 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15565 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15566 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15567 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$15568 = 6
***fault address
***cur register edx
edx            0x1004522e	268718638
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268718638) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$15569 = 6


Breakpoint 98, un_wp_page (table_entry=0xf9a114) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$15570 = 6
***table entry
$15571 = (unsigned long *) 0xf9a114


Breakpoint 99, un_wp_page (table_entry=0xf9a114) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$15572 = 6
***physical page address
$15573 = 16392192


Breakpoint 100, un_wp_page (table_entry=0xf9a114) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$15574 = 6
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf9a114) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$15575 = 6
***new page
$15576 = 16343040


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$15577 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$15578 = 6
***fault address
***cur register edx
edx            0x1005ddc0	268819904
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268819904) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$15579 = 6


Breakpoint 98, un_wp_page (table_entry=0xf9a174) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$15580 = 6
***table entry
$15581 = (unsigned long *) 0xf9a174


Breakpoint 99, un_wp_page (table_entry=0xf9a174) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$15582 = 6
***physical page address
$15583 = 16420864


Breakpoint 100, un_wp_page (table_entry=0xf9a174) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$15584 = 6
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf9a174) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$15585 = 6
***new page
$15586 = 16338944


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$15587 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15588 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x11	17
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15589 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$15590 = 6
***signum
$15591 = 17


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$15592 = 6
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15593 = 6
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15594 = 6
***cur state
$15595 = 0
***cur counter
$15596 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15597 = 6
***task
$15598 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$15599 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15600 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15601 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15602 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15603 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15604 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0xb	11
***cur register ebx
ebx            0x5ddec	384492
***cur register ecx
ecx            0x5ddcc	384460
***cur register edx
edx            0x4b14c	307532


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15605 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 44, sys_execve () at system_call.s:202
202		pushl %eax
---in sys_execve
___pid
$15606 = 6
***cur register eax
eax            0xf9bfec	16367596
***push eax


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15607 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c7dc) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c7dc) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=30) at buffer.c:278
#5  0x0000d38c in read_inode (inode=0x27c00 <inode_table+1568>) at inode.c:305
#6  0x0000d2e2 in iget (dev=769, nr=564) at inode.c:290
#7  0x000119fa in namei (pathname=0x5ddec "") at namei.c:324
#8  0x00010009 in do_execve (eip=0xf9bfec, tmp=31039, filename=0x5ddec "", 
    argv=0x5ddcc, envp=0x4b14c) at exec.c:199
#9  0x00007a34 in sys_execve () at system_call.s:203
#10 0x00f9bfec in ?? ()


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15608 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15609 = 6
***drive
$15610 = 0
***head
$15611 = 1


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15612 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


    argv=0x5ddcc, envp=0x4b14c) at exec.c:210
210		e_uid = (i & S_ISUID) ? inode->i_uid : current->euid;
---in do_execve
___pid
$15613 = 6
***cur euid
$15614 = 0
***cur egid
$15615 = 0
***imode
$15616 = 33225
***inode euid
$15617 = 0
***inode egid
$15618 = 0 '\000'


    argv=0x5ddcc, envp=0x4b14c) at exec.c:212
212		if (current->euid == inode->i_uid)
---in do_execve
___pid
$15619 = 6
***changed euid
$15620 = 0
***changed egid
$15621 = 0
***compare priority


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15622 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c800) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c800) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=4874) at buffer.c:278
#5  0x000101c7 in do_execve (eip=0xf9bfec, tmp=31039, filename=0x5ddec "", 
    argv=0x5ddcc, envp=0x4b14c) at exec.c:221
#6  0x00007a34 in sys_execve () at system_call.s:203
#7  0x00f9bfec in ?? ()


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15623 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15624 = 6
***drive
$15625 = 0
***head
$15626 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15627 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$15628 = 6
***tmp:cur parameter address pointer
$15629 = 0x4db74 ""
***len
$15630 = 8
***cur pointer
$15631 = 131068


    from_kmem=0) at exec.c:142
142					if (from_kmem==2)
---in copy_strings
___pid
$15632 = 6
***cur physical pointer
$15633 = 0xf94000 ""


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$15634 = 6
***tmp:cur parameter address pointer
$15635 = 0x4da33 ""
***len
$15636 = 7
***cur pointer
$15637 = 131060


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$15638 = 6
***tmp:cur parameter address pointer
$15639 = 0x4d93a ""
***len
$15640 = 14
***cur pointer
$15641 = 131053


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$15642 = 6
***tmp:cur parameter address pointer
$15643 = 0x4bbfa ""
***len
$15644 = 14
***cur pointer
$15645 = 131039


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$15646 = 6
***tmp:cur parameter address pointer
$15647 = 0x4bb59 ""
***len
$15648 = 13
***cur pointer
$15649 = 131025


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$15650 = 6
***tmp:cur parameter address pointer
$15651 = 0x4e453 ""
***len
$15652 = 71
***cur pointer
$15653 = 131012


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$15654 = 6
***tmp:cur parameter address pointer
$15655 = 0x4d55b ""
***len
$15656 = 15
***cur pointer
$15657 = 130941


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$15658 = 6
***tmp:cur parameter address pointer
$15659 = 0x4bbb9 ""
***len
$15660 = 13
***cur pointer
$15661 = 130926


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$15662 = 6
***tmp:cur parameter address pointer
$15663 = 0x4db34 ""
***len
$15664 = 8
***cur pointer
$15665 = 130913


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$15666 = 6
***tmp:cur parameter address pointer
$15667 = 0x4d4fa ""
***len
$15668 = 14
***cur pointer
$15669 = 130905


    from_kmem=0) at exec.c:132
132			while (len) {
---in copy_strings
___pid
$15670 = 6
***tmp:cur parameter address pointer
$15671 = 0x5dd92 ""
***len
$15672 = 6
***cur pointer
$15673 = 130891


    from_kmem=0) at exec.c:142
142					if (from_kmem==2)
---in copy_strings
___pid
$15674 = 6
***cur physical pointer
$15675 = 0xf94000 ""


    argv=0x5ddcc, envp=0x4b14c) at exec.c:313
313			if (!p) {
---in do_execve
___pid
$15676 = 6
***parameter pointer
$15677 = 130885


Breakpoint 94, free_page_tables (from=268435456, size=1) at memory.c:116
116		for ( ; size-->0 ; dir++) {
---in free_page_tables
___pid
$15678 = 6
***from
$15679 = 268435456
***size
$15680 = 1
***dir
$15681 = (unsigned long *) 0x100 <setup_gdt+95>


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15682 = 6
***task
$15683 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$15684 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15685 = 6
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$15686 = 6
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 94, free_page_tables (from=268435456, size=16) at memory.c:116
116		for ( ; size-->0 ; dir++) {
---in free_page_tables
___pid
$15687 = 6
***from
$15688 = 268435456
***size
$15689 = 16
***dir
$15690 = (unsigned long *) 0x100 <setup_gdt+95>


Breakpoint 51, change_ldt (text_size=20480, page=0xf9bed0) at exec.c:167
167		set_limit(current->ldt[2],data_limit);
---in change_ldt
___pid
$15691 = 6
***data_limit
$15692 = 67108864
***code_limit
$15693 = 20480


Breakpoint 52, change_ldt (text_size=20480, page=0xf9bed0) at exec.c:174
174				put_page(page[i],data_base);
---in change_ldt
___pid
$15694 = 6
***data_base
$15695 = 335540224


Breakpoint 104, put_page (page=16334848, address=335540224) at memory.c:211
211			if (!(tmp=get_free_page()))
---in put_page
___pid
$15696 = 6
***page_table
$15697 = (unsigned long *) 0x13c <setup_gdt+155>
***page$15698 = 16334848


    argv=0x5ddcc, envp=0x4b14c) at exec.c:336
336		p = (unsigned long) create_tables((char *)p,argc,envc);
---in do_execve
___pid
$15699 = 6
***parameter space pointer change
$15700 = 67108677


    at exec.c:52
52		sp -= envc+1;
---in create_tables
___pid
$15701 = 6
***sp
$15702 = (unsigned long *) 0x3ffff44
***argc
$15703 = 1
***envc
$15704 = 10


    argv=0x5ddcc, envp=0x4b14c) at exec.c:347
347		eip[3] = p;			/* stack pointer */
---in do_execve
___pid
$15705 = 6
***new entry
$15706 = 0
***esp changeP


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15707 = 6
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15708 = 6
***cur state
$15709 = 0
***cur counter
$15710 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15711 = 6
***task
$15712 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$15713 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15714 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15715 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15716 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15717 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$15718 = 6
***fault address
***cur register edx
edx            0x10000000	268435456
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=268435456) at memory.c:367
367	{
---in do_no_page
___pid
$15719 = 6
***address
$15720 = 268435456


Breakpoint 103, do_no_page (error_code=4, address=268435456) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$15721 = 6
***page
$15722 = 16355328
***block
$15723 = 1


Breakpoint 42, do_no_page (error_code=4, address=268435456) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$15724 = 6
***nr array
$15725 = 4843
$15726 = 4844
$15727 = 4845
$15728 = 4846


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15729 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c824) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c824) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16355328, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268435456) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15730 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15731 = 6
***drive
$15732 = 0
***head
$15733 = 14


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15734 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15735 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c848) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c848) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16355328, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268435456) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15736 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15737 = 6
***drive
$15738 = 0
***head
$15739 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15740 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15741 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c86c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c86c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16355328, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268435456) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15742 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15743 = 6
***drive
$15744 = 0
***head
$15745 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15746 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15747 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c890) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c890) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16355328, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268435456) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15748 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15749 = 6
***drive
$15750 = 0
***head
$15751 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15752 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 104, put_page (page=16355328, address=268435456) at memory.c:211
211			if (!(tmp=get_free_page()))
---in put_page
___pid
$15753 = 6
***page_table
$15754 = (unsigned long *) 0x100 <setup_gdt+95>
***page$15755 = 16355328


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$15756 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$15757 = 6
***fault address
***cur register edx
edx            0x10005000	268455936
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=268455936) at memory.c:367
367	{
---in do_no_page
___pid
$15758 = 6
***address
$15759 = 268455936


Breakpoint 103, do_no_page (error_code=6, address=268455936) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$15760 = 6
***page
$15761 = 16347136
***block
$15762 = 21


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15763 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c8b4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c8b4) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=4849) at buffer.c:278
#5  0x0000ca5d in _bmap (inode=0x27c00 <inode_table+1568>, block=14, create=0)
    at inode.c:98
#6  0x0000cd24 in bmap (inode=0x27c00 <inode_table+1568>, block=21)
    at inode.c:142
#7  0x0000b751 in do_no_page (error_code=6, address=268455936) at memory.c:386
#8  0x0000b9cf in page_fault () at page.s:30
#9  0x00000006 in startup_32 () at head.s:20


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15764 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15765 = 6
***drive
$15766 = 0
***head
$15767 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15768 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 42, do_no_page (error_code=6, address=268455936) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$15769 = 6
***nr array
$15770 = 4864
$15771 = 4865
$15772 = 4866
$15773 = 4867


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15774 = 6
***task
$15775 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$15776 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15777 = 6
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$15778 = 6
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15779 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c8d8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c8d8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16347136, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=6, address=268455936) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000006 in startup_32 () at head.s:20


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15780 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15781 = 6
***drive
$15782 = 0
***head
$15783 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15784 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15785 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c8fc) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c8fc) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16347136, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=6, address=268455936) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000006 in startup_32 () at head.s:20


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15786 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15787 = 6
***drive
$15788 = 0
***head
$15789 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15790 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15791 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c920) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c920) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16347136, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=6, address=268455936) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000006 in startup_32 () at head.s:20


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15792 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15793 = 6
***drive
$15794 = 0
***head
$15795 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15796 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15797 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c944) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c944) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16347136, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=6, address=268455936) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000006 in startup_32 () at head.s:20


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15798 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15799 = 6
***drive
$15800 = 0
***head
$15801 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15802 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$15803 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$15804 = 6
***fault address
***cur register edx
edx            0x100031a8	268448168
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=268448168) at memory.c:367
367	{
---in do_no_page
___pid
$15805 = 6
***address
$15806 = 268448168


Breakpoint 103, do_no_page (error_code=4, address=268447744) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$15807 = 6
***page
$15808 = 16343040
***block
$15809 = 13


Breakpoint 42, do_no_page (error_code=4, address=268447744) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$15810 = 6
***nr array
$15811 = 4856
$15812 = 4857
$15813 = 4858
$15814 = 4859


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15815 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c968) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c968) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16343040, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268447744) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15816 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15817 = 6
***drive
$15818 = 0
***head
$15819 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15820 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15821 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c98c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c98c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16343040, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268447744) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15822 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15823 = 6
***drive
$15824 = 0
***head
$15825 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15826 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15827 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c9b0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c9b0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16343040, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268447744) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15828 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15829 = 6
***drive
$15830 = 0
***head
$15831 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15832 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15833 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c9d4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c9d4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16343040, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268447744) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15834 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15835 = 6
***drive
$15836 = 0
***head
$15837 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15838 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$15839 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$15840 = 6
***fault address
***cur register edx
edx            0x10004470	268452976
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=268452976) at memory.c:367
367	{
---in do_no_page
___pid
$15841 = 6
***address
$15842 = 268452976


Breakpoint 103, do_no_page (error_code=4, address=268451840) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$15843 = 6
***page
$15844 = 16338944
***block
$15845 = 17


Breakpoint 42, do_no_page (error_code=4, address=268451840) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$15846 = 6
***nr array
$15847 = 4860
$15848 = 4861
$15849 = 4862
$15850 = 4863


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15851 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2c9f8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2c9f8) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16338944, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268451840) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15852 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15853 = 6
***drive
$15854 = 0
***head
$15855 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15856 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15857 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ca1c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ca1c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16338944, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268451840) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15858 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15859 = 6
***drive
$15860 = 0
***head
$15861 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15862 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15863 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ca40) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ca40) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16338944, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268451840) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15864 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15865 = 6
***drive
$15866 = 0
***head
$15867 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15868 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15869 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ca64) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ca64) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16338944, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268451840) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15870 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15871 = 6
***drive
$15872 = 0
***head
$15873 = 0


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15874 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$15875 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15876 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x1b	27
***cur register ecx
ecx            0x442	1090
***cur register edx
edx            0x1b6	438


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15877 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$15878 = 6
***open filename
$15879 = 0 '\000'
***fd
$15880 = 3


    at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$15881 = 6
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15882 = 6
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15883 = 6
***cur state
$15884 = 0
***cur counter
$15885 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15886 = 6
***task
$15887 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$15888 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15889 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15890 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15891 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15892 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$15893 = 6
***fault address
***cur register edx
edx            0x1000175c	268441436
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=268441436) at memory.c:367
367	{
---in do_no_page
___pid
$15894 = 6
***address
$15895 = 268441436


Breakpoint 103, do_no_page (error_code=4, address=268439552) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$15896 = 6
***page
$15897 = 16330752
***block
$15898 = 5


Breakpoint 42, do_no_page (error_code=4, address=268439552) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$15899 = 6
***nr array
$15900 = 4847
$15901 = 4848
$15902 = 4850
$15903 = 4851


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15904 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2ca88) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2ca88) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16330752, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268439552) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15905 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15906 = 6
***drive
$15907 = 0
***head
$15908 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15909 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15910 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2caac) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2caac) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16330752, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268439552) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15911 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15912 = 6
***drive
$15913 = 0
***head
$15914 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15915 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15916 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2cad0) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2cad0) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16330752, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268439552) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15917 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15918 = 6
***drive
$15919 = 0
***head
$15920 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15921 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15922 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2caf4) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2caf4) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16330752, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268439552) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15923 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15924 = 6
***drive
$15925 = 0
***head
$15926 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15927 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15928 = 6
***task
$15929 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$15930 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15931 = 6
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$15932 = 6
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$15933 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15934 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x89a0	35232
***cur register ecx
ecx            0x442	1090
***cur register edx
edx            0x3000	12288


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15935 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=35232) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$15936 = 6
***end_data_seg
$15937 = 35232
***cur brk
$15938 = 24576


Breakpoint 59, sys_brk (end_data_seg=35232) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$15939 = 6
***cur brk
$15940 = 35232


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15941 = 6
***eax as return
eax            0x89a0	35232
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15942 = 6
***cur state
$15943 = 0
***cur counter
$15944 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15945 = 6
***task
$15946 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$15947 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15948 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15949 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15950 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15951 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$15952 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x9000	36864
***cur register ecx
ecx            0x442	1090
***cur register edx
edx            0x660	1632


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$15953 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=36864) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$15954 = 6
***end_data_seg
$15955 = 36864
***cur brk
$15956 = 35232


Breakpoint 59, sys_brk (end_data_seg=36864) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$15957 = 6
***cur brk
$15958 = 36864


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$15959 = 6
***eax as return
eax            0x9000	36864
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$15960 = 6
***cur state
$15961 = 0
***cur counter
$15962 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$15963 = 6
***task
$15964 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$15965 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$15966 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$15967 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$15968 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$15969 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$15970 = 6
***fault address
***cur register edx
edx            0x10002138	268443960
***error code
***cur register eax
eax            0x4	4


Breakpoint 102, do_no_page (error_code=4, address=268443960) at memory.c:367
367	{
---in do_no_page
___pid
$15971 = 6
***address
$15972 = 268443960


Breakpoint 103, do_no_page (error_code=4, address=268443648) at memory.c:385
385		for (i=0 ; i<4 ; block++,i++)
---in do_no_page
___pid
$15973 = 6
***page
$15974 = 16326656
***block
$15975 = 9


Breakpoint 42, do_no_page (error_code=4, address=268443648) at memory.c:387
387		bread_page(page,current->executable->i_dev,nr);
---in do_no_page
___pid
$15976 = 6
***nr array
$15977 = 4852
$15978 = 4853
$15979 = 4854
$15980 = 4855


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15981 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2cb18) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2cb18) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16326656, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268443648) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15982 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15983 = 6
***drive
$15984 = 0
***head
$15985 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15986 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15987 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2cb3c) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2cb3c) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16326656, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268443648) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15988 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15989 = 6
***drive
$15990 = 0
***head
$15991 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15992 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15993 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2cb60) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2cb60) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16326656, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268443648) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$15994 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$15995 = 6
***drive
$15996 = 0
***head
$15997 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15998 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$15999 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2cb84) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2cb84) at ll_rw_blk.c:154
#4  0x0000df1d in bread_page (address=16326656, dev=769, b=0xf9bf9c)
    at buffer.c:308
#5  0x0000b795 in do_no_page (error_code=4, address=268443648) at memory.c:387
#6  0x0000b9cf in page_fault () at page.s:30
#7  0x00000004 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$16000 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$16001 = 6
***drive
$16002 = 0
***head
$16003 = 15


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$16004 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16005 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16006 = 6
***fault address
***cur register edx
edx            0x10006000	268460032
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=268460032) at memory.c:367
367	{
---in do_no_page
___pid
$16007 = 6
***address
$16008 = 268460032


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16009 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16010 = 6
***fault address
***cur register edx
edx            0x10007000	268464128
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=268464128) at memory.c:367
367	{
---in do_no_page
___pid
$16011 = 6
***address
$16012 = 268464128


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16013 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16014 = 6
***fault address
***cur register edx
edx            0x10008000	268468224
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=268468224) at memory.c:367
367	{
---in do_no_page
___pid
$16015 = 6
***address
$16016 = 268468224


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16017 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16018 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0xa000	40960
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x1000	4096


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16019 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=40960) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$16020 = 6
***end_data_seg
$16021 = 40960
***cur brk
$16022 = 36864


Breakpoint 59, sys_brk (end_data_seg=40960) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$16023 = 6
***cur brk
$16024 = 40960


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16025 = 6
***eax as return
eax            0xa000	40960
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16026 = 6
***cur state
$16027 = 0
***cur counter
$16028 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16029 = 6
***task
$16030 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$16031 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16032 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16033 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16034 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16035 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16036 = 6
***fault address
***cur register edx
edx            0x10009040	268472384
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=268472384) at memory.c:367
367	{
---in do_no_page
___pid
$16037 = 6
***address
$16038 = 268472384


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16039 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16040 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffe80	67108480


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16041 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=3, cmd=21505, arg=67108480) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$16042 = 6
***fd
$16043 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16044 = 6
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16045 = 6
***cur state
$16046 = 0
***cur counter
$16047 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16048 = 6
***task
$16049 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$16050 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16051 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16052 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16053 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16054 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16055 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0xb000	45056
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x1000	4096


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16056 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=45056) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$16057 = 6
***end_data_seg
$16058 = 45056
***cur brk
$16059 = 40960


Breakpoint 59, sys_brk (end_data_seg=45056) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$16060 = 6
***cur brk
$16061 = 45056


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16062 = 6
***eax as return
eax            0xb000	45056
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16063 = 6
***cur state
$16064 = 0
***cur counter
$16065 = 12


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16066 = 6
***task
$16067 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$16068 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16069 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16070 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16071 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16072 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16073 = 6
***fault address
***cur register edx
edx            0x1000a400	268477440
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=268477440) at memory.c:367
367	{
---in do_no_page
___pid
$16074 = 6
***address
$16075 = 268477440


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16076 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16077 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2	2
***cur register ebx
ebx            0x5ddec	384492
***cur register ecx
ecx            0xa	10
***cur register edx
edx            0x3310	13072


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16078 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 10, sys_fork () at system_call.s:217
217		call copy_process
---in sys_fork
___pid
$16079 = 6
***cur register gs
gs             0x17	23
***push gs
***cur register esi
esi            0x1	1
***push esi
***cur register edi
edi            0xffc	4092
***push edi
***cur register ebp
ebp            0x3fffefc	0x3fffefc
***push ebp
***cur register eax
eax            0x5	5
;;;eax to nr


    cs=15, eflags=514, esp=67108576, ss=23) at fork.c:79
79		p = (struct task_struct *) get_free_page();
---in copy_process
***father pid
$16080 = 6
***new pid
$16081 = 7
***task number
$16082 = 5
***before free page
***cur register ecx
ecx            0x5	5
***cur register edi
edi            0xffc	4092


    cs=15, eflags=514, esp=67108576, ss=23) at fork.c:80
80		if (!p)
---in copy_process
___pid
$16083 = 6
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0xffc	4092
***eax:physical address
eax            0xf8c000	16302080


    cs=15, eflags=514, esp=67108576, ss=23) at fork.c:86
86		*p = *current;	/* NOTE! this doesn't copy the supervisor stack */
---in copy_process
___pid
$16084 = 6
***copy task struct


    cs=15, eflags=514, esp=67108576, ss=23) at fork.c:116
116		p->tss.ldt = _LDT(nr);
---in copy_process
___pid
$16085 = 6
***new process state
$16086 = 2
***new process tss.esp0
$16087 = 16306176


    cs=15, eflags=514, esp=67108576, ss=23) at fork.c:117
117		p->tss.trace_bitmap = 0x80000000;
---in copy_process
___pid
$16088 = 6
***new LDT index in GDT
$16089 = 120
***new cs in LDT
$16090 = {a = 4, b = 281082624}
***new ds in LDT
$16091 = {a = 16383, b = 281080576}


Breakpoint 16, copy_mem (nr=5, p=0xf8c000) at fork.c:54
54		p->start_code = new_code_base;
---in copy_mem
___pid
$16092 = 6
***new_data_base
$16093 = 335544320
***old_data_base
$16094 = 268435456


    at memory.c:163
163		for( ; size-->0 ; from_dir++,to_dir++) {
---in copy_page_tables
___pid
$16095 = 6
***from_dir
$16096 = (unsigned long *) 0x100 <setup_gdt+95>
***to_dir
$16097 = (unsigned long *) 0x140 <setup_gdt+159>
size
$16098 = 16


    at memory.c:169
169			if (!(to_page_table = (unsigned long *) get_free_page()))
---in copy_page_tables
___pid
$16099 = 6
***before free page
***cur register ecx
ecx            0xf8c2e2	16302818
***cur register edi
edi            0xf8c2e7	16302823


    at memory.c:171
171			*to_dir = ((unsigned long) to_page_table) | 7;
---in copy_page_tables
___pid
$16100 = 6
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0xf8c2e7	16302823
***from_page_table
$16101 = (unsigned long *) 0xf98000
***to_page_table
$16102 = (unsigned long *) 0xf8b000


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16103 = 6
***task
$16104 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16105 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16106 = 6
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$16107 = 6
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


    at memory.c:169
169			if (!(to_page_table = (unsigned long *) get_free_page()))
---in copy_page_tables
___pid
$16108 = 6
***before free page
***cur register ecx
ecx            0x266e0	157408
***cur register edi
edi            0xf8c2e7	16302823


    at memory.c:171
171			*to_dir = ((unsigned long) to_page_table) | 7;
---in copy_page_tables
___pid
$16109 = 6
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0xf8c2e7	16302823
***from_page_table
$16110 = (unsigned long *) 0xf9a000
***to_page_table
$16111 = (unsigned long *) 0xf8a000


    cs=15, eflags=514, esp=67108576, ss=23) at fork.c:134
134		set_tss_desc(gdt+(nr<<1)+FIRST_TSS_ENTRY,&(p->tss));
---in copy_process
___pid
$16112 = 6
tss in GDT
$16113 = 14
***tss address
$16114 = (struct tss_struct *) 0xf8c2e8
ldt in GDT
$16115 = 15
***ldt address
$16116 = (struct desc_struct (*)[3]) 0xf8c2d0


    cs=15, eflags=514, esp=67108576, ss=23) at fork.c:137
137		return last_pid;
---in copy_process
___pid
$16117 = 6
***new process state
$16118 = 0


Breakpoint 19, sys_fork () at system_call.s:219
219	1:	ret
---in sys_fork
***cur register esp
esp            0xf9bfd0	0xf9bfd0


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16119 = 6
***cur state
$16120 = 0
***cur counter
$16121 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16122 = 6
***task
$16123 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16124 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16125 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16126 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16127 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16128 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16129 = 6
***fault address
***cur register edx
edx            0x13fffef4	335544052
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=335544052) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$16130 = 6


Breakpoint 98, un_wp_page (table_entry=0xf9affc) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$16131 = 6
***table entry
$16132 = (unsigned long *) 0xf9affc


Breakpoint 99, un_wp_page (table_entry=0xf9affc) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$16133 = 6
***physical page address
$16134 = 16334848


Breakpoint 100, un_wp_page (table_entry=0xf9affc) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$16135 = 6
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf9affc) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$16136 = 6
***new page
$16137 = 16289792


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16138 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16139 = 6
***fault address
***cur register edx
edx            0x10005014	268455956
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268455956) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$16140 = 6


Breakpoint 98, un_wp_page (table_entry=0xf98014) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$16141 = 6
***table entry
$16142 = (unsigned long *) 0xf98014


Breakpoint 99, un_wp_page (table_entry=0xf98014) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$16143 = 6
***physical page address
$16144 = 16347136


Breakpoint 100, un_wp_page (table_entry=0xf98014) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$16145 = 6
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf98014) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$16146 = 6
***new page
$16147 = 16285696


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16148 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16149 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffdc8	67108296


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16150 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=1, cmd=21505, arg=67108296) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$16151 = 6
***fd
$16152 = 1


Breakpoint 61, sys_ioctl (fd=1, cmd=21505, arg=67108296) at ioctl.c:40
40		dev = filp->f_inode->i_zone[0];
---in sys_ioctl
___pid
$16153 = 6
***mode and fd right
***dev
$16154 = 45834


Breakpoint 91, write_verify (address=335540224) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$16155 = 6
***call stack
#0  write_verify (address=335540224) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fffdc8, size=-532) at fork.c:35
#2  0x00019486 in get_termios (tty=0x234c0 <tty_table>, termios=0x3fffdc8)
    at tty_ioctl.c:60
#3  0x0001976f in tty_ioctl (dev=0, cmd=21505, arg=67108296) at tty_ioctl.c:127
#4  0x00013a54 in sys_ioctl (fd=1, cmd=21505, arg=67108296) at ioctl.c:45
#5  0x0000793f in system_call () at system_call.s:94
#6  0x00000001 in startup_32 () at head.s:19
***address
$16156 = 335540224


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16157 = 6
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16158 = 6
***cur state
$16159 = 0
***cur counter
$16160 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16161 = 6
***task
$16162 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16163 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16164 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16165 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16166 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16167 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16168 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16169 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16170 = 6


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16171 = 6
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16172 = 6


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16173 = 6
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16174 = 6
***cur state
$16175 = 0
***cur counter
$16176 = 11


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16177 = 6
***task
$16178 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16179 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16180 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16181 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16182 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16183 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16184 = 6
***fault address
***cur register edx
edx            0x1000900c	268472332
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268472332) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$16185 = 6


Breakpoint 98, un_wp_page (table_entry=0xf98024) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$16186 = 6
***table entry
$16187 = (unsigned long *) 0xf98024


Breakpoint 99, un_wp_page (table_entry=0xf98024) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$16188 = 6
***physical page address
$16189 = 16310272


Breakpoint 100, un_wp_page (table_entry=0xf98024) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$16190 = 6
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf98024) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$16191 = 6
***new page
$16192 = 16281600


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16193 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16194 = 6
***fault address
***cur register edx
edx            0x1000a000	268476416
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268476416) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$16195 = 6


Breakpoint 98, un_wp_page (table_entry=0xf98028) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$16196 = 6
***table entry
$16197 = (unsigned long *) 0xf98028


Breakpoint 99, un_wp_page (table_entry=0xf98028) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$16198 = 6
***physical page address
$16199 = 16306176


Breakpoint 100, un_wp_page (table_entry=0xf98028) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$16200 = 6
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf98028) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$16201 = 6
***new page
$16202 = 16277504


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16203 = 6
***task
$16204 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16205 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16206 = 6
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$16207 = 6
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16208 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16209 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16210 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16211 = 6


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16212 = 6
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16213 = 6


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16214 = 6
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16215 = 6
***cur state
$16216 = 0
***cur counter
$16217 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16218 = 6
***task
$16219 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16220 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16221 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16222 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16223 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16224 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16225 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16226 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16227 = 6


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16228 = 6
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16229 = 6


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16230 = 6
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16231 = 6
***cur state
$16232 = 0
***cur counter
$16233 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16234 = 6
***task
$16235 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16236 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16237 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16238 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16239 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16240 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16241 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16242 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16243 = 6


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16244 = 6
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16245 = 6


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16246 = 6
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16247 = 6
***cur state
$16248 = 0
***cur counter
$16249 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16250 = 6
***task
$16251 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16252 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16253 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16254 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16255 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16256 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16257 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16258 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16259 = 6


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16260 = 6
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16261 = 6


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16262 = 6
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16263 = 6
***cur state
$16264 = 0
***cur counter
$16265 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16266 = 6
***task
$16267 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16268 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16269 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16270 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16271 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16272 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16273 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16274 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16275 = 6


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16276 = 6
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16277 = 6


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16278 = 6
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16279 = 6
***cur state
$16280 = 0
***cur counter
$16281 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16282 = 6
***task
$16283 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16284 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16285 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16286 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16287 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16288 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16289 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16290 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16291 = 6


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16292 = 6
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16293 = 6


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16294 = 6
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16295 = 6
***cur state
$16296 = 0
***cur counter
$16297 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16298 = 6
***task
$16299 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16300 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16301 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16302 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16303 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16304 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16305 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16306 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16307 = 6


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16308 = 6
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16309 = 6


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16310 = 6
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16311 = 6
***cur state
$16312 = 0
***cur counter
$16313 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16314 = 6
***task
$16315 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16316 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16317 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16318 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16319 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16320 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16321 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16322 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16323 = 6


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16324 = 6
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16325 = 6


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16326 = 6
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16327 = 6
***cur state
$16328 = 0
***cur counter
$16329 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16330 = 6
***task
$16331 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16332 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16333 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16334 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16335 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16336 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16337 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16338 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16339 = 6


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16340 = 6
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16341 = 6


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16342 = 6
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16343 = 6
***cur state
$16344 = 0
***cur counter
$16345 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16346 = 6
***task
$16347 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16348 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16349 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16350 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16351 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16352 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16353 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16354 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16355 = 6


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16356 = 6
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16357 = 6


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16358 = 6
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16359 = 6
***cur state
$16360 = 0
***cur counter
$16361 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16362 = 6
***task
$16363 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16364 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16365 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16366 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16367 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16368 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16369 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0xa000	40960
***cur register edx
edx            0xb	11


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16370 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16371 = 6


    at read_write.c:100
100			return file_write(inode,file,buf,count);
---in sys_write
___pid
$16372 = 6
***call file write


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$16373 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00013df7 in add_request (dev=0x27d38 <blk_dev+24>, 
    req=0x29fbc <request+1116>) at ll_rw_blk.c:75
#2  0x00014142 in make_request (major=3, rw=0, bh=0x2cba8) at ll_rw_blk.c:142
#3  0x000141af in ll_rw_block (rw=0, bh=0x2cba8) at ll_rw_blk.c:154
#4  0x0000de4f in bread (dev=769, block=4799) at buffer.c:278
#5  0x0000f58a in file_write (inode=0x27c38 <inode_table+1624>, 
    filp=0x29780 <file_table+32>, buf=0xa000 <sys_kill+69> "", count=11)
    at file_dev.c:67
#6  0x0000c6ae in sys_write (fd=3, buf=0xa000 <sys_kill+69> "", count=11)
    at read_write.c:100
#7  0x0000793f in system_call () at system_call.s:94
#8  0x00000003 in startup_32 () at head.s:19


Breakpoint 83, do_hd_request () at hd.c:338
338			hd_out(dev,nsect,sec,head,cyl,WIN_READ,&read_intr);
---in do_hd_request
___pid
$16374 = 6
***hd out read_intr


    intr_addr=0x15a27 <read_intr>) at hd.c:186
186		if (drive>1 || head>15)
---in hd_out
___pid
$16375 = 6
***drive
$16376 = 0
***head
$16377 = 12


Breakpoint 79, do_hd_request () at hd.c:296
296		int i,r = 0;
---in do_hd_request
___pid
$16378 = 6
***call stack
#0  do_hd_request () at hd.c:296
#1  0x00015ae4 in read_intr () at hd.c:266
#2  0x00007a84 in hd_interrupt () at system_call.s:243
#3  0x000001f7 in setup_gdt () at head.s:109
#4  0x00000000 in ?? ()


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16379 = 6
***eax as return
eax            0xb	11
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16380 = 6
***cur state
$16381 = 0
***cur counter
$16382 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16383 = 6
***task
$16384 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16385 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16386 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16387 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16388 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16389 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16390 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16391 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$16392 = 6
***fd
$16393 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16394 = 6
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16395 = 6
***cur state
$16396 = 0
***cur counter
$16397 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16398 = 6
***task
$16399 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16400 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16401 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16402 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16403 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16404 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16405 = 6
***fault address
***cur register edx
edx            0x1000603c	268460092
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268460092) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$16406 = 6


Breakpoint 98, un_wp_page (table_entry=0xf98018) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$16407 = 6
***table entry
$16408 = (unsigned long *) 0xf98018


Breakpoint 99, un_wp_page (table_entry=0xf98018) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$16409 = 6
***physical page address
$16410 = 16322560


Breakpoint 100, un_wp_page (table_entry=0xf98018) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$16411 = 6
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf98018) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$16412 = 6
***new page
$16413 = 16273408


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16414 = 6
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16415 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16416 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16417 = 6


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16418 = 6
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16419 = 6
***cur state
$16420 = 0
***cur counter
$16421 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16422 = 6
***task
$16423 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16424 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16425 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16426 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16427 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16428 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16429 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16430 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=1) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$16431 = 6
***fd
$16432 = 1


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16433 = 6
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16434 = 6
***cur state
$16435 = 0
***cur counter
$16436 = 10


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16437 = 6
***task
$16438 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16439 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16440 = 6
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16441 = 6
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16442 = 6
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16443 = 6
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16444 = 6
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9bfec	0xf9bfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1	1
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16445 = 6
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 6, do_exit (code=0) at exit.c:105
105		free_page_tables(get_base(current->ldt[1]),get_limit(0x0f));
---in do_exit
***pid
$16446 = 6
***father pid
$16447 = 4


Breakpoint 94, free_page_tables (from=268435456, size=1) at memory.c:116
116		for ( ; size-->0 ; dir++) {
---in free_page_tables
___pid
$16448 = 6
***from
$16449 = 268435456
***size
$16450 = 1
***dir
$16451 = (unsigned long *) 0x100 <setup_gdt+95>


Breakpoint 94, free_page_tables (from=268435456, size=16) at memory.c:116
116		for ( ; size-->0 ; dir++) {
---in free_page_tables
___pid
$16452 = 6
***from
$16453 = 268435456
***size
$16454 = 16
***dir
$16455 = (unsigned long *) 0x100 <setup_gdt+95>


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16456 = 6
***task
$16457 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16458 = (struct task_struct *) 0xf9b000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16459 = 6
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$16460 = 6
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 76, do_exit (code=0) at exit.c:109
109				task[i]->father = 1;
---in do_exit
***in child loop:pid
$16461 = 7
***child state
$16462 = 0


Breakpoint 64, sys_close (fd=0) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$16463 = 6
***fd
$16464 = 0


Breakpoint 64, sys_close (fd=2) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$16465 = 6
***fd
$16466 = 2


Breakpoint 77, do_exit (code=0) at exit.c:131
131		tell_father(current->father);
---in do_exit
***cur state
$16467 = 3
***exit code
$16468 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x0000a49b in do_exit (code=0) at exit.c:132
#2  0x0000a4c6 in sys_exit (error_code=0) at exit.c:138
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16469 = 0
***loop pid
$16470 = 7
***loop counter
$16471 = 15


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16472 = 3
***loop pid
$16473 = 6
***loop counter
$16474 = 9


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16475 = 1
***loop pid
$16476 = 3
***loop counter
$16477 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16478 = 0
***loop pid
$16479 = 4
***loop counter
$16480 = 0


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16481 = 1
***loop pid
$16482 = 1
***loop counter
$16483 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$16484 = 7


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16485 = 7
***fault address
***cur register edx
edx            0x17fffef4	402652916
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=402652916) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$16486 = 7


Breakpoint 98, un_wp_page (table_entry=0xf8affc) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$16487 = 7
***table entry
$16488 = (unsigned long *) 0xf8affc


Breakpoint 99, un_wp_page (table_entry=0xf8affc) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$16489 = 7
***physical page address
$16490 = 16334848


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16491 = 7
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16492 = 7
***fault address
***cur register edx
edx            0x14005014	335564820
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=335564820) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$16493 = 7


Breakpoint 98, un_wp_page (table_entry=0xf8b014) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$16494 = 7
***table entry
$16495 = (unsigned long *) 0xf8b014


Breakpoint 99, un_wp_page (table_entry=0xf8b014) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$16496 = 7
***physical page address
$16497 = 16347136


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16498 = 7
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16499 = 7
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf8cfec	0xf8cfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fffdc8	67108296


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16500 = 7
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=1, cmd=21505, arg=67108296) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$16501 = 7
***fd
$16502 = 1


Breakpoint 61, sys_ioctl (fd=1, cmd=21505, arg=67108296) at ioctl.c:40
40		dev = filp->f_inode->i_zone[0];
---in sys_ioctl
___pid
$16503 = 7
***mode and fd right
***dev
$16504 = 45834


Breakpoint 91, write_verify (address=402649088) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$16505 = 7
***call stack
#0  write_verify (address=402649088) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fffdc8, size=-532) at fork.c:35
#2  0x00019486 in get_termios (tty=0x234c0 <tty_table>, termios=0x3fffdc8)
    at tty_ioctl.c:60
#3  0x0001976f in tty_ioctl (dev=0, cmd=21505, arg=67108296) at tty_ioctl.c:127
#4  0x00013a54 in sys_ioctl (fd=1, cmd=21505, arg=67108296) at ioctl.c:45
#5  0x0000793f in system_call () at system_call.s:94
#6  0x00000001 in startup_32 () at head.s:19
***address
$16506 = 402649088


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16507 = 7
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16508 = 7
***cur state
$16509 = 0
***cur counter
$16510 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16511 = 7
***task
$16512 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16513 = (struct task_struct *) 0xf8c000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16514 = 7
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16515 = 7
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16516 = 7
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16517 = 7
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16518 = 7
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf8cfec	0xf8cfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16519 = 7
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16520 = 7


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16521 = 7
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16522 = 7


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16523 = 7
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16524 = 7
***cur state
$16525 = 0
***cur counter
$16526 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16527 = 7
***task
$16528 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16529 = (struct task_struct *) 0xf8c000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16530 = 7
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16531 = 7
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16532 = 7
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16533 = 7
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16534 = 7
***fault address
***cur register edx
edx            0x1400900c	335581196
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=335581196) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$16535 = 7


Breakpoint 98, un_wp_page (table_entry=0xf8b024) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$16536 = 7
***table entry
$16537 = (unsigned long *) 0xf8b024


Breakpoint 99, un_wp_page (table_entry=0xf8b024) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$16538 = 7
***physical page address
$16539 = 16310272


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16540 = 7
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16541 = 7
***fault address
***cur register edx
edx            0x1400a000	335585280
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=335585280) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$16542 = 7


Breakpoint 98, un_wp_page (table_entry=0xf8b028) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$16543 = 7
***table entry
$16544 = (unsigned long *) 0xf8b028


Breakpoint 99, un_wp_page (table_entry=0xf8b028) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$16545 = 7
***physical page address
$16546 = 16306176


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16547 = 7
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16548 = 7
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf8cfec	0xf8cfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16549 = 7
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16550 = 7


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16551 = 7
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16552 = 7


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16553 = 7
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16554 = 7
***cur state
$16555 = 0
***cur counter
$16556 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16557 = 7
***task
$16558 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16559 = (struct task_struct *) 0xf8c000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16560 = 7
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16561 = 7
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16562 = 7
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16563 = 7
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16564 = 7
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf8cfec	0xf8cfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16565 = 7
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16566 = 7


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16567 = 7
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16568 = 7


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16569 = 7
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16570 = 7
***cur state
$16571 = 0
***cur counter
$16572 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16573 = 7
***task
$16574 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16575 = (struct task_struct *) 0xf8c000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16576 = 7
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16577 = 7
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16578 = 7
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16579 = 7
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16580 = 7
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf8cfec	0xf8cfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16581 = 7
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16582 = 7


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16583 = 7
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16584 = 7


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16585 = 7
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16586 = 7
***cur state
$16587 = 0
***cur counter
$16588 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16589 = 7
***task
$16590 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16591 = (struct task_struct *) 0xf8c000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16592 = 7
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16593 = 7
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16594 = 7
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16595 = 7
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16596 = 7
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf8cfec	0xf8cfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16597 = 7
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16598 = 7


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16599 = 7
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16600 = 7


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16601 = 7
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16602 = 7
***cur state
$16603 = 0
***cur counter
$16604 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16605 = 7
***task
$16606 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16607 = (struct task_struct *) 0xf8c000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16608 = 7
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16609 = 7
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16610 = 7
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16611 = 7
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16612 = 7
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf8cfec	0xf8cfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16613 = 7
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16614 = 7


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16615 = 7
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16616 = 7


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16617 = 7
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16618 = 7
***cur state
$16619 = 0
***cur counter
$16620 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16621 = 7
***task
$16622 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16623 = (struct task_struct *) 0xf8c000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16624 = 7
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16625 = 7
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16626 = 7
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16627 = 7
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16628 = 7
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf8cfec	0xf8cfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16629 = 7
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16630 = 7


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16631 = 7
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16632 = 7


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16633 = 7
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16634 = 7
***cur state
$16635 = 0
***cur counter
$16636 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16637 = 7
***task
$16638 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16639 = (struct task_struct *) 0xf8c000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16640 = 7
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16641 = 7
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16642 = 7
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16643 = 7
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16644 = 7
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf8cfec	0xf8cfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16645 = 7
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16646 = 7


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16647 = 7
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16648 = 7


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16649 = 7
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16650 = 7
***cur state
$16651 = 0
***cur counter
$16652 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16653 = 7
***task
$16654 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16655 = (struct task_struct *) 0xf8c000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16656 = 7
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16657 = 7
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16658 = 7
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16659 = 7
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16660 = 7
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf8cfec	0xf8cfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16661 = 7
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16662 = 7


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16663 = 7
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16664 = 7


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16665 = 7
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16666 = 7
***cur state
$16667 = 0
***cur counter
$16668 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16669 = 7
***task
$16670 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16671 = (struct task_struct *) 0xf8c000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16672 = 7
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16673 = 7
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16674 = 7
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16675 = 7
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16676 = 7
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf8cfec	0xf8cfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16677 = 7
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16678 = 7


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16679 = 7
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16680 = 7


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16681 = 7
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16682 = 7
***cur state
$16683 = 0
***cur counter
$16684 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16685 = 7
***task
$16686 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16687 = (struct task_struct *) 0xf8c000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16688 = 7
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16689 = 7
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16690 = 7
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16691 = 7
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16692 = 7
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf8cfec	0xf8cfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16693 = 7
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16694 = 7


    at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$16695 = 7
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$16696 = 7


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16697 = 7
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16698 = 7
***cur state
$16699 = 0
***cur counter
$16700 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16701 = 7
***task
$16702 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16703 = (struct task_struct *) 0xf8c000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16704 = 7
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16705 = 7
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16706 = 7
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16707 = 7
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16708 = 7
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf8cfec	0xf8cfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0xa000	40960
***cur register edx
edx            0xb	11


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16709 = 7
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16710 = 7


    at read_write.c:100
100			return file_write(inode,file,buf,count);
---in sys_write
___pid
$16711 = 7
***call file write


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16712 = 7
***eax as return
eax            0xb	11
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16713 = 7
***cur state
$16714 = 0
***cur counter
$16715 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16716 = 7
***task
$16717 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16718 = (struct task_struct *) 0xf8c000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16719 = 7
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16720 = 7
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16721 = 7
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16722 = 7
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16723 = 7
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf8cfec	0xf8cfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16724 = 7
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$16725 = 7
***fd
$16726 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16727 = 7
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16728 = 7
***cur state
$16729 = 0
***cur counter
$16730 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16731 = 7
***task
$16732 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16733 = (struct task_struct *) 0xf8c000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16734 = 7
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16735 = 7
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16736 = 7
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16737 = 7
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16738 = 7
***fault address
***cur register edx
edx            0x1400603c	335568956
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=335568956) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$16739 = 7


Breakpoint 98, un_wp_page (table_entry=0xf8b018) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$16740 = 7
***table entry
$16741 = (unsigned long *) 0xf8b018


Breakpoint 99, un_wp_page (table_entry=0xf8b018) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$16742 = 7
***physical page address
$16743 = 16322560


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16744 = 7
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16745 = 7
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf8cfec	0xf8cfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x54e0	21728
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16746 = 7
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$16747 = 7


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16748 = 7
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16749 = 7
***cur state
$16750 = 0
***cur counter
$16751 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16752 = 7
***task
$16753 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16754 = (struct task_struct *) 0xf8c000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16755 = 7
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16756 = 7
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16757 = 7
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16758 = 7
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16759 = 7
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf8cfec	0xf8cfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16760 = 7
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=1) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$16761 = 7
***fd
$16762 = 1


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16763 = 7
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16764 = 7
***cur state
$16765 = 0
***cur counter
$16766 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16767 = 7
***task
$16768 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16769 = (struct task_struct *) 0xf8c000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16770 = 7
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16771 = 7
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16772 = 7
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16773 = 7
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16774 = 7
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf8cfec	0xf8cfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1	1
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16775 = 7
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 6, do_exit (code=0) at exit.c:105
105		free_page_tables(get_base(current->ldt[1]),get_limit(0x0f));
---in do_exit
***pid
$16776 = 7
***father pid
$16777 = 1


Breakpoint 94, free_page_tables (from=335544320, size=1) at memory.c:116
116		for ( ; size-->0 ; dir++) {
---in free_page_tables
___pid
$16778 = 7
***from
$16779 = 335544320
***size
$16780 = 1
***dir
$16781 = (unsigned long *) 0x140 <setup_gdt+159>


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16782 = 7
***task
$16783 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0xf8c000, 0x0 <startup_32> <repeats 58 times>}
***current
$16784 = (struct task_struct *) 0xf8c000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16785 = 7
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$16786 = 7
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 94, free_page_tables (from=335544320, size=16) at memory.c:116
116		for ( ; size-->0 ; dir++) {
---in free_page_tables
___pid
$16787 = 7
***from
$16788 = 335544320
***size
$16789 = 16
***dir
$16790 = (unsigned long *) 0x140 <setup_gdt+159>


Breakpoint 64, sys_close (fd=0) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$16791 = 7
***fd
$16792 = 0


Breakpoint 64, sys_close (fd=2) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$16793 = 7
***fd
$16794 = 2


Breakpoint 77, do_exit (code=0) at exit.c:131
131		tell_father(current->father);
---in do_exit
***cur state
$16795 = 3
***exit code
$16796 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x0000a49b in do_exit (code=0) at exit.c:132
#2  0x0000a4c6 in sys_exit (error_code=0) at exit.c:138
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()


Breakpoint 39, schedule () at sched.c:119
119					(*p)->state=TASK_RUNNING;
---in schedule
***signal cause state change pid
$16797 = 1


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16798 = 3
***loop pid
$16799 = 7
***loop counter
$16800 = 14


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16801 = 3
***loop pid
$16802 = 6
***loop counter
$16803 = 9


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16804 = 1
***loop pid
$16805 = 3
***loop counter
$16806 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16807 = 0
***loop pid
$16808 = 4
***loop counter
$16809 = 0


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16810 = 0
***loop pid
$16811 = 1
***loop counter
$16812 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$16813 = 1


Breakpoint 78, release (p=0xf8c000) at exit.c:28
28				free_page((long)p);
---in release
___pid
$16814 = 1
***call free_page
***release pid
$16815 = 7


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00009e90 in release (p=0xf8c000) at exit.c:29
#2  0x0000a683 in sys_waitpid (pid=-1, stat_addr=0x28ed0 <user_stack+4016>, 
    options=0) at exit.c:175
#3  0x0000793f in system_call () at system_call.s:94
#4  0xffffffff in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16816 = 3
***loop pid
$16817 = 6
***loop counter
$16818 = 9


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16819 = 1
***loop pid
$16820 = 3
***loop counter
$16821 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16822 = 0
***loop pid
$16823 = 4
***loop counter
$16824 = 0


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16825 = 0
***loop pid
$16826 = 1
***loop counter
$16827 = 27


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$16828 = 1


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16829 = 1
***eax as return
eax            0x7	7
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16830 = 1
***cur state
$16831 = 0
***cur counter
$16832 = 27


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16833 = 1
***task
$16834 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$16835 = (struct task_struct *) 0xfff000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16836 = 1
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16837 = 1
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16838 = 1
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16839 = 1
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16840 = 1
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffffec	0xffffec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x7	7
***cur register ebx
ebx            0xffffffff	-1
***cur register ecx
ecx            0x28ed0	167632
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16841 = 1
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    options=0) at exit.c:146
146		verify_area(stat_addr,4);
---in sys_waitpid
___pid
$16842 = 1


Breakpoint 91, write_verify (address=67272704) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$16843 = 1
***call stack
#0  write_verify (address=67272704) at memory.c:267
#1  0x000085cd in verify_area (addr=0x28ed0 <user_stack+4016>, size=-300)
    at fork.c:35
#2  0x0000a4ea in sys_waitpid (pid=-1, stat_addr=0x28ed0 <user_stack+4016>, 
    options=0) at exit.c:146
#3  0x0000793f in system_call () at system_call.s:94
#4  0xffffffff in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)
***address
$16844 = 67272704


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x0000a6f8 in sys_waitpid (pid=-1, stat_addr=0x28ed0 <user_stack+4016>, 
    options=0) at exit.c:187
#2  0x0000793f in system_call () at system_call.s:94
#3  0xffffffff in ?? ()
Backtrace stopped: previous frame inner to this frame (corrupt stack?)


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16845 = 3
***loop pid
$16846 = 6
***loop counter
$16847 = 9


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16848 = 1
***loop pid
$16849 = 3
***loop counter
$16850 = 24


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16851 = 0
***loop pid
$16852 = 4
***loop counter
$16853 = 0


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16854 = 1
***loop pid
$16855 = 1
***loop counter
$16856 = 27


Breakpoint 41, schedule () at sched.c:138
138					(*p)->counter = ((*p)->counter >> 1) +
---in schedule
***in loop3
***loop pid
$16857 = 6
***loop counter
$16858 = 9
***loop priority
$16859 = 15
***compute new counter


Breakpoint 41, schedule () at sched.c:138
138					(*p)->counter = ((*p)->counter >> 1) +
---in schedule
***in loop3
***loop pid
$16860 = 3
***loop counter
$16861 = 24
***loop priority
$16862 = 15
***compute new counter


Breakpoint 41, schedule () at sched.c:138
138					(*p)->counter = ((*p)->counter >> 1) +
---in schedule
***in loop3
***loop pid
$16863 = 4
***loop counter
$16864 = 0
***loop priority
$16865 = 15
***compute new counter


Breakpoint 41, schedule () at sched.c:138
138					(*p)->counter = ((*p)->counter >> 1) +
---in schedule
***in loop3
***loop pid
$16866 = 1
***loop counter
$16867 = 27
***loop priority
$16868 = 15
***compute new counter


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16869 = 3
***loop pid
$16870 = 6
***loop counter
$16871 = 19


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16872 = 1
***loop pid
$16873 = 3
***loop counter
$16874 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16875 = 0
***loop pid
$16876 = 4
***loop counter
$16877 = 15


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16878 = 1
***loop pid
$16879 = 1
***loop counter
$16880 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$16881 = 4


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16882 = 4
***task
$16883 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9b000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$16884 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16885 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16886 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16887 = 4
***signal map
***cur register ebx
ebx            0x10000	65536
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16888 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x10	16


Breakpoint 28, ret_from_sys_call () at system_call.s:118
118		pushl %ecx
---in ret_from_sys_call
___pid
$16889 = 4
***btr ecx ebx
***ebx to signal(eax)
***inc ecx
***signal value
***cur register ecxecx            0x11	17


    ss=23) at signal.c:93
93		sa_handler = (unsigned long) sa->sa_handler;
---in do_signal
___pid
$16890 = 4


    ss=23) at signal.c:98
98				return;
---in do_signal
___pid
$16891 = 4
***be SIGCHILD


Breakpoint 29, ret_from_sys_call () at system_call.s:120
120		popl %eax
---in ret_from_sys_call
___pid
$16892 = 4
***pop eax


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16893 = 4
***fault address
***cur register edx
edx            0xbfffde0	201326048
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=201326048) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$16894 = 4


Breakpoint 98, un_wp_page (table_entry=0xffbffc) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$16895 = 4
***table entry
$16896 = (unsigned long *) 0xffbffc


Breakpoint 99, un_wp_page (table_entry=0xffbffc) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$16897 = 4
***physical page address
$16898 = 16408576


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16899 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16900 = 4
***fault address
***cur register edx
edx            0x80413f4	134484980
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134484980) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$16901 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3104) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$16902 = 4
***table entry
$16903 = (unsigned long *) 0xff3104


Breakpoint 99, un_wp_page (table_entry=0xff3104) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$16904 = 4
***physical page address
$16905 = 16404480


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16906 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16907 = 4
***fault address
***cur register edx
edx            0x805dde0	134602208
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134602208) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$16908 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3174) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$16909 = 4
***table entry
$16910 = (unsigned long *) 0xff3174


Breakpoint 99, un_wp_page (table_entry=0xff3174) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$16911 = 4
***physical page address
$16912 = 16420864


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16913 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16914 = 4
***fault address
***cur register edx
edx            0x804522e	134500910
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134500910) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$16915 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3114) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$16916 = 4
***table entry
$16917 = (unsigned long *) 0xff3114


Breakpoint 99, un_wp_page (table_entry=0xff3114) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$16918 = 4
***physical page address
$16919 = 16392192


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16920 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16921 = 4
***fault address
***cur register edx
edx            0x804d578	134534520
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134534520) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$16922 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3134) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$16923 = 4
***table entry
$16924 = (unsigned long *) 0xff3134


Breakpoint 99, un_wp_page (table_entry=0xff3134) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$16925 = 4
***physical page address
$16926 = 16547840


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16927 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$16928 = 4
***fault address
***cur register edx
edx            0x804b090	134525072
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134525072) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$16929 = 4


Breakpoint 98, un_wp_page (table_entry=0xff312c) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$16930 = 4
***table entry
$16931 = (unsigned long *) 0xff312c


Breakpoint 99, un_wp_page (table_entry=0xff312c) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$16932 = 4
***physical page address
$16933 = 16601088


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$16934 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16935 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x7	7
***cur register ebx
ebx            0x6	6
***cur register ecx
ecx            0x3fffe5c	67108444
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16936 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 7, sys_waitpid (pid=6, stat_addr=0x3fffe5c, options=0) at exit.c:146
146		verify_area(stat_addr,4);
---in sys_waitpid
___pid
$16937 = 4


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$16938 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fffe5c, size=-416) at fork.c:35
#2  0x0000a4ea in sys_waitpid (pid=6, stat_addr=0x3fffe5c, options=0)
    at exit.c:146
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000006 in startup_32 () at head.s:20
***address
$16939 = 201322496


Breakpoint 78, release (p=0xf9b000) at exit.c:28
28				free_page((long)p);
---in release
___pid
$16940 = 4
***call free_page
***release pid
$16941 = 6


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00009e90 in release (p=0xf9b000) at exit.c:29
#2  0x0000a683 in sys_waitpid (pid=6, stat_addr=0x3fffe5c, options=0)
    at exit.c:175
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000006 in startup_32 () at head.s:20


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16942 = 1
***loop pid
$16943 = 3
***loop counter
$16944 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16945 = 0
***loop pid
$16946 = 4
***loop counter
$16947 = 15


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$16948 = 1
***loop pid
$16949 = 1
***loop counter
$16950 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$16951 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16952 = 4
***eax as return
eax            0x6	6
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16953 = 4
***cur state
$16954 = 0
***cur counter
$16955 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16956 = 4
***task
$16957 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$16958 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16959 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16960 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16961 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16962 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0

----------------------------------------------------end
Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16963 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x10c7e	68734
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x6	6


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16964 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    flag=0, mode=0) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$16965 = 4
***open filename
$16966 = 64 '@'
***fd
$16967 = 3


    flag=0, mode=0) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$16968 = 4
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16969 = 4
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16970 = 4
***cur state
$16971 = 0
***cur counter
$16972 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16973 = 4
***task
$16974 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$16975 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16976 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16977 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16978 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16979 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16980 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x451a8	283048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$16981 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=3, cmd=21505, arg=283048) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$16982 = 4
***fd
$16983 = 3


Breakpoint 61, sys_ioctl (fd=3, cmd=21505, arg=283048) at ioctl.c:40
40		dev = filp->f_inode->i_zone[0];
---in sys_ioctl
___pid
$16984 = 4
***mode and fd right
***dev
$16985 = 3


Breakpoint 91, write_verify (address=134500352) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$16986 = 4
***call stack
#0  write_verify (address=134500352) at memory.c:267
#1  0x000085cd in verify_area (addr=0x451a8, size=-3636) at fork.c:35
#2  0x00019486 in get_termios (tty=0x234c0 <tty_table>, termios=0x451a8)
    at tty_ioctl.c:60
#3  0x0001976f in tty_ioctl (dev=0, cmd=21505, arg=283048) at tty_ioctl.c:127
#4  0x00013a54 in sys_ioctl (fd=3, cmd=21505, arg=283048) at ioctl.c:45
#5  0x0000793f in system_call () at system_call.s:94
#6  0x00000003 in startup_32 () at head.s:19
***address
$16987 = 134500352


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$16988 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$16989 = 4
***cur state
$16990 = 0
***cur counter
$16991 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$16992 = 4
***task
$16993 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$16994 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$16995 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$16996 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$16997 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$16998 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$16999 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x451a8	283048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17000 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$17001 = 4
***fd
$17002 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17003 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17004 = 4
***cur state
$17005 = 0
***cur counter
$17006 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17007 = 4
***task
$17008 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$17009 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17010 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17011 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17012 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17013 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17014 = 4
***fault address
***cur register edx
edx            0x8058640	134579776
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134579776) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17015 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3160) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17016 = 4
***table entry
$17017 = (unsigned long *) 0xff3160


Breakpoint 99, un_wp_page (table_entry=0xff3160) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17018 = 4
***physical page address
$17019 = 16388096


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17020 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17021 = 4
***fault address
***cur register edx
edx            0x8046ad8	134507224
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134507224) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17022 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3118) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17023 = 4
***table entry
$17024 = (unsigned long *) 0xff3118


Breakpoint 99, un_wp_page (table_entry=0xff3118) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17025 = 4
***physical page address
$17026 = 16400384


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17027 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17028 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x43	67
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x3fffeec	67108588
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17029 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17030 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17031 = 4
***cur state
$17032 = 0
***cur counter
$17033 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17034 = 4
***task
$17035 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$17036 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17037 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17038 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17039 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17040 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17041 = 4
***fault address
***cur register edx
edx            0x8048138	134512952
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134512952) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17042 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3120) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17043 = 4
***table entry
$17044 = (unsigned long *) 0xff3120


Breakpoint 99, un_wp_page (table_entry=0xff3120) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17045 = 4
***physical page address
$17046 = 16683008


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17047 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17048 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0xd	13
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x4814d	295245
***cur register edx
edx            0x161f8	90616


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17049 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17050 = 4
***eax as return
eax            0x5fa97091	1604939921
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17051 = 4
***cur state
$17052 = 0
***cur counter
$17053 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17054 = 4
***task
$17055 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$17056 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17057 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17058 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17059 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17060 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17061 = 4
***fault address
***cur register edx
edx            0x8047f38	134512440
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134512440) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17062 = 4


Breakpoint 98, un_wp_page (table_entry=0xff311c) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17063 = 4
***table entry
$17064 = (unsigned long *) 0xff311c


Breakpoint 99, un_wp_page (table_entry=0xff311c) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17065 = 4
***physical page address
$17066 = 16687104


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17067 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17068 = 4
***fault address
***cur register edx
edx            0x8059c00	134585344
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134585344) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17069 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3164) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17070 = 4
***table entry
$17071 = (unsigned long *) 0xff3164


Breakpoint 99, un_wp_page (table_entry=0xff3164) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17072 = 4
***physical page address
$17073 = 16429056


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17074 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17075 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2a	42
***cur register ebx
ebx            0x3fff0f0	67105008
***cur register ecx
ecx            0x3	3
***cur register edx
edx            0x3	3


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17076 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17077 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17078 = 4
***cur state
$17079 = 0
***cur counter
$17080 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17081 = 4
***task
$17082 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$17083 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17084 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17085 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17086 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17087 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17088 = 4
***task
$17089 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$17090 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17091 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17092 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17093 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17094 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17095 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2	2
***cur register ebx
ebx            0x5dcac	384172
***cur register ecx
ecx            0x12aae	76462
***cur register edx
edx            0x58680	362112


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17096 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 10, sys_fork () at system_call.s:217
217		call copy_process
---in sys_fork
___pid
$17097 = 4
***cur register gs
gs             0x17	23
***push gs
***cur register esi
esi            0x12ac3	76483
***push esi
***cur register edi
edi            0x58661	362081
***push edi
***cur register ebp
ebp            0x3fff0c0	0x3fff0c0
***push ebp
***cur register eax
eax            0x4	4
;;;eax to nr


    eip=235695, cs=15, eflags=582, esp=67104948, ss=23) at fork.c:79
79		p = (struct task_struct *) get_free_page();
---in copy_process
***father pid
$17098 = 4
***new pid
$17099 = 8
***task number
$17100 = 4
***before free page
***cur register ecx
ecx            0x4	4
***cur register edi
edi            0x58661	362081


    eip=235695, cs=15, eflags=582, esp=67104948, ss=23) at fork.c:80
80		if (!p)
---in copy_process
___pid
$17101 = 4
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0x58661	362081
***eax:physical address
eax            0xf9a000	16359424


    eip=235695, cs=15, eflags=582, esp=67104948, ss=23) at fork.c:86
86		*p = *current;	/* NOTE! this doesn't copy the supervisor stack */
---in copy_process
___pid
$17102 = 4
***copy task struct


    eip=235695, cs=15, eflags=582, esp=67104948, ss=23) at fork.c:116
116		p->tss.ldt = _LDT(nr);
---in copy_process
___pid
$17103 = 4
***new process state
$17104 = 2
***new process tss.esp0
$17105 = 16363520


    eip=235695, cs=15, eflags=582, esp=67104948, ss=23) at fork.c:117
117		p->tss.trace_bitmap = 0x80000000;
---in copy_process
___pid
$17106 = 4
***new LDT index in GDT
$17107 = 104
***new cs in LDT
$17108 = {a = 64, b = 146864896}
***new ds in LDT
$17109 = {a = 16383, b = 146862848}


Breakpoint 16, copy_mem (nr=4, p=0xf9a000) at fork.c:54
54		p->start_code = new_code_base;
---in copy_mem
___pid
$17110 = 4
***new_data_base
$17111 = 268435456
***old_data_base
$17112 = 134217728


    at memory.c:163
163		for( ; size-->0 ; from_dir++,to_dir++) {
---in copy_page_tables
___pid
$17113 = 4
***from_dir
$17114 = (unsigned long *) 0x80 <setup_idt+15>
***to_dir
$17115 = (unsigned long *) 0x100 <setup_gdt+95>
size
$17116 = 16


    at memory.c:169
169			if (!(to_page_table = (unsigned long *) get_free_page()))
---in copy_page_tables
___pid
$17117 = 4
***before free page
***cur register ecx
ecx            0xf9a2e2	16360162
***cur register edi
edi            0xf9a2e7	16360167


    at memory.c:171
171			*to_dir = ((unsigned long) to_page_table) | 7;
---in copy_page_tables
___pid
$17118 = 4
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0xf9a2e7	16360167
***from_page_table
$17119 = (unsigned long *) 0xff3000
***to_page_table
$17120 = (unsigned long *) 0xf99000


    at memory.c:169
169			if (!(to_page_table = (unsigned long *) get_free_page()))
---in copy_page_tables
___pid
$17121 = 4
***before free page
***cur register ecx
ecx            0x266e0	157408
***cur register edi
edi            0xf9a2e7	16360167


    at memory.c:171
171			*to_dir = ((unsigned long) to_page_table) | 7;
---in copy_page_tables
___pid
$17122 = 4
***after free page
***cur register ecx
ecx            0x0	0
***cur register edi
edi            0xf9a2e7	16360167
***from_page_table
$17123 = (unsigned long *) 0xffb000
***to_page_table
$17124 = (unsigned long *) 0xf98000


    eip=235695, cs=15, eflags=582, esp=67104948, ss=23) at fork.c:134
134		set_tss_desc(gdt+(nr<<1)+FIRST_TSS_ENTRY,&(p->tss));
---in copy_process
___pid
$17125 = 4
tss in GDT
$17126 = 12
***tss address
$17127 = (struct tss_struct *) 0xf9a2e8
ldt in GDT
$17128 = 13
***ldt address
$17129 = (struct desc_struct (*)[3]) 0xf9a2d0


    eip=235695, cs=15, eflags=582, esp=67104948, ss=23) at fork.c:137
137		return last_pid;
---in copy_process
___pid
$17130 = 4
***new process state
$17131 = 0


Breakpoint 19, sys_fork () at system_call.s:219
219	1:	ret
---in sys_fork
***cur register esp
esp            0xffdfd0	0xffdfd0


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17132 = 4
***cur state
$17133 = 0
***cur counter
$17134 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17135 = 4
***task
$17136 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17137 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17138 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17139 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17140 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17141 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17142 = 4
***fault address
***cur register edx
edx            0xbfff0bc	201322684
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=201322684) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17143 = 4


Breakpoint 98, un_wp_page (table_entry=0xffbffc) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17144 = 4
***table entry
$17145 = (unsigned long *) 0xffbffc


Breakpoint 99, un_wp_page (table_entry=0xffbffc) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17146 = 4
***physical page address
$17147 = 16408576


Breakpoint 100, un_wp_page (table_entry=0xffbffc) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$17148 = 4
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xffbffc) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$17149 = 4
***new page
$17150 = 16347136


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17151 = 4
***task
$17152 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17153 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17154 = 4
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$17155 = 4
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17156 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17157 = 4
***fault address
***cur register edx
edx            0x80413f4	134484980
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134484980) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17158 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3104) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17159 = 4
***table entry
$17160 = (unsigned long *) 0xff3104


Breakpoint 99, un_wp_page (table_entry=0xff3104) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17161 = 4
***physical page address
$17162 = 16404480


Breakpoint 100, un_wp_page (table_entry=0xff3104) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$17163 = 4
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xff3104) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$17164 = 4
***new page
$17165 = 16343040


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17166 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17167 = 4
***fault address
***cur register edx
edx            0x804522f	134500911
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134500911) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17168 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3114) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17169 = 4
***table entry
$17170 = (unsigned long *) 0xff3114


Breakpoint 99, un_wp_page (table_entry=0xff3114) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17171 = 4
***physical page address
$17172 = 16392192


Breakpoint 100, un_wp_page (table_entry=0xff3114) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$17173 = 4
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xff3114) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$17174 = 4
***new page
$17175 = 16338944


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17176 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17177 = 4
***fault address
***cur register edx
edx            0x8058640	134579776
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134579776) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17178 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3160) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17179 = 4
***table entry
$17180 = (unsigned long *) 0xff3160


Breakpoint 99, un_wp_page (table_entry=0xff3160) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17181 = 4
***physical page address
$17182 = 16388096


Breakpoint 100, un_wp_page (table_entry=0xff3160) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$17183 = 4
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xff3160) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$17184 = 4
***new page
$17185 = 16334848


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17186 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17187 = 4
***fault address
***cur register edx
edx            0x80468c4	134506692
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134506692) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17188 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3118) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17189 = 4
***table entry
$17190 = (unsigned long *) 0xff3118


Breakpoint 99, un_wp_page (table_entry=0xff3118) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17191 = 4
***physical page address
$17192 = 16400384


Breakpoint 100, un_wp_page (table_entry=0xff3118) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$17193 = 4
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xff3118) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$17194 = 4
***new page
$17195 = 16330752


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17196 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17197 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fff05c	67104860


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17198 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=3, cmd=21505, arg=67104860) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$17199 = 4
***fd
$17200 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17201 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17202 = 4
***cur state
$17203 = 0
***cur counter
$17204 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17205 = 4
***task
$17206 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17207 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17208 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17209 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17210 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17211 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17212 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x4	4
***cur register ecx
ecx            0x46258	287320
***cur register edx
edx            0x3b17c	242044


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17213 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=4) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$17214 = 4
***fd
$17215 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17216 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17217 = 4
***cur state
$17218 = 0
***cur counter
$17219 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17220 = 4
***task
$17221 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17222 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17223 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17224 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17225 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17226 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17227 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17228 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$17229 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$17230 = 201322496


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f96 in sleep_on (p=0x27600 <inode_table+32>) at sched.c:162
#2  0x00010b2b in read_pipe (inode=0x275e0 <inode_table>, 
    buf=0x3fff0bc "\336\n\001", count=1) at pipe.c:22
#3  0x0000c410 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:67
#4  0x0000793f in system_call () at system_call.s:94
#5  0x00000003 in startup_32 () at head.s:19


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$17231 = 0
***loop pid
$17232 = 8
***loop counter
$17233 = 15


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$17234 = 1
***loop pid
$17235 = 3
***loop counter
$17236 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$17237 = 2
***loop pid
$17238 = 4
***loop counter
$17239 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$17240 = 1
***loop pid
$17241 = 1
***loop counter
$17242 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$17243 = 8


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17244 = 8
***fault address
***cur register edx
edx            0x13fff0bc	335540412
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=335540412) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17245 = 8


Breakpoint 98, un_wp_page (table_entry=0xf98ffc) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17246 = 8
***table entry
$17247 = (unsigned long *) 0xf98ffc


Breakpoint 99, un_wp_page (table_entry=0xf98ffc) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17248 = 8
***physical page address
$17249 = 16408576


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17250 = 8
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17251 = 8
***fault address
***cur register edx
edx            0x100469d0	268724688
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268724688) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17252 = 8


Breakpoint 98, un_wp_page (table_entry=0xf99118) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17253 = 8
***table entry
$17254 = (unsigned long *) 0xf99118


Breakpoint 99, un_wp_page (table_entry=0xf99118) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17255 = 8
***physical page address
$17256 = 16400384


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17257 = 8
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17258 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17259 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 31, sys_signal (signum=3, handler=0, restorer=252204) at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$17260 = 8
***signum
$17261 = 3


Breakpoint 32, sys_signal (signum=3, handler=1, restorer=252204) at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$17262 = 8
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17263 = 8
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17264 = 8
***cur state
$17265 = 0
***cur counter
$17266 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17267 = 8
***task
$17268 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17269 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17270 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17271 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17272 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17273 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17274 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xf	15
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17275 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$17276 = 8
***signum
$17277 = 15


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$17278 = 8
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17279 = 8
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17280 = 8
***cur state
$17281 = 0
***cur counter
$17282 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17283 = 8
***task
$17284 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17285 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17286 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17287 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17288 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17289 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17290 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17291 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$17292 = 8
***signum
$17293 = 20


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$17294 = 8
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17295 = 8
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17296 = 8
***cur state
$17297 = 0
***cur counter
$17298 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17299 = 8
***task
$17300 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17301 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17302 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17303 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17304 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17305 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17306 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x15	21
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17307 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$17308 = 8
***signum
$17309 = 21


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$17310 = 8
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17311 = 8
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17312 = 8
***cur state
$17313 = 0
***cur counter
$17314 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17315 = 8
***task
$17316 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17317 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17318 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17319 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17320 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17321 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17322 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x16	22
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17323 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$17324 = 8
***signum
$17325 = 22


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$17326 = 8
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17327 = 8
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17328 = 8
***cur state
$17329 = 0
***cur counter
$17330 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17331 = 8
***task
$17332 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17333 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17334 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17335 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17336 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17337 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17338 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3f	63
***cur register ebx
ebx            0x4	4
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17339 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=1) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$17340 = 8
***fd
$17341 = 1


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17342 = 8
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17343 = 8
***cur state
$17344 = 0
***cur counter
$17345 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17346 = 8
***task
$17347 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17348 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17349 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17350 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17351 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17352 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17353 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x4	4
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17354 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=4) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$17355 = 8
***fd
$17356 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17357 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17358 = 8
***cur state
$17359 = 0
***cur counter
$17360 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17361 = 8
***task
$17362 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17363 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17364 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17365 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17366 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17367 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17368 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17369 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$17370 = 8
***fd
$17371 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17372 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17373 = 8
***cur state
$17374 = 0
***cur counter
$17375 = 15


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17376 = 8
***task
$17377 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17378 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17379 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17380 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17381 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17382 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17383 = 8
***fault address
***cur register edx
edx            0x10041028	268701736
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268701736) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17384 = 8


Breakpoint 98, un_wp_page (table_entry=0xf99104) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17385 = 8
***table entry
$17386 = (unsigned long *) 0xf99104


Breakpoint 99, un_wp_page (table_entry=0xf99104) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17387 = 8
***physical page address
$17388 = 16404480


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17389 = 8
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17390 = 8
***fault address
***cur register edx
edx            0x1004522e	268718638
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268718638) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17391 = 8


Breakpoint 98, un_wp_page (table_entry=0xf99114) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17392 = 8
***table entry
$17393 = (unsigned long *) 0xf99114


Breakpoint 99, un_wp_page (table_entry=0xf99114) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17394 = 8
***physical page address
$17395 = 16392192


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17396 = 8
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17397 = 8
***fault address
***cur register edx
edx            0x1005dcc0	268819648
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268819648) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17398 = 8


Breakpoint 98, un_wp_page (table_entry=0xf99174) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17399 = 8
***table entry
$17400 = (unsigned long *) 0xf99174


Breakpoint 99, un_wp_page (table_entry=0xf99174) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17401 = 8
***physical page address
$17402 = 16420864


Breakpoint 100, un_wp_page (table_entry=0xf99174) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$17403 = 8
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf99174) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$17404 = 8
***new page
$17405 = 16326656


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17406 = 8
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17407 = 8
***fault address
***cur register edx
edx            0x1004e480	268756096
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268756096) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17408 = 8


Breakpoint 98, un_wp_page (table_entry=0xf99138) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17409 = 8
***table entry
$17410 = (unsigned long *) 0xf99138


Breakpoint 99, un_wp_page (table_entry=0xf99138) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17411 = 8
***physical page address
$17412 = 16523264


Breakpoint 100, un_wp_page (table_entry=0xf99138) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$17413 = 8
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf99138) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$17414 = 8
***new page
$17415 = 16322560


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17416 = 8
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17417 = 8
***fault address
***cur register edx
edx            0x13ffeffc	335540220
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=335540220) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17418 = 8


Breakpoint 98, un_wp_page (table_entry=0xf98ff8) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17419 = 8
***table entry
$17420 = (unsigned long *) 0xf98ff8


Breakpoint 99, un_wp_page (table_entry=0xf98ff8) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17421 = 8
***physical page address
$17422 = 16527360


Breakpoint 100, un_wp_page (table_entry=0xf98ff8) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$17423 = 8
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf98ff8) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$17424 = 8
***new page
$17425 = 16318464


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17426 = 8
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17427 = 8
***fault address
***cur register edx
edx            0x10058640	268797504
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268797504) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17428 = 8


Breakpoint 98, un_wp_page (table_entry=0xf99160) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17429 = 8
***table entry
$17430 = (unsigned long *) 0xf99160


Breakpoint 99, un_wp_page (table_entry=0xf99160) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17431 = 8
***physical page address
$17432 = 16388096


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17433 = 8
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17434 = 8
***fault address
***cur register edx
edx            0x1004435c	268714844
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268714844) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17435 = 8


Breakpoint 98, un_wp_page (table_entry=0xf99110) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17436 = 8
***table entry
$17437 = (unsigned long *) 0xf99110


Breakpoint 99, un_wp_page (table_entry=0xf99110) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17438 = 8
***physical page address
$17439 = 16396288


Breakpoint 100, un_wp_page (table_entry=0xf99110) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$17440 = 8
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf99110) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$17441 = 8
***new page
$17442 = 16314368


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17443 = 8
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17444 = 8
***fault address
***cur register edx
edx            0x100597ec	268802028
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268802028) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17445 = 8


Breakpoint 98, un_wp_page (table_entry=0xf99164) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17446 = 8
***table entry
$17447 = (unsigned long *) 0xf99164


Breakpoint 99, un_wp_page (table_entry=0xf99164) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17448 = 8
***physical page address
$17449 = 16429056


Breakpoint 100, un_wp_page (table_entry=0xf99164) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$17450 = 8
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf99164) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$17451 = 8
***new page
$17452 = 16310272


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17453 = 8
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17454 = 8
***fault address
***cur register edx
edx            0x1004cc0c	268749836
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268749836) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17455 = 8


Breakpoint 98, un_wp_page (table_entry=0xf99130) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17456 = 8
***table entry
$17457 = (unsigned long *) 0xf99130


Breakpoint 99, un_wp_page (table_entry=0xf99130) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17458 = 8
***physical page address
$17459 = 16568320


Breakpoint 100, un_wp_page (table_entry=0xf99130) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$17460 = 8
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf99130) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$17461 = 8
***new page
$17462 = 16306176


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17463 = 8
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17464 = 8
***fault address
***cur register edx
edx            0x13ffdc40	335535168
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=335535168) at memory.c:367
367	{
---in do_no_page
___pid
$17465 = 8
***address
$17466 = 335535168


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17467 = 8
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17468 = 8
***fault address
***cur register edx
edx            0x1004dc0c	268753932
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268753932) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17469 = 8


Breakpoint 98, un_wp_page (table_entry=0xf99134) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17470 = 8
***table entry
$17471 = (unsigned long *) 0xf99134


Breakpoint 99, un_wp_page (table_entry=0xf99134) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17472 = 8
***physical page address
$17473 = 16547840


Breakpoint 100, un_wp_page (table_entry=0xf99134) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$17474 = 8
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf99134) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$17475 = 8
***new page
$17476 = 16297984


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17477 = 8
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17478 = 8
***fault address
***cur register edx
edx            0x1005e000	268820480
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268820480) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17479 = 8


Breakpoint 98, un_wp_page (table_entry=0xf99178) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17480 = 8
***table entry
$17481 = (unsigned long *) 0xf99178


Breakpoint 99, un_wp_page (table_entry=0xf99178) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17482 = 8
***physical page address
$17483 = 16416768


Breakpoint 100, un_wp_page (table_entry=0xf99178) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$17484 = 8
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf99178) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$17485 = 8
***new page
$17486 = 16293888


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17487 = 8
***task
$17488 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17489 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17490 = 8
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$17491 = 8
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17492 = 8
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17493 = 8
***fault address
***cur register edx
edx            0x1005a000	268804096
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268804096) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17494 = 8


Breakpoint 98, un_wp_page (table_entry=0xf99168) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17495 = 8
***table entry
$17496 = (unsigned long *) 0xf99168


Breakpoint 99, un_wp_page (table_entry=0xf99168) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17497 = 8
***physical page address
$17498 = 16728064


Breakpoint 100, un_wp_page (table_entry=0xf99168) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$17499 = 8
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf99168) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$17500 = 8
***new page
$17501 = 16289792


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17502 = 8
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17503 = 8
***fault address
***cur register edx
edx            0x1004b170	268743024
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268743024) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17504 = 8


Breakpoint 98, un_wp_page (table_entry=0xf9912c) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17505 = 8
***table entry
$17506 = (unsigned long *) 0xf9912c


Breakpoint 99, un_wp_page (table_entry=0xf9912c) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17507 = 8
***physical page address
$17508 = 16601088


Breakpoint 100, un_wp_page (table_entry=0xf9912c) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$17509 = 8
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf9912c) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$17510 = 8
***new page
$17511 = 16285696


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17512 = 8
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17513 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5f400	390144
***cur register ecx
ecx            0xc	12
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17514 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=390144) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$17515 = 8
***end_data_seg
$17516 = 390144
***cur brk
$17517 = 390144


Breakpoint 59, sys_brk (end_data_seg=390144) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$17518 = 8
***cur brk
$17519 = 390144


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17520 = 8
***eax as return
eax            0x5f400	390144
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17521 = 8
***cur state
$17522 = 0
***cur counter
$17523 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17524 = 8
***task
$17525 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17526 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17527 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17528 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17529 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17530 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17531 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5fc00	392192
***cur register ecx
ecx            0xb	11
***cur register edx
edx            0x800	2048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17532 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=392192) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$17533 = 8
***end_data_seg
$17534 = 392192
***cur brk
$17535 = 390144


Breakpoint 59, sys_brk (end_data_seg=392192) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$17536 = 8
***cur brk
$17537 = 392192


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17538 = 8
***eax as return
eax            0x5fc00	392192
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17539 = 8
***cur state
$17540 = 0
***cur counter
$17541 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17542 = 8
***task
$17543 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17544 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17545 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17546 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17547 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17548 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17549 = 8
***fault address
***cur register edx
edx            0x1005f400	268825600
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268825600) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17550 = 8


Breakpoint 98, un_wp_page (table_entry=0xf9917c) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17551 = 8
***table entry
$17552 = (unsigned long *) 0xf9917c


Breakpoint 99, un_wp_page (table_entry=0xf9917c) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17553 = 8
***physical page address
$17554 = 16379904


Breakpoint 100, un_wp_page (table_entry=0xf9917c) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$17555 = 8
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf9917c) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$17556 = 8
***new page
$17557 = 16281600


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17558 = 8
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17559 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x1b3a0	111520
***cur register ecx
ecx            0x3ffee54	67104340
***cur register edx
edx            0x40c	1036


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17560 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=335536128) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$17561 = 8
***call stack
#0  write_verify (address=335536128) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3ffee54, size=-396) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x276f8 <inode_table+280>, statbuf=0x3ffee54)
    at stat.c:20
#3  0x0000f85b in sys_stat (
    filename=0x1b3a0 "\016 C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", statbuf=0x3ffee54) at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x0001b3a0 in ?? ()
***address
$17562 = 335536128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17563 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17564 = 8
***cur state
$17565 = 0
***cur counter
$17566 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17567 = 8
***task
$17568 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17569 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17570 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17571 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17572 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17573 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17574 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x1b3a2	111522
***cur register ecx
ecx            0x3ffee54	67104340
***cur register edx
edx            0x40c	1036


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17575 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=335536128) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$17576 = 8
***call stack
#0  write_verify (address=335536128) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3ffee54, size=-396) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27618 <inode_table+56>, statbuf=0x3ffee54)
    at stat.c:20
#3  0x0000f85b in sys_stat (
    filename=0x1b3a2 "C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", statbuf=0x3ffee54) at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x0001b3a2 in ?? ()
***address
$17577 = 335536128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17578 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17579 = 8
***cur state
$17580 = 0
***cur counter
$17581 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17582 = 8
***task
$17583 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17584 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17585 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17586 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17587 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17588 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17589 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0xc	12
***cur register ebx
ebx            0x1b3a4	111524
***cur register ecx
ecx            0x3ffee54	67104340
***cur register edx
edx            0x40c	1036


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17590 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17591 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17592 = 8
***cur state
$17593 = 0
***cur counter
$17594 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17595 = 8
***task
$17596 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17597 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17598 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17599 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17600 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17601 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17602 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x1b3a0	111520
***cur register ecx
ecx            0x3ffee54	67104340
***cur register edx
edx            0x40c	1036


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17603 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=335536128) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$17604 = 8
***call stack
#0  write_verify (address=335536128) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3ffee54, size=-396) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27810 <inode_table+560>, statbuf=0x3ffee54)
    at stat.c:20
#3  0x0000f85b in sys_stat (
    filename=0x1b3a0 "\016 C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", statbuf=0x3ffee54) at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x0001b3a0 in ?? ()
***address
$17605 = 335536128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17606 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17607 = 8
***cur state
$17608 = 0
***cur counter
$17609 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17610 = 8
***task
$17611 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17612 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17613 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17614 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17615 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17616 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17617 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x1b3a0	111520
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3ffef73	67104627


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17618 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    filename=0x1b3a0 "\016 C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", flag=0, mode=321) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$17619 = 8
***open filename
$17620 = 14 '\016'
***fd
$17621 = 3


    filename=0x1b3a0 "\016 C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", flag=0, mode=321) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$17622 = 8
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17623 = 8
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17624 = 8
***cur state
$17625 = 0
***cur counter
$17626 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17627 = 8
***task
$17628 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17629 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17630 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17631 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17632 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17633 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17634 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1c	28
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3ffede4	67104228
***cur register edx
edx            0x141	321


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17635 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=335536128) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$17636 = 8
***call stack
#0  write_verify (address=335536128) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3ffede4, size=-508) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27810 <inode_table+560>, statbuf=0x3ffede4)
    at stat.c:20
#3  0x0000f8d4 in sys_fstat (fd=3, statbuf=0x3ffede4) at stat.c:54
#4  0x0000793f in system_call () at system_call.s:94
#5  0x00000003 in startup_32 () at head.s:19
***address
$17637 = 335536128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17638 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17639 = 8
***cur state
$17640 = 0
***cur counter
$17641 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17642 = 8
***task
$17643 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17644 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17645 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17646 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17647 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17648 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17649 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x5fc00	392192
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17650 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=392192) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$17651 = 8
***end_data_seg
$17652 = 392192
***cur brk
$17653 = 392192


Breakpoint 59, sys_brk (end_data_seg=392192) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$17654 = 8
***cur brk
$17655 = 392192


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17656 = 8
***eax as return
eax            0x5fc00	392192
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17657 = 8
***cur state
$17658 = 0
***cur counter
$17659 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17660 = 8
***task
$17661 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17662 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17663 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17664 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17665 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17666 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17667 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x2d	45
***cur register ebx
ebx            0x63c00	408576
***cur register ecx
ecx            0xe	14
***cur register edx
edx            0x4000	16384


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17668 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 58, sys_brk (end_data_seg=408576) at sys.c:170
170		if (end_data_seg >= current->end_code &&
---in sys_brk
___pid
$17669 = 8
***end_data_seg
$17670 = 408576
***cur brk
$17671 = 392192


Breakpoint 59, sys_brk (end_data_seg=408576) at sys.c:173
173		return current->brk;
---in sys_brk
___pid
$17672 = 8
***cur brk
$17673 = 408576


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17674 = 8
***eax as return
eax            0x63c00	408576
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17675 = 8
***cur state
$17676 = 0
***cur counter
$17677 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17678 = 8
***task
$17679 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17680 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17681 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17682 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17683 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17684 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17685 = 8
***fault address
***cur register edx
edx            0x10061c0c	268835852
***error code
***cur register eax
eax            0x6	6


Breakpoint 102, do_no_page (error_code=6, address=268835852) at memory.c:367
367	{
---in do_no_page
___pid
$17686 = 8
***address
$17687 = 268835852


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17688 = 8
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17689 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5fc0c	392204
***cur register edx
edx            0x2000	8192


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17690 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=268824576) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$17691 = 8
***call stack
#0  write_verify (address=268824576) at memory.c:267
#1  0x000085cd in verify_area (addr=0x5fc0c, size=7180) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x5fc0c "", count=8192)
    at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$17692 = 268824576


Breakpoint 91, write_verify (address=268828672) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$17693 = 8
***call stack
#0  write_verify (address=268828672) at memory.c:267
#1  0x000085cd in verify_area (addr=0x5fc0c, size=3084) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x5fc0c "", count=8192)
    at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$17694 = 268828672


Breakpoint 91, write_verify (address=268832768) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$17695 = 8
***call stack
#0  write_verify (address=268832768) at memory.c:267
#1  0x000085cd in verify_area (addr=0x5fc0c, size=-1012) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x5fc0c "", count=8192)
    at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$17696 = 268832768


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17697 = 8
***eax as return
eax            0xa0	160
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17698 = 8
***cur state
$17699 = 0
***cur counter
$17700 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17701 = 8
***task
$17702 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17703 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17704 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17705 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17706 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17707 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17708 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x46666	288358
***cur register ecx
ecx            0x3ffee54	67104340
***cur register edx
edx            0x5fc5e	392286


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17709 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=335536128) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$17710 = 8
***call stack
#0  write_verify (address=335536128) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3ffee54, size=-396) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x276f8 <inode_table+280>, statbuf=0x3ffee54)
    at stat.c:20
#3  0x0000f85b in sys_stat (filename=0x46666 "\004", statbuf=0x3ffee54)
    at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x00046666 in ?? ()
***address
$17711 = 335536128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17712 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17713 = 8
***cur state
$17714 = 0
***cur counter
$17715 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17716 = 8
***task
$17717 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17718 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17719 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17720 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17721 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17722 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17723 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x5e020	385056


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17724 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$17725 = 8
***fd
$17726 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17727 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17728 = 8
***cur state
$17729 = 0
***cur counter
$17730 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17731 = 8
***task
$17732 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17733 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17734 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17735 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17736 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17737 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17738 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0xc	12
***cur register ebx
ebx            0x1b3a4	111524
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x5e020	385056


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17739 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17740 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17741 = 8
***cur state
$17742 = 0
***cur counter
$17743 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17744 = 8
***task
$17745 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17746 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17747 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17748 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17749 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17750 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17751 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x1b3a0	111520
***cur register ecx
ecx            0x3ffee54	67104340
***cur register edx
edx            0x5e020	385056


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17752 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=335536128) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$17753 = 8
***call stack
#0  write_verify (address=335536128) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3ffee54, size=-396) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27618 <inode_table+56>, statbuf=0x3ffee54)
    at stat.c:20
#3  0x0000f85b in sys_stat (
    filename=0x1b3a0 "\016 C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", statbuf=0x3ffee54) at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x0001b3a0 in ?? ()
***address
$17754 = 335536128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17755 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17756 = 8
***cur state
$17757 = 0
***cur counter
$17758 = 14


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17759 = 8
***task
$17760 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17761 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17762 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17763 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17764 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17765 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17766 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x1b3a0	111520
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x3ffef6e	67104622


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17767 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    filename=0x1b3a0 "\016 C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", flag=0, mode=328) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$17768 = 8
***open filename
$17769 = 14 '\016'
***fd
$17770 = 3


    filename=0x1b3a0 "\016 C\016,A\016\060H\016 C\016,E\016\060H\016 O\016$A\016(D\016,G\016\060H\016 ", flag=0, mode=328) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$17771 = 8
***current->filp[fd]=f


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17772 = 8
***task
$17773 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17774 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17775 = 8
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$17776 = 8
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17777 = 8
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17778 = 8
***cur state
$17779 = 0
***cur counter
$17780 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17781 = 8
***task
$17782 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17783 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17784 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17785 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17786 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17787 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17788 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1c	28
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3ffede4	67104228
***cur register edx
edx            0x148	328


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17789 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=335536128) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$17790 = 8
***call stack
#0  write_verify (address=335536128) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3ffede4, size=-508) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27618 <inode_table+56>, statbuf=0x3ffede4)
    at stat.c:20
#3  0x0000f8d4 in sys_fstat (fd=3, statbuf=0x3ffede4) at stat.c:54
#4  0x0000793f in system_call () at system_call.s:94
#5  0x00000003 in startup_32 () at head.s:19
***address
$17791 = 335536128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17792 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17793 = 8
***cur state
$17794 = 0
***cur counter
$17795 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17796 = 8
***task
$17797 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17798 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17799 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17800 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17801 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17802 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17803 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5fc0c	392204
***cur register edx
edx            0x2000	8192


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17804 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=268824576) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$17805 = 8
***call stack
#0  write_verify (address=268824576) at memory.c:267
#1  0x000085cd in verify_area (addr=0x5fc0c, size=7180) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x5fc0c "", count=8192)
    at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$17806 = 268824576


Breakpoint 91, write_verify (address=268828672) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$17807 = 8
***call stack
#0  write_verify (address=268828672) at memory.c:267
#1  0x000085cd in verify_area (addr=0x5fc0c, size=3084) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x5fc0c "", count=8192)
    at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$17808 = 268828672


Breakpoint 91, write_verify (address=268832768) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$17809 = 8
***call stack
#0  write_verify (address=268832768) at memory.c:267
#1  0x000085cd in verify_area (addr=0x5fc0c, size=-1012) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, buf=0x5fc0c "", count=8192)
    at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$17810 = 268832768


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17811 = 8
***eax as return
eax            0xc0	192
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17812 = 8
***cur state
$17813 = 0
***cur counter
$17814 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17815 = 8
***task
$17816 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17817 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17818 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17819 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17820 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17821 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17822 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x12	18
***cur register ebx
ebx            0x46666	288358
***cur register ecx
ecx            0x3ffee54	67104340
***cur register edx
edx            0x5fcae	392366


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17823 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=335536128) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$17824 = 8
***call stack
#0  write_verify (address=335536128) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3ffee54, size=-396) at fork.c:35
#2  0x0000f74f in cp_stat (inode=0x27810 <inode_table+560>, statbuf=0x3ffee54)
    at stat.c:20
#3  0x0000f85b in sys_stat (filename=0x46666 "\004", statbuf=0x3ffee54)
    at stat.c:42
#4  0x0000793f in system_call () at system_call.s:94
#5  0x00046666 in ?? ()
***address
$17825 = 335536128


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17826 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17827 = 8
***cur state
$17828 = 0
***cur counter
$17829 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17830 = 8
***task
$17831 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17832 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17833 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17834 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17835 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17836 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17837 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x5e020	385056


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17838 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$17839 = 8
***fd
$17840 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17841 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17842 = 8
***cur state
$17843 = 0
***cur counter
$17844 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17845 = 8
***task
$17846 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17847 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17848 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17849 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17850 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17851 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17852 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0xc	12
***cur register ebx
ebx            0x3ffef6a	67104618
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x5e020	385056


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17853 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17854 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17855 = 8
***cur state
$17856 = 0
***cur counter
$17857 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17858 = 8
***task
$17859 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17860 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17861 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17862 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17863 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17864 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$17865 = 8
***fault address
***cur register edx
edx            0x10048c0c	268733452
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=268733452) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$17866 = 8


Breakpoint 98, un_wp_page (table_entry=0xf99120) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$17867 = 8
***table entry
$17868 = (unsigned long *) 0xf99120


Breakpoint 99, un_wp_page (table_entry=0xf99120) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$17869 = 8
***physical page address
$17870 = 16683008


Breakpoint 100, un_wp_page (table_entry=0xf99120) at memory.c:231
231		if (!(new_page=get_free_page()))
---in un_wp_page
___pid
$17871 = 8
***need copy page


Breakpoint 101, un_wp_page (table_entry=0xf99120) at memory.c:233
233		if (old_page >= LOW_MEM)
---in un_wp_page
___pid
$17872 = 8
***new page
$17873 = 16273408


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$17874 = 8
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17875 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x48c0c	297996
***cur register edx
edx            0xa	10


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17876 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=1, buf=0x48c0c "", count=10) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$17877 = 8


Breakpoint 70, sys_write (fd=1, buf=0x48c0c "", count=10) at read_write.c:94
94			return (file->f_mode&2)?write_pipe(inode,buf,count):-EIO;
---in sys_write
___pid
$17878 = 8
***write pipe


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17879 = 8
***eax as return
eax            0xa	10
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17880 = 8
***cur state
$17881 = 0
***cur counter
$17882 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17883 = 8
***task
$17884 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17885 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17886 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17887 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17888 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17889 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17890 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x48c0c	297996
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17891 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=1, buf=0x48c0c "", count=0) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$17892 = 8


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17893 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17894 = 8
***cur state
$17895 = 0
***cur counter
$17896 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17897 = 8
***task
$17898 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17899 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17900 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17901 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17902 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17903 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17904 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x5dd40	384320


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17905 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=0) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$17906 = 8
***fd
$17907 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17908 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17909 = 8
***cur state
$17910 = 0
***cur counter
$17911 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17912 = 8
***task
$17913 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17914 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17915 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17916 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17917 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17918 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17919 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x48c0c	297996
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17920 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=1, buf=0x48c0c "", count=0) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$17921 = 8


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17922 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17923 = 8
***cur state
$17924 = 0
***cur counter
$17925 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17926 = 8
***task
$17927 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17928 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17929 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17930 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17931 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17932 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17933 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x1	1
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17934 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=1) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$17935 = 8
***fd
$17936 = 1


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17937 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17938 = 8
***cur state
$17939 = 0
***cur counter
$17940 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17941 = 8
***task
$17942 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17943 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17944 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17945 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17946 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17947 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17948 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x4840c	295948
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17949 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=2, buf=0x4840c "", count=0) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$17950 = 8


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17951 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17952 = 8
***cur state
$17953 = 0
***cur counter
$17954 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17955 = 8
***task
$17956 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17957 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17958 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17959 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17960 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17961 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17962 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17963 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=2) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$17964 = 8
***fd
$17965 = 2


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$17966 = 8
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$17967 = 8
***cur state
$17968 = 0
***cur counter
$17969 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17970 = 8
***task
$17971 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17972 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17973 = 8
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$17974 = 8
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$17975 = 8
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$17976 = 8
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$17977 = 8
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xf9afec	0xf9afec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1	1
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$17978 = 8
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 6, do_exit (code=0) at exit.c:105
105		free_page_tables(get_base(current->ldt[1]),get_limit(0x0f));
---in do_exit
***pid
$17979 = 8
***father pid
$17980 = 4


Breakpoint 94, free_page_tables (from=268435456, size=1) at memory.c:116
116		for ( ; size-->0 ; dir++) {
---in free_page_tables
___pid
$17981 = 8
***from
$17982 = 268435456
***size
$17983 = 1
***dir
$17984 = (unsigned long *) 0x100 <setup_gdt+95>


Breakpoint 94, free_page_tables (from=268435456, size=16) at memory.c:116
116		for ( ; size-->0 ; dir++) {
---in free_page_tables
___pid
$17985 = 8
***from
$17986 = 268435456
***size
$17987 = 16
***dir
$17988 = (unsigned long *) 0x100 <setup_gdt+95>


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$17989 = 8
***task
$17990 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$17991 = (struct task_struct *) 0xf9a000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$17992 = 8
***not task0
***was old code segment supervisor?


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$17993 = 8
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 77, do_exit (code=0) at exit.c:131
131		tell_father(current->father);
---in do_exit
***cur state
$17994 = 3
***exit code
$17995 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x0000a49b in do_exit (code=0) at exit.c:132
#2  0x0000a4c6 in sys_exit (error_code=0) at exit.c:138
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$17996 = 3
***loop pid
$17997 = 8
***loop counter
$17998 = 12


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$17999 = 1
***loop pid
$18000 = 3
***loop counter
$18001 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18002 = 0
***loop pid
$18003 = 4
***loop counter
$18004 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18005 = 1
***loop pid
$18006 = 1
***loop counter
$18007 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18008 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18009 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18010 = 4
***cur state
$18011 = 0
***cur counter
$18012 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18013 = 4
***task
$18014 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$18015 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18016 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18017 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18018 = 4
***signal map
***cur register ebx
ebx            0x10000	65536
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18019 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x10	16


Breakpoint 28, ret_from_sys_call () at system_call.s:118
118		pushl %ecx
---in ret_from_sys_call
___pid
$18020 = 4
***btr ecx ebx
***ebx to signal(eax)
***inc ecx
***signal value
***cur register ecxecx            0x11	17


    ss=23) at signal.c:93
93		sa_handler = (unsigned long) sa->sa_handler;
---in do_signal
___pid
$18021 = 4


    ss=23) at signal.c:98
98				return;
---in do_signal
___pid
$18022 = 4
***be SIGCHILD


Breakpoint 29, ret_from_sys_call () at system_call.s:120
120		popl %eax
---in ret_from_sys_call
___pid
$18023 = 4
***pop eax


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$18024 = 4
***fault address
***cur register edx
edx            0x805a000	134586368
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134586368) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$18025 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3168) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$18026 = 4
***table entry
$18027 = (unsigned long *) 0xff3168


Breakpoint 99, un_wp_page (table_entry=0xff3168) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$18028 = 4
***physical page address
$18029 = 16728064


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$18030 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18031 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18032 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$18033 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$18034 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18035 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18036 = 4
***cur state
$18037 = 0
***cur counter
$18038 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18039 = 4
***task
$18040 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$18041 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18042 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18043 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18044 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18045 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18046 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18047 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$18048 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$18049 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18050 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18051 = 4
***cur state
$18052 = 0
***cur counter
$18053 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18054 = 4
***task
$18055 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$18056 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18057 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18058 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18059 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18060 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18061 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18062 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$18063 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$18064 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18065 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18066 = 4
***cur state
$18067 = 0
***cur counter
$18068 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18069 = 4
***task
$18070 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$18071 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18072 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18073 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18074 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18075 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18076 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18077 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$18078 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$18079 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18080 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18081 = 4
***cur state
$18082 = 0
***cur counter
$18083 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18084 = 4
***task
$18085 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$18086 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18087 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18088 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18089 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18090 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18091 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18092 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$18093 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$18094 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18095 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18096 = 4
***cur state
$18097 = 0
***cur counter
$18098 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18099 = 4
***task
$18100 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$18101 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18102 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18103 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18104 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18105 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18106 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18107 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$18108 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$18109 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18110 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18111 = 4
***cur state
$18112 = 0
***cur counter
$18113 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18114 = 4
***task
$18115 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$18116 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18117 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18118 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18119 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18120 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18121 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18122 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$18123 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$18124 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18125 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18126 = 4
***cur state
$18127 = 0
***cur counter
$18128 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18129 = 4
***task
$18130 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$18131 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18132 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18133 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18134 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18135 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18136 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18137 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$18138 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$18139 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18140 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18141 = 4
***cur state
$18142 = 0
***cur counter
$18143 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18144 = 4
***task
$18145 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$18146 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18147 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18148 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18149 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18150 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18151 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18152 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$18153 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$18154 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18155 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18156 = 4
***cur state
$18157 = 0
***cur counter
$18158 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18159 = 4
***task
$18160 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$18161 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18162 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18163 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18164 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18165 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18166 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18167 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$18168 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0bc, size=-3907) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=3, 
    buf=0x3fff0bc "\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^\211\026\220\203\304\034[^"..., count=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000003 in startup_32 () at head.s:19
***address
$18169 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18170 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18171 = 4
***cur state
$18172 = 0
***cur counter
$18173 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18174 = 4
***task
$18175 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$18176 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18177 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18178 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18179 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18180 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18181 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x3fff0bc	67104956
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18182 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$18183 = 4
***fd
$18184 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18185 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18186 = 4
***cur state
$18187 = 0
***cur counter
$18188 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18189 = 4
***task
$18190 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$18191 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18192 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18193 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18194 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18195 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18196 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x46258	287320
***cur register edx
edx            0x58680	362112


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18197 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$18198 = 4
***fd
$18199 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18200 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18201 = 4
***cur state
$18202 = 0
***cur counter
$18203 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18204 = 4
***task
$18205 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 0xf9a000, 
  0x0 <startup_32> <repeats 59 times>}
***current
$18206 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18207 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18208 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18209 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18210 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18211 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x7	7
***cur register ebx
ebx            0x8	8
***cur register ecx
ecx            0x3fff0b0	67104944
***cur register edx
edx            0x0	0


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18212 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 7, sys_waitpid (pid=8, stat_addr=0x3fff0b0, options=0) at exit.c:146
146		verify_area(stat_addr,4);
---in sys_waitpid
___pid
$18213 = 4


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$18214 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff0b0, size=-3916) at fork.c:35
#2  0x0000a4ea in sys_waitpid (pid=8, stat_addr=0x3fff0b0, options=0)
    at exit.c:146
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000008 in startup_32 () at head.s:21
***address
$18215 = 201322496


Breakpoint 78, release (p=0xf9a000) at exit.c:28
28				free_page((long)p);
---in release
___pid
$18216 = 4
***call free_page
***release pid
$18217 = 8


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00009e90 in release (p=0xf9a000) at exit.c:29
#2  0x0000a683 in sys_waitpid (pid=8, stat_addr=0x3fff0b0, options=0)
    at exit.c:175
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000008 in startup_32 () at head.s:21


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18218 = 1
***loop pid
$18219 = 3
***loop counter
$18220 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18221 = 0
***loop pid
$18222 = 4
***loop counter
$18223 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18224 = 1
***loop pid
$18225 = 1
***loop counter
$18226 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18227 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18228 = 4
***eax as return
eax            0x8	8
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18229 = 4
***cur state
$18230 = 0
***cur counter
$18231 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18232 = 4
***task
$18233 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18234 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18235 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18236 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18237 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18238 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18239 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x5	5
***cur register ebx
ebx            0x10c7e	68734
***cur register ecx
ecx            0x0	0
***cur register edx
edx            0x8	8


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18240 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    flag=0, mode=8) at open.c:148
148		if (fd>=NR_OPEN)
---in sys_open
___pid
$18241 = 4
***open filename
$18242 = 64 '@'
***fd
$18243 = 3


    flag=0, mode=8) at open.c:156
156		(current->filp[fd]=f)->f_count++;
---in sys_open
___pid
$18244 = 4
***current->filp[fd]=f


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18245 = 4
***eax as return
eax            0x3	3
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18246 = 4
***cur state
$18247 = 0
***cur counter
$18248 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18249 = 4
***task
$18250 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18251 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18252 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18253 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18254 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18255 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18256 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x451a8	283048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18257 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=3, cmd=21505, arg=283048) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$18258 = 4
***fd
$18259 = 3


Breakpoint 61, sys_ioctl (fd=3, cmd=21505, arg=283048) at ioctl.c:40
40		dev = filp->f_inode->i_zone[0];
---in sys_ioctl
___pid
$18260 = 4
***mode and fd right
***dev
$18261 = 3


Breakpoint 91, write_verify (address=134500352) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$18262 = 4
***call stack
#0  write_verify (address=134500352) at memory.c:267
#1  0x000085cd in verify_area (addr=0x451a8, size=-3636) at fork.c:35
#2  0x00019486 in get_termios (tty=0x234c0 <tty_table>, termios=0x451a8)
    at tty_ioctl.c:60
#3  0x0001976f in tty_ioctl (dev=0, cmd=21505, arg=283048) at tty_ioctl.c:127
#4  0x00013a54 in sys_ioctl (fd=3, cmd=21505, arg=283048) at ioctl.c:45
#5  0x0000793f in system_call () at system_call.s:94
#6  0x00000003 in startup_32 () at head.s:19
***address
$18263 = 134500352


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18264 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18265 = 4
***cur state
$18266 = 0
***cur counter
$18267 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18268 = 4
***task
$18269 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18270 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18271 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18272 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18273 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18274 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18275 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x6	6
***cur register ebx
ebx            0x3	3
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x451a8	283048


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18276 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 64, sys_close (fd=3) at open.c:197
197		if (fd >= NR_OPEN)
---in sys_close
___pid
$18277 = 4
***fd
$18278 = 3


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18279 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18280 = 4
***cur state
$18281 = 0
***cur counter
$18282 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18283 = 4
***task
$18284 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18285 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18286 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18287 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18288 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18289 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$18290 = 4
***fault address
***cur register edx
edx            0x805dd20	134602016
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134602016) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$18291 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3174) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$18292 = 4
***table entry
$18293 = (unsigned long *) 0xff3174


Breakpoint 99, un_wp_page (table_entry=0xff3174) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$18294 = 4
***physical page address
$18295 = 16420864


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$18296 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$18297 = 4
***fault address
***cur register edx
edx            0x8059c0d	134585357
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134585357) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$18298 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3164) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$18299 = 4
***table entry
$18300 = (unsigned long *) 0xff3164


Breakpoint 99, un_wp_page (table_entry=0xff3164) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$18301 = 4
***physical page address
$18302 = 16429056


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$18303 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$18304 = 4
***fault address
***cur register edx
edx            0x8048038	134512696
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134512696) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$18305 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3120) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$18306 = 4
***table entry
$18307 = (unsigned long *) 0xff3120


Breakpoint 99, un_wp_page (table_entry=0xff3120) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$18308 = 4
***physical page address
$18309 = 16683008


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$18310 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$18311 = 4
***fault address
***cur register edx
edx            0x804435c	134497116
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134497116) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$18312 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3110) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$18313 = 4
***table entry
$18314 = (unsigned long *) 0xff3110


Breakpoint 99, un_wp_page (table_entry=0xff3110) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$18315 = 4
***physical page address
$18316 = 16396288


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$18317 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18318 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x1730	5936
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18319 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$18320 = 4
***signum
$18321 = 2


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$18322 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18323 = 4
***eax as return
eax            0x1730	5936
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18324 = 4
***cur state
$18325 = 0
***cur counter
$18326 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18327 = 4
***task
$18328 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18329 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18330 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18331 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18332 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18333 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$18334 = 4
***fault address
***cur register edx
edx            0x804a20c	134521356
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134521356) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$18335 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3128) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$18336 = 4
***table entry
$18337 = (unsigned long *) 0xff3128


Breakpoint 99, un_wp_page (table_entry=0xff3128) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$18338 = 4
***physical page address
$18339 = 16613376


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$18340 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$18341 = 4
***fault address
***cur register edx
edx            0x804253c	134489404
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134489404) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$18342 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3108) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$18343 = 4
***table entry
$18344 = (unsigned long *) 0xff3108


Breakpoint 99, un_wp_page (table_entry=0xff3108) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$18345 = 4
***physical page address
$18346 = 16576512


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$18347 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 95, page_fault () at page.s:26
26		pushl %edx
---in page_fault
___pid
$18348 = 4
***fault address
***cur register edx
edx            0x805e40c	134603788
***error code
***cur register eax
eax            0x7	7


Breakpoint 96, do_wp_page (error_code=7, address=134603788) at memory.c:255
255		un_wp_page((unsigned long *)
---in do_wp_page
___pid
$18349 = 4


Breakpoint 98, un_wp_page (table_entry=0xff3178) at memory.c:225
225		old_page = 0xfffff000 & *table_entry;
---in un_wp_page
___pid
$18350 = 4
***table entry
$18351 = (unsigned long *) 0xff3178


Breakpoint 99, un_wp_page (table_entry=0xff3178) at memory.c:226
226		if (old_page >= LOW_MEM && mem_map[MAP_NR(old_page)]==1) {
---in un_wp_page
___pid
$18352 = 4
***physical page address
$18353 = 16416768


Breakpoint 105, page_fault () at page.s:40
40		iret
---in page_fault
___pid
$18354 = 4
***fault end
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18355 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x5401	21505
***cur register edx
edx            0x3fff5a0	67106208


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18356 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=0, cmd=21505, arg=67106208) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$18357 = 4
***fd
$18358 = 0


Breakpoint 61, sys_ioctl (fd=0, cmd=21505, arg=67106208) at ioctl.c:40
40		dev = filp->f_inode->i_zone[0];
---in sys_ioctl
___pid
$18359 = 4
***mode and fd right
***dev
$18360 = 45834


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$18361 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff5a0, size=-2620) at fork.c:35
#2  0x00019486 in get_termios (tty=0x234c0 <tty_table>, termios=0x3fff5a0)
    at tty_ioctl.c:60
#3  0x0001976f in tty_ioctl (dev=0, cmd=21505, arg=67106208) at tty_ioctl.c:127
#4  0x00013a54 in sys_ioctl (fd=0, cmd=21505, arg=67106208) at ioctl.c:45
#5  0x0000793f in system_call () at system_call.s:94
#6  0x00000000 in ?? ()
***address
$18362 = 201322496


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18363 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18364 = 4
***cur state
$18365 = 0
***cur counter
$18366 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18367 = 4
***task
$18368 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18369 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18370 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18371 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18372 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18373 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18374 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x5403	21507
***cur register edx
edx            0x3fff5a0	67106208


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18375 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=0, cmd=21507, arg=67106208) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$18376 = 4
***fd
$18377 = 0


Breakpoint 61, sys_ioctl (fd=0, cmd=21507, arg=67106208) at ioctl.c:40
40		dev = filp->f_inode->i_zone[0];
---in sys_ioctl
___pid
$18378 = 4
***mode and fd right
***dev
$18379 = 1024


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18380 = 4
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18381 = 4
***cur state
$18382 = 0
***cur counter
$18383 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18384 = 4
***task
$18385 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18386 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18387 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18388 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18389 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18390 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18391 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x36	54
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x540a	21514
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18392 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 60, sys_ioctl (fd=0, cmd=21514, arg=1) at ioctl.c:35
35		if (fd >= NR_OPEN || !(filp = current->filp[fd]))
---in sys_ioctl
___pid
$18393 = 4
***fd
$18394 = 0


Breakpoint 61, sys_ioctl (fd=0, cmd=21514, arg=1) at ioctl.c:40
40		dev = filp->f_inode->i_zone[0];
---in sys_ioctl
___pid
$18395 = 4
***mode and fd right
***dev
$18396 = 1024


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18397 = 4
***eax as return
eax            0xffffffea	-22
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18398 = 4
***cur state
$18399 = 0
***cur counter
$18400 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18401 = 4
***task
$18402 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18403 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18404 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18405 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18406 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18407 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18408 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x2c264	180836
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18409 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$18410 = 4
***signum
$18411 = 2


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$18412 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18413 = 4
***eax as return
eax            0x1730	5936
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18414 = 4
***cur state
$18415 = 0
***cur counter
$18416 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18417 = 4
***task
$18418 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18419 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18420 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18421 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18422 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18423 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18424 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0xe	14
***cur register ecx
ecx            0x2c264	180836
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18425 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$18426 = 4
***signum
$18427 = 14


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$18428 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18429 = 4
***eax as return
eax            0x1534	5428
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18430 = 4
***cur state
$18431 = 0
***cur counter
$18432 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18433 = 4
***task
$18434 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18435 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18436 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18437 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18438 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18439 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18440 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x2c264	180836
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18441 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$18442 = 4
***signum
$18443 = 20


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$18444 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18445 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18446 = 4
***cur state
$18447 = 0
***cur counter
$18448 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18449 = 4
***task
$18450 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18451 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18452 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18453 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18454 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18455 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18456 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x14	20
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18457 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$18458 = 4
***signum
$18459 = 20


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$18460 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18461 = 4
***eax as return
eax            0x2c264	180836
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18462 = 4
***cur state
$18463 = 0
***cur counter
$18464 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18465 = 4
***task
$18466 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18467 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18468 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18469 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18470 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18471 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18472 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x16	22
***cur register ecx
ecx            0x2c264	180836
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18473 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$18474 = 4
***signum
$18475 = 22


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$18476 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18477 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18478 = 4
***cur state
$18479 = 0
***cur counter
$18480 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18481 = 4
***task
$18482 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18483 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18484 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18485 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18486 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18487 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18488 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x15	21
***cur register ecx
ecx            0x2c264	180836
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18489 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$18490 = 4
***signum
$18491 = 21


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$18492 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18493 = 4
***eax as return
eax            0x1	1
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18494 = 4
***cur state
$18495 = 0
***cur counter
$18496 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18497 = 4
***task
$18498 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18499 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18500 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18501 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18502 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18503 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18504 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x16	22
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18505 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$18506 = 4
***signum
$18507 = 22


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$18508 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18509 = 4
***eax as return
eax            0x2c264	180836
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18510 = 4
***cur state
$18511 = 0
***cur counter
$18512 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18513 = 4
***task
$18514 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18515 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18516 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18517 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18518 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18519 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18520 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x30	48
***cur register ebx
ebx            0x15	21
***cur register ecx
ecx            0x1	1
***cur register edx
edx            0x3d92c	252204


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18521 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


    at signal.c:52
52		if (signum<1 || signum>32 || signum==SIGKILL)
---in sys_signal
___pid
$18522 = 4
***signum
$18523 = 21


    at signal.c:59
59		current->sigaction[signum-1] = tmp;
---in sys_signal
___pid
$18524 = 4
***change sigation


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18525 = 4
***eax as return
eax            0x2c264	180836
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18526 = 4
***cur state
$18527 = 0
***cur counter
$18528 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18529 = 4
***task
$18530 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18531 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18532 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18533 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18534 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18535 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18536 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x4	4
***cur register ebx
ebx            0x2	2
***cur register ecx
ecx            0x4840c	295948
***cur register edx
edx            0xd	13


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18537 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 67, sys_write (fd=2, buf=0x4840c "", count=13) at read_write.c:88
88		if (fd>=NR_OPEN || count <0 || !(file=current->filp[fd]))
---in sys_write
___pid
$18538 = 4


Breakpoint 71, sys_write (fd=2, buf=0x4840c "", count=13) at read_write.c:96
96			return rw_char(WRITE,inode->i_zone[0],buf,count,&file->f_pos);
---in sys_write
___pid
$18539 = 4
***call char write


Breakpoint 74, con_write (tty=0x234c0 <tty_table>) at console.c:450
450		nr = CHARS(tty->write_q);
---in con_write
___pid
$18540 = 4


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18541 = 4
***eax as return
eax            0xd	13
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18542 = 4
***cur state
$18543 = 0
***cur counter
$18544 = 13


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18545 = 4
***task
$18546 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18547 = (struct task_struct *) 0xffd000


Breakpoint 24, ret_from_sys_call () at system_call.s:105
105		cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?
---in ret_from_sys_call
___pid
$18548 = 4
***not task0
***was old code segment supervisor?


Breakpoint 25, ret_from_sys_call () at system_call.s:109
109		movl signal(%eax),%ebx
---in ret_from_sys_call
___pid
$18549 = 4
***cur task is user


Breakpoint 26, ret_from_sys_call () at system_call.s:111
111		notl %ecx
---in ret_from_sys_call
___pid
$18550 = 4
***signal map
***cur register ebx
ebx            0x0	0
***block map
***cur register ecx
ecx            0x0	0


Breakpoint 27, ret_from_sys_call () at system_call.s:114
114		je 3f
---in ret_from_sys_call
___pid
$18551 = 4
***not ecx
***and ebx ecx
***bsf ecx ecx
***cur register ecx
ecx            0x0	0


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18552 = 4
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0xffdfec	0xffdfec
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x3	3
***cur register ebx
ebx            0x0	0
***cur register ecx
ecx            0x3fff58c	67106188
***cur register edx
edx            0x1	1


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18553 = 4
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 91, write_verify (address=201322496) at memory.c:267
267		page &= 0xfffff000;
---in write_verify
___pid
$18554 = 4
***call stack
#0  write_verify (address=201322496) at memory.c:267
#1  0x000085cd in verify_area (addr=0x3fff58c, size=-2675) at fork.c:35
#2  0x0000c3d1 in sys_read (fd=0, 
    buf=0x3fff58ccount=1) at read_write.c:64
#3  0x0000793f in system_call () at system_call.s:94
#4  0x00000000 in ?? ()
***address
$18555 = 201322496


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x0000701c in interruptible_sleep_on (p=0x23d1c <tty_table+2140>)
    at sched.c:179
#2  0x00016672 in sleep_if_empty (queue=0x23d10 <tty_table+2128>)
    at tty_io.c:126
#3  0x00016f24 in tty_read (channel=0, buf=0x3fff58c "qm\001", nr=1)
    at tty_io.c:258
#4  0x0000f0a0 in rw_ttyx (rw=0, minor=0, 
    buf=0x3fff58c <incomplete sequence \360>, count=1, 
    pos=0x2977c <file_table+28>) at char_dev.c:23
#5  0x0000f2f6 in rw_char (rw=0, dev=1024, 
    buf=0x3fff58c <incomplete sequence \360>, count=1, 
    pos=0x2977c <file_table+28>) at char_dev.c:103
#6  0x0000c45e in sys_read (fd=0, 
    buf=0x3fff58ccount=1) at read_write.c:69
#7  0x0000793f in system_call () at system_call.s:94
#8  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18556 = 1
***loop pid
$18557 = 3
***loop counter
$18558 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18559 = 1
***loop pid
$18560 = 4
***loop counter
$18561 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18562 = 1
***loop pid
$18563 = 1
***loop counter
$18564 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18565 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18566 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18567 = 0
***cur state
$18568 = 1
***cur counter
$18569 = 11


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$18570 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18571 = 0
***task
$18572 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18573 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$18574 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18575 = 1
***loop pid
$18576 = 3
***loop counter
$18577 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18578 = 1
***loop pid
$18579 = 4
***loop counter
$18580 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18581 = 1
***loop pid
$18582 = 1
***loop counter
$18583 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18584 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18585 = 0
***task
$18586 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18587 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$18588 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18589 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18590 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18591 = 1
***loop pid
$18592 = 3
***loop counter
$18593 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18594 = 1
***loop pid
$18595 = 4
***loop counter
$18596 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18597 = 1
***loop pid
$18598 = 1
***loop counter
$18599 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18600 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18601 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18602 = 0
***cur state
$18603 = 1
***cur counter
$18604 = 10


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$18605 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18606 = 1
***loop pid
$18607 = 3
***loop counter
$18608 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18609 = 1
***loop pid
$18610 = 4
***loop counter
$18611 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18612 = 1
***loop pid
$18613 = 1
***loop counter
$18614 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18615 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18616 = 0
***task
$18617 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18618 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$18619 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18620 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18621 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18622 = 1
***loop pid
$18623 = 3
***loop counter
$18624 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18625 = 1
***loop pid
$18626 = 4
***loop counter
$18627 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18628 = 1
***loop pid
$18629 = 1
***loop counter
$18630 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18631 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18632 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18633 = 0
***cur state
$18634 = 1
***cur counter
$18635 = 10


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$18636 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18637 = 1
***loop pid
$18638 = 3
***loop counter
$18639 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18640 = 1
***loop pid
$18641 = 4
***loop counter
$18642 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18643 = 1
***loop pid
$18644 = 1
***loop counter
$18645 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18646 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18647 = 0
***task
$18648 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18649 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$18650 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18651 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18652 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18653 = 1
***loop pid
$18654 = 3
***loop counter
$18655 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18656 = 1
***loop pid
$18657 = 4
***loop counter
$18658 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18659 = 1
***loop pid
$18660 = 1
***loop counter
$18661 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18662 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18663 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18664 = 0
***cur state
$18665 = 1
***cur counter
$18666 = 10


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$18667 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18668 = 1
***loop pid
$18669 = 3
***loop counter
$18670 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18671 = 1
***loop pid
$18672 = 4
***loop counter
$18673 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18674 = 1
***loop pid
$18675 = 1
***loop counter
$18676 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18677 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18678 = 0
***task
$18679 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18680 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$18681 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18682 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18683 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18684 = 1
***loop pid
$18685 = 3
***loop counter
$18686 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18687 = 1
***loop pid
$18688 = 4
***loop counter
$18689 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18690 = 1
***loop pid
$18691 = 1
***loop counter
$18692 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18693 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18694 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18695 = 0
***cur state
$18696 = 1
***cur counter
$18697 = 10


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$18698 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18699 = 1
***loop pid
$18700 = 3
***loop counter
$18701 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18702 = 1
***loop pid
$18703 = 4
***loop counter
$18704 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18705 = 1
***loop pid
$18706 = 1
***loop counter
$18707 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18708 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18709 = 0
***task
$18710 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18711 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$18712 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18713 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18714 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18715 = 1
***loop pid
$18716 = 3
***loop counter
$18717 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18718 = 1
***loop pid
$18719 = 4
***loop counter
$18720 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18721 = 1
***loop pid
$18722 = 1
***loop counter
$18723 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18724 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18725 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18726 = 0
***cur state
$18727 = 1
***cur counter
$18728 = 10


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$18729 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18730 = 1
***loop pid
$18731 = 3
***loop counter
$18732 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18733 = 1
***loop pid
$18734 = 4
***loop counter
$18735 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18736 = 1
***loop pid
$18737 = 1
***loop counter
$18738 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18739 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18740 = 0
***task
$18741 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18742 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$18743 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18744 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18745 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18746 = 1
***loop pid
$18747 = 3
***loop counter
$18748 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18749 = 1
***loop pid
$18750 = 4
***loop counter
$18751 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18752 = 1
***loop pid
$18753 = 1
***loop counter
$18754 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18755 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18756 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18757 = 0
***cur state
$18758 = 1
***cur counter
$18759 = 10


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$18760 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18761 = 1
***loop pid
$18762 = 3
***loop counter
$18763 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18764 = 1
***loop pid
$18765 = 4
***loop counter
$18766 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18767 = 1
***loop pid
$18768 = 1
***loop counter
$18769 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18770 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18771 = 0
***task
$18772 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18773 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$18774 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18775 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18776 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18777 = 1
***loop pid
$18778 = 3
***loop counter
$18779 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18780 = 1
***loop pid
$18781 = 4
***loop counter
$18782 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18783 = 1
***loop pid
$18784 = 1
***loop counter
$18785 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18786 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18787 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18788 = 0
***cur state
$18789 = 1
***cur counter
$18790 = 10


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$18791 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18792 = 1
***loop pid
$18793 = 3
***loop counter
$18794 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18795 = 1
***loop pid
$18796 = 4
***loop counter
$18797 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18798 = 1
***loop pid
$18799 = 1
***loop counter
$18800 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18801 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18802 = 0
***task
$18803 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18804 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$18805 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18806 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18807 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18808 = 1
***loop pid
$18809 = 3
***loop counter
$18810 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18811 = 1
***loop pid
$18812 = 4
***loop counter
$18813 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18814 = 1
***loop pid
$18815 = 1
***loop counter
$18816 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18817 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18818 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18819 = 0
***cur state
$18820 = 1
***cur counter
$18821 = 10


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$18822 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18823 = 1
***loop pid
$18824 = 3
***loop counter
$18825 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18826 = 1
***loop pid
$18827 = 4
***loop counter
$18828 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18829 = 1
***loop pid
$18830 = 1
***loop counter
$18831 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18832 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18833 = 0
***task
$18834 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18835 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$18836 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18837 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18838 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18839 = 1
***loop pid
$18840 = 3
***loop counter
$18841 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18842 = 1
***loop pid
$18843 = 4
***loop counter
$18844 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18845 = 1
***loop pid
$18846 = 1
***loop counter
$18847 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18848 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18849 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18850 = 0
***cur state
$18851 = 1
***cur counter
$18852 = 10


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$18853 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18854 = 1
***loop pid
$18855 = 3
***loop counter
$18856 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18857 = 1
***loop pid
$18858 = 4
***loop counter
$18859 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18860 = 1
***loop pid
$18861 = 1
***loop counter
$18862 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18863 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18864 = 0
***task
$18865 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18866 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$18867 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18868 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18869 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18870 = 1
***loop pid
$18871 = 3
***loop counter
$18872 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18873 = 1
***loop pid
$18874 = 4
***loop counter
$18875 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18876 = 1
***loop pid
$18877 = 1
***loop counter
$18878 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18879 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18880 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18881 = 0
***cur state
$18882 = 1
***cur counter
$18883 = 10


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$18884 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18885 = 1
***loop pid
$18886 = 3
***loop counter
$18887 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18888 = 1
***loop pid
$18889 = 4
***loop counter
$18890 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18891 = 1
***loop pid
$18892 = 1
***loop counter
$18893 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18894 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18895 = 0
***task
$18896 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18897 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$18898 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18899 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18900 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18901 = 1
***loop pid
$18902 = 3
***loop counter
$18903 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18904 = 1
***loop pid
$18905 = 4
***loop counter
$18906 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18907 = 1
***loop pid
$18908 = 1
***loop counter
$18909 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18910 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18911 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18912 = 0
***cur state
$18913 = 1
***cur counter
$18914 = 10


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$18915 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18916 = 1
***loop pid
$18917 = 3
***loop counter
$18918 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18919 = 1
***loop pid
$18920 = 4
***loop counter
$18921 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18922 = 1
***loop pid
$18923 = 1
***loop counter
$18924 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18925 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18926 = 0
***task
$18927 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18928 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$18929 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18930 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18931 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18932 = 1
***loop pid
$18933 = 3
***loop counter
$18934 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18935 = 1
***loop pid
$18936 = 4
***loop counter
$18937 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18938 = 1
***loop pid
$18939 = 1
***loop counter
$18940 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18941 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18942 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18943 = 0
***cur state
$18944 = 1
***cur counter
$18945 = 10


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$18946 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18947 = 1
***loop pid
$18948 = 3
***loop counter
$18949 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18950 = 1
***loop pid
$18951 = 4
***loop counter
$18952 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18953 = 1
***loop pid
$18954 = 1
***loop counter
$18955 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18956 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18957 = 0
***task
$18958 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18959 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$18960 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18961 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18962 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18963 = 1
***loop pid
$18964 = 3
***loop counter
$18965 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18966 = 1
***loop pid
$18967 = 4
***loop counter
$18968 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18969 = 1
***loop pid
$18970 = 1
***loop counter
$18971 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18972 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$18973 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$18974 = 0
***cur state
$18975 = 1
***cur counter
$18976 = 10


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$18977 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18978 = 1
***loop pid
$18979 = 3
***loop counter
$18980 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18981 = 1
***loop pid
$18982 = 4
***loop counter
$18983 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18984 = 1
***loop pid
$18985 = 1
***loop counter
$18986 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$18987 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$18988 = 0
***task
$18989 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$18990 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$18991 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$18992 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$18993 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18994 = 1
***loop pid
$18995 = 3
***loop counter
$18996 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$18997 = 1
***loop pid
$18998 = 4
***loop counter
$18999 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19000 = 1
***loop pid
$19001 = 1
***loop counter
$19002 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19003 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19004 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19005 = 0
***cur state
$19006 = 1
***cur counter
$19007 = 10


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19008 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19009 = 1
***loop pid
$19010 = 3
***loop counter
$19011 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19012 = 1
***loop pid
$19013 = 4
***loop counter
$19014 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19015 = 1
***loop pid
$19016 = 1
***loop counter
$19017 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19018 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19019 = 0
***task
$19020 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19021 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19022 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19023 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19024 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19025 = 1
***loop pid
$19026 = 3
***loop counter
$19027 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19028 = 1
***loop pid
$19029 = 4
***loop counter
$19030 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19031 = 1
***loop pid
$19032 = 1
***loop counter
$19033 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19034 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19035 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19036 = 0
***cur state
$19037 = 1
***cur counter
$19038 = 10


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19039 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19040 = 1
***loop pid
$19041 = 3
***loop counter
$19042 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19043 = 1
***loop pid
$19044 = 4
***loop counter
$19045 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19046 = 1
***loop pid
$19047 = 1
***loop counter
$19048 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19049 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19050 = 0
***task
$19051 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19052 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19053 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19054 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19055 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19056 = 1
***loop pid
$19057 = 3
***loop counter
$19058 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19059 = 1
***loop pid
$19060 = 4
***loop counter
$19061 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19062 = 1
***loop pid
$19063 = 1
***loop counter
$19064 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19065 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19066 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19067 = 0
***cur state
$19068 = 1
***cur counter
$19069 = 10


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19070 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19071 = 1
***loop pid
$19072 = 3
***loop counter
$19073 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19074 = 1
***loop pid
$19075 = 4
***loop counter
$19076 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19077 = 1
***loop pid
$19078 = 1
***loop counter
$19079 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19080 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19081 = 0
***task
$19082 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19083 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19084 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19085 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19086 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19087 = 0
***task
$19088 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19089 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19090 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19091 = 1
***loop pid
$19092 = 3
***loop counter
$19093 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19094 = 1
***loop pid
$19095 = 4
***loop counter
$19096 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19097 = 1
***loop pid
$19098 = 1
***loop counter
$19099 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19100 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19101 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19102 = 0
***cur state
$19103 = 1
***cur counter
$19104 = 9


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19105 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19106 = 1
***loop pid
$19107 = 3
***loop counter
$19108 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19109 = 1
***loop pid
$19110 = 4
***loop counter
$19111 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19112 = 1
***loop pid
$19113 = 1
***loop counter
$19114 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19115 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19116 = 0
***task
$19117 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19118 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19119 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19120 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19121 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19122 = 1
***loop pid
$19123 = 3
***loop counter
$19124 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19125 = 1
***loop pid
$19126 = 4
***loop counter
$19127 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19128 = 1
***loop pid
$19129 = 1
***loop counter
$19130 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19131 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19132 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19133 = 0
***cur state
$19134 = 1
***cur counter
$19135 = 9


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19136 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19137 = 1
***loop pid
$19138 = 3
***loop counter
$19139 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19140 = 1
***loop pid
$19141 = 4
***loop counter
$19142 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19143 = 1
***loop pid
$19144 = 1
***loop counter
$19145 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19146 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19147 = 0
***task
$19148 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19149 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19150 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19151 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19152 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19153 = 1
***loop pid
$19154 = 3
***loop counter
$19155 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19156 = 1
***loop pid
$19157 = 4
***loop counter
$19158 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19159 = 1
***loop pid
$19160 = 1
***loop counter
$19161 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19162 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19163 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19164 = 0
***cur state
$19165 = 1
***cur counter
$19166 = 9


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19167 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19168 = 1
***loop pid
$19169 = 3
***loop counter
$19170 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19171 = 1
***loop pid
$19172 = 4
***loop counter
$19173 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19174 = 1
***loop pid
$19175 = 1
***loop counter
$19176 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19177 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19178 = 0
***task
$19179 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19180 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19181 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19182 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19183 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19184 = 1
***loop pid
$19185 = 3
***loop counter
$19186 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19187 = 1
***loop pid
$19188 = 4
***loop counter
$19189 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19190 = 1
***loop pid
$19191 = 1
***loop counter
$19192 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19193 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19194 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19195 = 0
***cur state
$19196 = 1
***cur counter
$19197 = 9


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19198 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19199 = 1
***loop pid
$19200 = 3
***loop counter
$19201 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19202 = 1
***loop pid
$19203 = 4
***loop counter
$19204 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19205 = 1
***loop pid
$19206 = 1
***loop counter
$19207 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19208 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19209 = 0
***task
$19210 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19211 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19212 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19213 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19214 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19215 = 1
***loop pid
$19216 = 3
***loop counter
$19217 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19218 = 1
***loop pid
$19219 = 4
***loop counter
$19220 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19221 = 1
***loop pid
$19222 = 1
***loop counter
$19223 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19224 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19225 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19226 = 0
***cur state
$19227 = 1
***cur counter
$19228 = 9


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19229 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19230 = 1
***loop pid
$19231 = 3
***loop counter
$19232 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19233 = 1
***loop pid
$19234 = 4
***loop counter
$19235 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19236 = 1
***loop pid
$19237 = 1
***loop counter
$19238 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19239 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19240 = 0
***task
$19241 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19242 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19243 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19244 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19245 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19246 = 1
***loop pid
$19247 = 3
***loop counter
$19248 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19249 = 1
***loop pid
$19250 = 4
***loop counter
$19251 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19252 = 1
***loop pid
$19253 = 1
***loop counter
$19254 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19255 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19256 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19257 = 0
***cur state
$19258 = 1
***cur counter
$19259 = 9


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19260 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19261 = 1
***loop pid
$19262 = 3
***loop counter
$19263 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19264 = 1
***loop pid
$19265 = 4
***loop counter
$19266 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19267 = 1
***loop pid
$19268 = 1
***loop counter
$19269 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19270 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19271 = 0
***task
$19272 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19273 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19274 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19275 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19276 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19277 = 1
***loop pid
$19278 = 3
***loop counter
$19279 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19280 = 1
***loop pid
$19281 = 4
***loop counter
$19282 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19283 = 1
***loop pid
$19284 = 1
***loop counter
$19285 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19286 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19287 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19288 = 0
***cur state
$19289 = 1
***cur counter
$19290 = 9


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19291 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19292 = 1
***loop pid
$19293 = 3
***loop counter
$19294 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19295 = 1
***loop pid
$19296 = 4
***loop counter
$19297 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19298 = 1
***loop pid
$19299 = 1
***loop counter
$19300 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19301 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19302 = 0
***task
$19303 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19304 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19305 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19306 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19307 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19308 = 1
***loop pid
$19309 = 3
***loop counter
$19310 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19311 = 1
***loop pid
$19312 = 4
***loop counter
$19313 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19314 = 1
***loop pid
$19315 = 1
***loop counter
$19316 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19317 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19318 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19319 = 0
***cur state
$19320 = 1
***cur counter
$19321 = 9


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19322 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19323 = 1
***loop pid
$19324 = 3
***loop counter
$19325 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19326 = 1
***loop pid
$19327 = 4
***loop counter
$19328 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19329 = 1
***loop pid
$19330 = 1
***loop counter
$19331 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19332 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19333 = 0
***task
$19334 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19335 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19336 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19337 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19338 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19339 = 1
***loop pid
$19340 = 3
***loop counter
$19341 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19342 = 1
***loop pid
$19343 = 4
***loop counter
$19344 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19345 = 1
***loop pid
$19346 = 1
***loop counter
$19347 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19348 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19349 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19350 = 0
***cur state
$19351 = 1
***cur counter
$19352 = 9


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19353 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19354 = 1
***loop pid
$19355 = 3
***loop counter
$19356 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19357 = 1
***loop pid
$19358 = 4
***loop counter
$19359 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19360 = 1
***loop pid
$19361 = 1
***loop counter
$19362 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19363 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19364 = 0
***task
$19365 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19366 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19367 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19368 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19369 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19370 = 1
***loop pid
$19371 = 3
***loop counter
$19372 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19373 = 1
***loop pid
$19374 = 4
***loop counter
$19375 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19376 = 1
***loop pid
$19377 = 1
***loop counter
$19378 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19379 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19380 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19381 = 0
***cur state
$19382 = 1
***cur counter
$19383 = 9


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19384 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19385 = 1
***loop pid
$19386 = 3
***loop counter
$19387 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19388 = 1
***loop pid
$19389 = 4
***loop counter
$19390 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19391 = 1
***loop pid
$19392 = 1
***loop counter
$19393 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19394 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19395 = 0
***task
$19396 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19397 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19398 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19399 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19400 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19401 = 1
***loop pid
$19402 = 3
***loop counter
$19403 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19404 = 1
***loop pid
$19405 = 4
***loop counter
$19406 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19407 = 1
***loop pid
$19408 = 1
***loop counter
$19409 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19410 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19411 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19412 = 0
***cur state
$19413 = 1
***cur counter
$19414 = 9


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19415 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19416 = 1
***loop pid
$19417 = 3
***loop counter
$19418 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19419 = 1
***loop pid
$19420 = 4
***loop counter
$19421 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19422 = 1
***loop pid
$19423 = 1
***loop counter
$19424 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19425 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19426 = 0
***task
$19427 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19428 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19429 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19430 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19431 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19432 = 1
***loop pid
$19433 = 3
***loop counter
$19434 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19435 = 1
***loop pid
$19436 = 4
***loop counter
$19437 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19438 = 1
***loop pid
$19439 = 1
***loop counter
$19440 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19441 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19442 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19443 = 0
***cur state
$19444 = 1
***cur counter
$19445 = 9


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19446 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19447 = 1
***loop pid
$19448 = 3
***loop counter
$19449 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19450 = 1
***loop pid
$19451 = 4
***loop counter
$19452 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19453 = 1
***loop pid
$19454 = 1
***loop counter
$19455 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19456 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19457 = 0
***task
$19458 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19459 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19460 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19461 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19462 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19463 = 1
***loop pid
$19464 = 3
***loop counter
$19465 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19466 = 1
***loop pid
$19467 = 4
***loop counter
$19468 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19469 = 1
***loop pid
$19470 = 1
***loop counter
$19471 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19472 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19473 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19474 = 0
***cur state
$19475 = 1
***cur counter
$19476 = 9


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19477 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19478 = 1
***loop pid
$19479 = 3
***loop counter
$19480 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19481 = 1
***loop pid
$19482 = 4
***loop counter
$19483 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19484 = 1
***loop pid
$19485 = 1
***loop counter
$19486 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19487 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19488 = 0
***task
$19489 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19490 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19491 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19492 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19493 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19494 = 1
***loop pid
$19495 = 3
***loop counter
$19496 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19497 = 1
***loop pid
$19498 = 4
***loop counter
$19499 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19500 = 1
***loop pid
$19501 = 1
***loop counter
$19502 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19503 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19504 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19505 = 0
***cur state
$19506 = 1
***cur counter
$19507 = 9


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19508 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19509 = 1
***loop pid
$19510 = 3
***loop counter
$19511 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19512 = 1
***loop pid
$19513 = 4
***loop counter
$19514 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19515 = 1
***loop pid
$19516 = 1
***loop counter
$19517 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19518 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19519 = 0
***task
$19520 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19521 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19522 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19523 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19524 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19525 = 1
***loop pid
$19526 = 3
***loop counter
$19527 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19528 = 1
***loop pid
$19529 = 4
***loop counter
$19530 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19531 = 1
***loop pid
$19532 = 1
***loop counter
$19533 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19534 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19535 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19536 = 0
***cur state
$19537 = 1
***cur counter
$19538 = 9


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19539 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19540 = 1
***loop pid
$19541 = 3
***loop counter
$19542 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19543 = 1
***loop pid
$19544 = 4
***loop counter
$19545 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19546 = 1
***loop pid
$19547 = 1
***loop counter
$19548 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19549 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19550 = 0
***task
$19551 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19552 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19553 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19554 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19555 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19556 = 1
***loop pid
$19557 = 3
***loop counter
$19558 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19559 = 1
***loop pid
$19560 = 4
***loop counter
$19561 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19562 = 1
***loop pid
$19563 = 1
***loop counter
$19564 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19565 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19566 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19567 = 0
***cur state
$19568 = 1
***cur counter
$19569 = 9


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19570 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19571 = 1
***loop pid
$19572 = 3
***loop counter
$19573 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19574 = 1
***loop pid
$19575 = 4
***loop counter
$19576 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19577 = 1
***loop pid
$19578 = 1
***loop counter
$19579 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19580 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19581 = 0
***task
$19582 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19583 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19584 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19585 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19586 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19587 = 1
***loop pid
$19588 = 3
***loop counter
$19589 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19590 = 1
***loop pid
$19591 = 4
***loop counter
$19592 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19593 = 1
***loop pid
$19594 = 1
***loop counter
$19595 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19596 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19597 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19598 = 0
***cur state
$19599 = 1
***cur counter
$19600 = 9


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19601 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19602 = 1
***loop pid
$19603 = 3
***loop counter
$19604 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19605 = 1
***loop pid
$19606 = 4
***loop counter
$19607 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19608 = 1
***loop pid
$19609 = 1
***loop counter
$19610 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19611 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19612 = 0
***task
$19613 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19614 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19615 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19616 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19617 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19618 = 0
***task
$19619 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19620 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19621 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19622 = 1
***loop pid
$19623 = 3
***loop counter
$19624 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19625 = 1
***loop pid
$19626 = 4
***loop counter
$19627 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19628 = 1
***loop pid
$19629 = 1
***loop counter
$19630 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19631 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19632 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19633 = 0
***cur state
$19634 = 1
***cur counter
$19635 = 8


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19636 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19637 = 1
***loop pid
$19638 = 3
***loop counter
$19639 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19640 = 1
***loop pid
$19641 = 4
***loop counter
$19642 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19643 = 1
***loop pid
$19644 = 1
***loop counter
$19645 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19646 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19647 = 0
***task
$19648 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19649 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19650 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19651 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19652 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19653 = 1
***loop pid
$19654 = 3
***loop counter
$19655 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19656 = 1
***loop pid
$19657 = 4
***loop counter
$19658 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19659 = 1
***loop pid
$19660 = 1
***loop counter
$19661 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19662 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19663 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19664 = 0
***cur state
$19665 = 1
***cur counter
$19666 = 8


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19667 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19668 = 1
***loop pid
$19669 = 3
***loop counter
$19670 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19671 = 1
***loop pid
$19672 = 4
***loop counter
$19673 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19674 = 1
***loop pid
$19675 = 1
***loop counter
$19676 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19677 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19678 = 0
***task
$19679 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19680 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19681 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19682 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19683 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19684 = 1
***loop pid
$19685 = 3
***loop counter
$19686 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19687 = 1
***loop pid
$19688 = 4
***loop counter
$19689 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19690 = 1
***loop pid
$19691 = 1
***loop counter
$19692 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19693 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19694 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19695 = 0
***cur state
$19696 = 1
***cur counter
$19697 = 8


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19698 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19699 = 1
***loop pid
$19700 = 3
***loop counter
$19701 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19702 = 1
***loop pid
$19703 = 4
***loop counter
$19704 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19705 = 1
***loop pid
$19706 = 1
***loop counter
$19707 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19708 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19709 = 0
***task
$19710 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19711 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19712 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19713 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19714 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19715 = 1
***loop pid
$19716 = 3
***loop counter
$19717 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19718 = 1
***loop pid
$19719 = 4
***loop counter
$19720 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19721 = 1
***loop pid
$19722 = 1
***loop counter
$19723 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19724 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19725 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19726 = 0
***cur state
$19727 = 1
***cur counter
$19728 = 8


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19729 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19730 = 1
***loop pid
$19731 = 3
***loop counter
$19732 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19733 = 1
***loop pid
$19734 = 4
***loop counter
$19735 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19736 = 1
***loop pid
$19737 = 1
***loop counter
$19738 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19739 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19740 = 0
***task
$19741 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19742 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19743 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19744 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19745 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19746 = 1
***loop pid
$19747 = 3
***loop counter
$19748 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19749 = 1
***loop pid
$19750 = 4
***loop counter
$19751 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19752 = 1
***loop pid
$19753 = 1
***loop counter
$19754 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19755 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19756 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19757 = 0
***cur state
$19758 = 1
***cur counter
$19759 = 8


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19760 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19761 = 1
***loop pid
$19762 = 3
***loop counter
$19763 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19764 = 1
***loop pid
$19765 = 4
***loop counter
$19766 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19767 = 1
***loop pid
$19768 = 1
***loop counter
$19769 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19770 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19771 = 0
***task
$19772 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19773 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19774 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19775 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19776 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19777 = 1
***loop pid
$19778 = 3
***loop counter
$19779 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19780 = 1
***loop pid
$19781 = 4
***loop counter
$19782 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19783 = 1
***loop pid
$19784 = 1
***loop counter
$19785 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19786 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19787 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19788 = 0
***cur state
$19789 = 1
***cur counter
$19790 = 8


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19791 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19792 = 1
***loop pid
$19793 = 3
***loop counter
$19794 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19795 = 1
***loop pid
$19796 = 4
***loop counter
$19797 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19798 = 1
***loop pid
$19799 = 1
***loop counter
$19800 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19801 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19802 = 0
***task
$19803 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19804 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19805 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19806 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19807 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19808 = 1
***loop pid
$19809 = 3
***loop counter
$19810 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19811 = 1
***loop pid
$19812 = 4
***loop counter
$19813 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19814 = 1
***loop pid
$19815 = 1
***loop counter
$19816 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19817 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19818 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19819 = 0
***cur state
$19820 = 1
***cur counter
$19821 = 8


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19822 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19823 = 1
***loop pid
$19824 = 3
***loop counter
$19825 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19826 = 1
***loop pid
$19827 = 4
***loop counter
$19828 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19829 = 1
***loop pid
$19830 = 1
***loop counter
$19831 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19832 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19833 = 0
***task
$19834 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19835 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19836 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19837 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19838 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19839 = 1
***loop pid
$19840 = 3
***loop counter
$19841 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19842 = 1
***loop pid
$19843 = 4
***loop counter
$19844 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19845 = 1
***loop pid
$19846 = 1
***loop counter
$19847 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19848 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19849 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19850 = 0
***cur state
$19851 = 1
***cur counter
$19852 = 8


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19853 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19854 = 1
***loop pid
$19855 = 3
***loop counter
$19856 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19857 = 1
***loop pid
$19858 = 4
***loop counter
$19859 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19860 = 1
***loop pid
$19861 = 1
***loop counter
$19862 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19863 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19864 = 0
***task
$19865 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19866 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19867 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19868 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19869 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19870 = 1
***loop pid
$19871 = 3
***loop counter
$19872 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19873 = 1
***loop pid
$19874 = 4
***loop counter
$19875 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19876 = 1
***loop pid
$19877 = 1
***loop counter
$19878 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19879 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19880 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19881 = 0
***cur state
$19882 = 1
***cur counter
$19883 = 8


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19884 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19885 = 1
***loop pid
$19886 = 3
***loop counter
$19887 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19888 = 1
***loop pid
$19889 = 4
***loop counter
$19890 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19891 = 1
***loop pid
$19892 = 1
***loop counter
$19893 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19894 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19895 = 0
***task
$19896 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19897 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19898 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19899 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19900 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19901 = 1
***loop pid
$19902 = 3
***loop counter
$19903 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19904 = 1
***loop pid
$19905 = 4
***loop counter
$19906 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19907 = 1
***loop pid
$19908 = 1
***loop counter
$19909 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19910 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19911 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19912 = 0
***cur state
$19913 = 1
***cur counter
$19914 = 8


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19915 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19916 = 1
***loop pid
$19917 = 3
***loop counter
$19918 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19919 = 1
***loop pid
$19920 = 4
***loop counter
$19921 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19922 = 1
***loop pid
$19923 = 1
***loop counter
$19924 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19925 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19926 = 0
***task
$19927 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19928 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19929 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19930 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19931 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19932 = 1
***loop pid
$19933 = 3
***loop counter
$19934 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19935 = 1
***loop pid
$19936 = 4
***loop counter
$19937 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19938 = 1
***loop pid
$19939 = 1
***loop counter
$19940 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19941 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19942 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19943 = 0
***cur state
$19944 = 1
***cur counter
$19945 = 8


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19946 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19947 = 1
***loop pid
$19948 = 3
***loop counter
$19949 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19950 = 1
***loop pid
$19951 = 4
***loop counter
$19952 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19953 = 1
***loop pid
$19954 = 1
***loop counter
$19955 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19956 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19957 = 0
***task
$19958 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19959 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19960 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19961 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19962 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19963 = 1
***loop pid
$19964 = 3
***loop counter
$19965 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19966 = 1
***loop pid
$19967 = 4
***loop counter
$19968 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19969 = 1
***loop pid
$19970 = 1
***loop counter
$19971 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19972 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$19973 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$19974 = 0
***cur state
$19975 = 1
***cur counter
$19976 = 8


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$19977 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19978 = 1
***loop pid
$19979 = 3
***loop counter
$19980 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19981 = 1
***loop pid
$19982 = 4
***loop counter
$19983 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19984 = 1
***loop pid
$19985 = 1
***loop counter
$19986 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$19987 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$19988 = 0
***task
$19989 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$19990 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$19991 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$19992 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$19993 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19994 = 1
***loop pid
$19995 = 3
***loop counter
$19996 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$19997 = 1
***loop pid
$19998 = 4
***loop counter
$19999 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20000 = 1
***loop pid
$20001 = 1
***loop counter
$20002 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$20003 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$20004 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$20005 = 0
***cur state
$20006 = 1
***cur counter
$20007 = 8


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$20008 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20009 = 1
***loop pid
$20010 = 3
***loop counter
$20011 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20012 = 1
***loop pid
$20013 = 4
***loop counter
$20014 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20015 = 1
***loop pid
$20016 = 1
***loop counter
$20017 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$20018 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$20019 = 0
***task
$20020 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$20021 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$20022 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$20023 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$20024 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20025 = 1
***loop pid
$20026 = 3
***loop counter
$20027 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20028 = 1
***loop pid
$20029 = 4
***loop counter
$20030 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20031 = 1
***loop pid
$20032 = 1
***loop counter
$20033 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$20034 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$20035 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$20036 = 0
***cur state
$20037 = 1
***cur counter
$20038 = 8


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$20039 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20040 = 1
***loop pid
$20041 = 3
***loop counter
$20042 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20043 = 1
***loop pid
$20044 = 4
***loop counter
$20045 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20046 = 1
***loop pid
$20047 = 1
***loop counter
$20048 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$20049 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$20050 = 0
***task
$20051 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$20052 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$20053 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$20054 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$20055 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20056 = 1
***loop pid
$20057 = 3
***loop counter
$20058 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20059 = 1
***loop pid
$20060 = 4
***loop counter
$20061 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20062 = 1
***loop pid
$20063 = 1
***loop counter
$20064 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$20065 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$20066 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$20067 = 0
***cur state
$20068 = 1
***cur counter
$20069 = 8


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$20070 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20071 = 1
***loop pid
$20072 = 3
***loop counter
$20073 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20074 = 1
***loop pid
$20075 = 4
***loop counter
$20076 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20077 = 1
***loop pid
$20078 = 1
***loop counter
$20079 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$20080 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$20081 = 0
***task
$20082 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$20083 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$20084 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$20085 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss             0x10	16
***cur register esp
esp            0x2320c	0x2320c <init_task+4076>
***cur register cs
cs             0x8	8
***cur register ds
ds             0x17	23
***cur register es
es             0x17	23
***cur register fs
fs             0x17	23
***cur register eax
eax            0x1d	29
***cur register ebx
ebx            0x22000	139264
***cur register ecx
ecx            0x55e8	21992
***cur register edx
edx            0x21	33


Breakpoint 9, system_call () at system_call.s:94
94		call *sys_call_table(,%eax,4)
---in system_call
___pid
$20086 = 0
***push ds
***push es
***push fs
***push edx
***push ecx
***push ebx
***cur register ss
ss             0x10	16
***cur register es
es             0x10	16
***cur register fs
fs             0x17	23


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00006f31 in sys_pause () at sched.c:147
#2  0x0000793f in system_call () at system_call.s:94
#3  0x00022000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20087 = 1
***loop pid
$20088 = 3
***loop counter
$20089 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20090 = 1
***loop pid
$20091 = 4
***loop counter
$20092 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20093 = 1
***loop pid
$20094 = 1
***loop counter
$20095 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$20096 = 0


Breakpoint 20, system_call () at system_call.s:95
95		pushl %eax
---in system_call
___pid
$20097 = 0
***eax as return
eax            0x0	0
***push eax


Breakpoint 21, system_call () at system_call.s:97
97		cmpl $0,state(%eax)		# state
---in system_call
___pid
$20098 = 0
***cur state
$20099 = 1
***cur counter
$20100 = 8


Breakpoint 22, reschedule () at system_call.s:77
77		pushl $ret_from_sys_call
---in reschedule
___pid
$20101 = 0


Breakpoint 37, schedule () at sched.c:111
111		for(p = &LAST_TASK ; p > &FIRST_TASK ; --p)
---in schedule
***process loop for alarm and signal
***call stack
#0  schedule () at sched.c:111
#1  0x00007950 in system_call () at system_call.s:100
#2  0x00000000 in ?? ()


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20102 = 1
***loop pid
$20103 = 3
***loop counter
$20104 = 27


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20105 = 1
***loop pid
$20106 = 4
***loop counter
$20107 = 13


Breakpoint 40, schedule () at sched.c:132
132				if ((*p)->state == TASK_RUNNING && (*p)->counter > c)
---in schedule
***in loop2
***loop state
$20108 = 1
***loop pid
$20109 = 1
***loop counter
$20110 = 28


Breakpoint 43, schedule () at sched.c:141
141		switch_to(next);
---in schedule
***task switch to
$20111 = 0


Breakpoint 23, ret_from_sys_call () at system_call.s:103
103		cmpl task,%eax
---in ret_from_sys_call
___pid
$20112 = 0
***task
$20113 = {0x22220 <init_task>, 0xfff000, 0xffd000, 0xfc1000, 
  0x0 <startup_32> <repeats 60 times>}
***current
$20114 = (struct task_struct *) 0x22220 <init_task>


Breakpoint 30, ret_from_sys_call () at system_call.s:121
121	3:	popl %eax
---in ret_from_sys_call
___pid
$20115 = 0
***pop eax
***pop ebx
***pop ecx
***pop edx
***pop fs
***pop es
***pop ds
***pop old eip
***pop old cs
***pop old eflags
***pop old esp
***pop old ss


Breakpoint 8, system_call () at system_call.s:82
82		ja bad_sys_call
---in system_call
___pid
$20116 = 0
***had push ss
***had push esp
***had push eflags
***had push cs
***had push eip
***cur register ss
ss 